angular.module("app",["ui.router","ui.bootstrap","userControllers","userServices","mainController","authServices","emailController"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptors")}]);var app=angular.module("app");app.config(["$stateProvider","$urlRouterProvider","$locationProvider",function(e,t,a){t.otherwise("/"),e.state("app",{url:"/",views:{header:{templateUrl:"/menues/mainMenu.html",controller:"MainMenuController"},content:{templateUrl:"/categories/home.html"},footer:{templateUrl:"/company/footer.html"}}}).state("registerStep1",{url:"/register/step1",controller:"regCtrl",controllerAs:"register",templateUrl:"/isLoggedOut/registerStep1.html",authenticated:!1}).state("registerStep2",{url:"/register/step2",controller:"regCtrl",controllerAs:"register",templateUrl:"/isLoggedOut/registerStep2.html",authenticated:!1}).state("resetusername",{url:"/resetusername",templateUrl:"/users/reset/username.html",controller:"usernameCtrl",controllerAs:"username"}).state("resetpassword",{url:"/resetpassword",templateUrl:"/users/reset/password.html",controller:"passwordCtrl",controllerAs:"password"}).state("reset",{url:"/reset/:token",templateUrl:"/users/reset/newpassword.html",controller:"resetCtrl",controllerAs:"reset"}).state("activate",{url:"/activate/:token",templateUrl:"/users/activation/activate.html",controller:"emailCtrl",controllerAs:"email"}).state("resend",{url:"/resend",templateUrl:"/users/activation/resend.html",controller:"resendCtrl",controllerAs:"resend"}).state("app.intro",{url:"intro",views:{"content@":{templateUrl:"/company/intro.html",authenticated:!1}}}).state("app.terms",{url:"terms",views:{"content@":{templateUrl:"/company/terms.html",authenticated:!1}}}).state("app.privacy",{url:"privacy",views:{"content@":{templateUrl:"/company/privacy.html",authenticated:!1}}}).state("app.profiles",{url:"profiles",views:{"content@":{templateUrl:"isLoggedIn/myProfiles.html",controller:"ProfileController",authenticated:!0}}}).state("app.photos",{url:"photos",views:{"content@":{templateUrl:"isLoggedIn/myPhotos.html",controller:"PhotosController",authenticated:!1}}}).state("app.upload",{url:"upload",views:{"content@":{templateUrl:"isLoggedIn/upload.html",controller:"UploadPhotoController",controllerAs:"upload",authenticated:!0}}}).state("app.artist",{url:"artist",views:{"content@":{templateUrl:"categories/artist.html",controller:"ArtistController",authenticated:!1},"artist-header@app.artist":{templateUrl:"/menues/subMenu.html",controller:"ArtistMenuController",authenticated:!1}}}).state("app.artist.categories",{url:"/categories=:code",views:{"detail@app.artist":{templateUrl:"/partialArtist/content.html",controller:"ArtistMenuController",authenticated:!1}}}).state("app.artist.show",{url:"/:artist_id",views:{"content@":{templateUrl:"/partialArtist/artist.html",controller:"ArtistController",authenticated:!1}}}).state("app.gallery",{url:"gallery",views:{"content@":{templateUrl:"categories/gallery.html",controller:"GalleryController",authenticated:!1},"gallery-header@app.gallery":{templateUrl:"/menues/subMenu.html",controller:"GalleryMenuController",authenticated:!1}}}).state("app.gallery.categories",{url:"/categories=:code",views:{"detail@app.gallery":{templateUrl:"/partialGallery/content.html",controller:"GalleryMenuController",authenticated:!1}}}).state("app.gallery.show",{url:"/categories=:photo_type/photos:photo_id",views:{"content@":{templateUrl:"/partialGallery/photo.html",controller:"GalleryController",authenticated:!1}}}).state("app.gallery.edit",{url:"/edit/:photo_id",views:{"content@":{templateUrl:"/partialGallery/photoEdit.html",controller:"GalleryController",authenticated:!0}}}).state("app.display",{url:"display",views:{"content@":{templateUrl:"categories/display.html",authenticated:!1},"display-header@app.display":{templateUrl:"/menues/subMenu.html",controller:"displayMenuController",authenticated:!1}}}).state("app.display.categories",{url:"/categories=:code",views:{"detail@app.display":{templateUrl:"/partialDisplay/content.html",controller:"displayMenuController",authenticated:!1}}}).state("app.board",{url:"board",views:{"content@":{templateUrl:"categories/board.html",controller:"BoardController",authenticated:!1},"board-header@app.board":{templateUrl:"/menues/boardMenu.html",controller:"BoardMenuController",authenticated:!1}}}).state("app.board.categories",{url:"/categories=:code",views:{"content@app.board":{templateUrl:"/partialBoard/content.html",controller:"BoardMenuController",authenticated:!1}}}).state("app.board.create",{url:"/create",views:{"content@app.board":{controller:"BoardController",templateUrl:"/partialBoard/boardCreate.html",authenticated:!0}}}).state("app.board.show",{url:"/:board_id",views:{"content@app.board":{controller:"BoardController",templateUrl:"partialBoard/article.html",authenticated:!1}}}).state("app.board.edit",{url:"/edit/:board_id",views:{"content@app.board":{controller:"BoardController",templateUrl:"partialBoard/boardUpdate.html",authenticated:!0}}})}]),angular.module("app").controller("CommentController",["$scope","$http","$stateParams","$state","$window",function(e,t,a,n,o){e.userComment=!1,e.getComment=function(){var n=a.photo_id,o=a.board_id,r="",s={photo_id:n,board_id:o},i={params:s,headers:{Accept:"application/json"}};n?(r=n,t.get("/api/comment/"+r,i).then(function(t){e.comments=t.data[0]})):o?(r=o,t.get("/api/comment/"+r,i).then(function(t){e.comments=t.data[0]})):e.comments="시스템이 불안정합니다."},e.addComment=function(e,a){if(a){var r=e.board_id,s=e.photo_id,i=e.comment;t.post("/api/comment",{board_id:r,photo_id:s,comment:i}).then(function(e){n.reload()})}else o.alert("댓글을 입력해주세요.")},e.deleteComment=function(e){var a=e.comment_id;t.delete("/api/comment/"+a).then(function(e){n.reload()})}}]),angular.module("app").controller("OpinionController",["$scope","$http","$stateParams",function(e,t,a){e.doLikeStatus=!0,e.doLike=function(){e.doLikeStatus=!e.doLikeStatus},e.getOpinion=function(n){var o=a.id;t.get("/api/opinion/"+o).then(function(t){e.opinionInfo=t.data[0][0]})}}]),angular.module("app").directive("fileModel",["$parse",function(e){return{restrict:"A",link:function(t,a,n){var o=e(n.fileModel),r=o.assign;a.bind("change",function(){t.$apply(function(){r(t,a[0].files[0])})})}}}]),angular.module("app").directive("match",function(){return{restrict:"A",controller:["$scope",function(e){e.doConfirm=function(t){e.confirmed=!1,t.forEach(function(t){e.confirm==t?e.confirmed=!0:e.confirmed=!1})}}],link:function(e,t,a){a.$observe("match",function(){e.matches=JSON.parse(a.match),e.doConfirm(e.matches)}),e.$watch("confirm",function(){e.matches=JSON.parse(a.match),e.doConfirm(e.matches)})}}}),angular.module("authServices",[]).factory("Auth",["$http","AuthToken",function(e,t){var a={};return a.getUser=function(){if(t.getToken())return e.post("/api/me");$q.reject({message:"User has no token"})},a.login=function(a){return e.post("/api/authenticate",a).then(function(e){return t.setToken(e.data.token),e})},a.isLoggedIn=function(){return!!t.getToken()},a.logout=function(){t.setToken()},a}]).factory("AuthToken",["$window",function(e){var t={};return t.setToken=function(t){t?e.localStorage.setItem("token",t):e.localStorage.removeItem("token",t)},t.getToken=function(){return e.localStorage.getItem("token")},t}]).factory("AuthInterceptors",["AuthToken",function(e){var t={};return t.request=function(t){var a=e.getToken();return a&&(t.headers["x-access-token"]=a),t},t}]),angular.module("app").service("uploadFile",["$http","$stateParams",function(e,t){this.upload=function(t){var a=new FormData;return a.append("myfile",t.upload),e.post("/api/upload",a,{transformRequest:angular.identity,headers:{"Content-Type":void 0}})}}]),angular.module("userServices",[]).factory("User",["$http",function(e){return userFactory={},userFactory.create=function(t){return e.post("/api/users",t)},userFactory.activeAccount=function(t){return e.put("/api/activate/"+t)},userFactory.checkCredentials=function(t){return e.post("/api/resend",t)},userFactory.resendLink=function(t){return e.put("/api/resend",t)},userFactory.sendUsername=function(t){return e.get("/api/resetusername/"+t)},userFactory.sendPassword=function(t){return e.put("/api/resetpassword",t)},userFactory.resetPassword=function(t){return e.get("/api/resetpassword/"+t)},userFactory.savePassword=function(t){return e.put("/api/savepassword",t)},userFactory.renewSession=function(t){return e.get("/api/renewToken/"+t)},userFactory.resetPermission=function(t){return e.put("/api/users/",t)},userFactory.checkPermission=function(t){return e.get("/api/users/"+t)},userFactory}]),angular.module("app").controller("ArtistController",["$scope","$http","$stateParams",function(e,t,a){e.getArtist=function(){var n=a.artist_id;t.get("/api/artist/"+n).then(function(t){e.artistInfo=t.data})}}]),angular.module("app").controller("BoardController",["$scope","$location","$http","$stateParams",function(e,t,a,n){e.data={availableOptions:[{id:"-1",name:"카테고리를 선택해주세요."},{id:"0",name:"공지사항"},{id:"1",name:"학원/홍보"},{id:"2",name:"모임/스터디"}],selectedOption:{id:"-1",name:"카테고리를 선택해주세요."}},e.userArticle=!1,e.addBoard=function(n,o){var r=e.data.selectedOption.id;a.post("/api/boardMenu",{title:n,content:o,board_type:r}).then(function(e){}),t.path("app.board")},e.showBoard=function(){var t=n.board_id;a.get("/api/board/"+t).then(function(t){t.data[1].success?(e.userArticle=!0,e.board=t.data[0][0]):(e.userArticle=!1,e.board=t.data[0][0])})},e.deleteBoard=function(){var e=n.board_id;a.delete("/api/board/"+e).then(function(e){t.path("app.board.category({code: 0})")})},e.updateBoard=function(){var o=n.board_id;a.put("/api/board/"+o,e.board).then(function(a){e.board=a.data,t.path("board")})}}]),angular.module("app").controller("GalleryController",["$scope","$http","$timeout","$stateParams","$location","$window",function(e,t,a,n,o,r){e.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."},{id:"1",name:"캘리그라피"},{id:"2",name:"서예"},{id:"3",name:"문인화"},{id:"4",name:"전각"},{id:"5",name:"음각"}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},e.deletePhoto=function(){var e=n.photo_id;t.delete("/api/gallery/"+e).then(function(e){o.path("app.gallery.category({code: 0})")})},e.getphoto=function(){var a=n.photo_id;t.get("/api/gallery/"+a).then(function(t){t.data[1].success?(e.userArticle=!0,e.photo=t.data[0][0]):(e.userArticle=!1,e.photo=t.data[0][0])})},e.getRelatedPic=function(){var a=n.photo_type;t.get("/api/galleryMenu/"+a).then(function(t){e.photos=t.data})},e.file={},e.insertPhoto=function(){e.uploading=!0;var a=new FormData;a.append("myfile",e.file.upload),t.post("/api/upload/",a,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(t){2===t.data.length?(r.alert(t.data[1].message),e.uploading=!1,e.mainImagePath=t.data[0],e.mainImageStatus=!0,e.file={}):(r.alert(t.data.message),e.uploading=!1,e.mainImageStatus=!1,e.file={})})},e.mainPhotoChanged=function(t){if(t.length>0&&t[0].name.match(/\.(png|jpeg|jpg)$/)){e.uploading=!0;var n=t[0],o=new FileReader;o.readAsDataURL(n),o.onload=function(t){a(function(){e.mainThumbnail={},e.mainThumbnail.dataUrl=t.target.result,e.uploading=!1,e.message=!1},2e3)}}else e.mainThumbnail={},e.message=!1},e.insertPhotoInfo=function(a,n){"0"===e.data.selectedOption.id?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="카테고리를 선택해주세요."):e.mainImageStatus?t.post("/api/myProfile/",{title:a,detail:n,mainImage:e.mainImagePath,type:e.data.selectedOption.id}).then(function(t){e.mainMessageStatus=!0,e.alert="alert alert-success",e.mainMessage=t.data.message}):(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="정보를 입력해주세요.")},e.insertPhotoInfo=function(){"0"===e.data.selectedOption.id?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="카테고리를 선택해주세요."):void 0===e.photo.photo_title||null===e.photo.photo_title?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="작품 제목을 입력해주세요."):void 0===e.photo.photo_detail||null===e.photo.photo_detail?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="작품 설명을 입력해주세요."):void 0===e.mainImagePath||null===e.mainImagePath?(e.mainImagePath=e.photo.photo_path,e.mainImageStatus=!0,t.put("/api/gallery/",{photo_id:e.photo.photo_id,title:e.photo.photo_title,detail:e.photo.photo_detail,mainImage:e.mainImagePath,type:e.data.selectedOption.id}).then(function(t){e.mainMessageStatus=!0,e.alert="alert alert-success",e.mainMessage="정보가 변경되었습니다."})):e.mainImageStatus?t.put("/api/gallery/",{photo_id:e.photo.photo_id,title:e.photo.photo_title,detail:e.photo.photo_detail,mainImage:e.mainImagePath,type:e.data.selectedOption.id}).then(function(t){e.mainMessageStatus=!0,e.alert="alert alert-success",e.mainMessage="정보가 변경되었습니다."}):(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="정보를 입력해주세요.")}}]),angular.module("app").controller("HomeCtrl",["$http","$scope",function(e,t){t.getContent=function(){e.get("/api/home").then(function(e){t.photos=e.data})}}]),angular.module("app").controller("PhotosController",["$scope","$http",function(e,t){e.getArtist=function(){t.get("/api/myPhotos/").then(function(t){e.artistInfo=t.data})}}]),angular.module("app").controller("ProfileController",["$scope","$http",function(e,t){e.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."},{id:"1",name:"캘리그라피"},{id:"2",name:"서예"},{id:"3",name:"문인화"},{id:"4",name:"전각"},{id:"5",name:"음각"}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},e.history=[],e.skills=[],e.addSkill=function(t){e.skills.length>"4"?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="히스토리 등록은 5개로 제한됩니다."):void 0===e.newSkill||null===e.newSkill||""===e.newSkill?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="히스토리를 입력해주세요."):(e.mainMessageStatus=!0,e.skills.push({title:e.newSkill,done:!1}),e.newSkill="",e.history=e.skills)},e.deleteSkill=function(t){e.skills.splice(t,1)},e.getUserDetail=function(){t.get("/api/myProfileTap2/").then(function(t){e.userInfo2=t.data})},e.insertUserDetail=function(a){"0"===e.data.selectedOption.id?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="카테고리를 선택해주세요."):void 0===a.short_info||null===a.short_info||""===a.short_info?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="한 줄 소개를 입력해주세요."):void 0===a.detail_info||null===a.detail_info||""===a.detail_info?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="상세소개를 입력해주세요."):void 0===a.social_site||null===a.social_site||""===a.social_site?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="대표 사이트를 입력해주세요."):void 0===a.public_email||null===a.public_email||""===a.public_email?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="공개 이메일을 입력해주세요."):t.put("/api/myProfileTap2/",{response:a,user_type:e.data.selectedOption.id}).then(function(t){t.data.success?(e.mainMessageStatus=!0,e.alert="alert alert-success",e.mainMessage=t.data.message):(e.mainMessageStatus=!0,e.alert="alert alert-success",e.mainMessage=t)})},e.getUserProfile=function(){t.get("/api/myProfileTap1/").then(function(t){"admin"===t.data.permission||"moderator"===t.data.permission?(e.checkboxModel={value:!0},e.userSetting=t.data):(e.checkboxModel={value:!1},e.userSetting=t.data)})},e.updateUserInfo=function(){var a=e.checkboxModel.value,n=e.userSetting.permission,o=e.userSetting,r=e.userSetting.is_enrolled;a?r?(n="moderator",t.put("/api/myProfileTap1/",{permission:n,response:o,is_enrolled:"1"}).then(function(e){$window.location.reload()})):(UserSvc.created(),n="moderator",t.put("/api/myProfileTap1/",{permission:n,response:o,is_enrolled:"1"}).then(function(e){$window.location.reload()})):(n="user",t.put("/api/myProfileTap1/",{permission:n,response:o,is_enrolled:"1"}).then(function(e){$window.location.reload()}))},e.file={},e.photoChanged=function(t){if(t.length>0&&t[0].name.match(/\.(png|jpeg|jpg)$/)){var a=t[0],n=new FileReader;n.readAsDataURL(a),n.onload=function(t){$timeout(function(){e.thumbnail={},e.thumbnail.dataUrl=t.target.result,e.uploading=!1,e.message=!1})}}else e.thumbnail={},e.message=!1},e.updateProfileImage=function(){e.$emit("LOAD");var a=new FormData;a.append("myfile",e.file.upload),t.put("/api/myProfileImage/",a,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(t){t.data.success?(e.$emit("UNLOAD"),e.alert="alert alert-success",e.message=t.data.message,e.file={}):(e.$emit("UNLOAD"),e.alert="alert alert-danger",e.message=t.data.message,e.file={})})}}]),angular.module("app").controller("UploadDisplayController",["$scope","$http","$timeout",function(e,t,a){e.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."},{id:"1",name:"전시회"},{id:"2",name:"공모전"},{id:"3",name:"휘호대회"}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},e.file={},e.mainPhotoChanged=function(t){if(t.length>0&&t[0].name.match(/\.(png|jpeg|jpg)$/)){e.uploading=!0;var n=t[0],o=new FileReader;o.readAsDataURL(n),o.onload=function(t){a(function(){e.mainThumbnail={},e.mainThumbnail.dataUrl=t.target.result,e.uploading=!1,e.displayMessage=!1})}}else e.mainThumbnail={},e.displayMessage=!1},e.insertDisplayTemp=function(){var a=new FormData;e.$emit("LOAD"),a.append("myfile",e.file.upload),t.post("/api/uploadDisplayTemp/",a,{entitiy:!0,transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(t){2===t.data.length?(e.$emit("UNLOAD"),e.alert="alert alert-success",e.displayMessage=t.data[1].message,e.mainImagePath=t.data[0],e.mainImageStatus=!0,e.file={}):(e.$emit("UNLOAD"),e.alert="alert alert-danger",e.displayMessage=t.data.message,e.mainImageStatus=!1,e.file={})})},e.insertDisplay=function(a,n){"0"===e.data.selectedOption.id?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="카테고리를 선택해주세요."):void 0===e.mainImagePath||null===e.mainImagePath?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="이미지를 업로드해주세요."):void 0===a||null===a?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="작품 제목을 입력해주세요."):void 0===n||null===n?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="작품 설명을 입력해주세요."):e.mainImageStatus?t.post("/api/uploadDisplay/",{title:a,detail:n,mainImage:e.mainImagePath,type:e.data.selectedOption.id}).then(function(t){e.mainMessageStatus=!0,e.alert="alert alert-success",e.mainMessage=t.data.message}):(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="정보를 입력해주세요.")}}]),angular.module("app").controller("UploadPhotoController",["$scope","$http","$timeout","uploadFile","$state","$stateParams","$location","$window",function(e,t,a,n,o,r,s,i){e.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."},{id:"1",name:"캘리그라피"},{id:"2",name:"서예"},{id:"3",name:"문인화"}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},e.file={},e.mainPhotoChanged=function(t){if(t.length>0&&t[0].name.match(/\.(png|jpeg|jpg)$/)){e.uploading=!0;var n=t[0],o=new FileReader;o.readAsDataURL(n),o.onload=function(t){a(function(){e.mainThumbnail={},e.mainThumbnail.dataUrl=t.target.result,e.uploading=!1,e.message=!1})}}else e.mainThumbnail={},e.message=!1},e.insertPhotoTemp=function(){var a=new FormData;e.$emit("LOAD"),a.append("myfile",e.file.upload),t.post("/api/uploadTemp/",a,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(t){2===t.data.length?(e.$emit("UNLOAD"),e.alert="alert alert-success",e.message=t.data[1].message,e.mainImagePath=t.data[0],e.mainImageStatus=!0,e.file={}):(e.$emit("UNLOAD"),e.alert="alert alert-danger",e.message=t.data.message,e.mainImageStatus=!1,e.file={})})},e.insertPhoto=function(a,n){"0"===e.data.selectedOption.id?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="카테고리를 선택해주세요."):void 0===e.mainImagePath||null===e.mainImagePath?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="이미지를 업로드해주세요."):void 0===a||null===a?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="작품 제목을 입력해주세요."):void 0===n||null===n?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="작품 설명을 입력해주세요."):e.mainImageStatus?t.post("/api/upload/",{title:a,detail:n,mainImage:e.mainImagePath,type:e.data.selectedOption.id,user_id:e.main.user.user_id}).then(function(t){e.mainMessageStatus=!0,e.alert="alert alert-success",e.mainMessage=t.data.message}):(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="정보를 입력해주세요.")}}]),angular.module("emailController",["userServices"]).controller("emailCtrl",["$stateParams","User","$timeout","$state",function(e,t,a,n){var o=this;t.activeAccount(e.token).then(function(e){o.successMsg=!1,o.errorMsg=!1,e.data.success?(o.disabled=!0,o.successMsg=e.data.message+"...메인 페이지로 이동합니다.",a(function(){n.go("app")},2e3)):(o.errorMsg=e.data.message+"...메인 페이지로 이동합니다.",a(function(){n.go("app")},2e3))})}]).controller("resendCtrl",["User","$timeout","$state",function(e,t,a){app=this,this.checkCredentials=function(n){app.successMsg=!1,app.errorMsg=!1,app.disabled=!0,e.checkCredentials(this.loginData).then(function(n){n.data.success?e.resendLink(app.loginData).then(function(e){e.data.success&&(app.disabled=!0,app.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3))}):(app.disabled=!1,app.errorMsg=n.data.message)})}}]).controller("usernameCtrl",["User","$timeout","$state",function(e,t,a){var n=this;this.sendUsername=function(o,r){n.errorMsg=!1,n.disabled=!0,r?e.sendUsername(n.userData.email).then(function(e){e.data.success?(n.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3)):(n.disabled=!1,n.errorMsg=e.data.message)}):(n.disabled=!1,n.errorMsg="올바른 이메일 주소가 아닙니다.")}}]).controller("passwordCtrl",["User","$timeout","$state",function(e,t,a){var n=this;n.sendPassword=function(o,r){n.errorMsg=!1,n.disabled=!0,r?e.sendPassword(n.resetData).then(function(e){e.data.success?(n.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3)):(n.disabled=!1,n.errorMsg=e.data.message)}):(n.disabled=!1,n.errorMsg="올바른 아이디가 아닙니다.")}}]).controller("resetCtrl",["$stateParams","$scope","User","$timeout","$state",function(e,t,a,n,o){var r=this;r.hide=!0,a.resetPassword(e.token).then(function(e){e.data.success?(r.hide=!1,t.alert="alert alert-success",r.successMsg="새로운 비밀번호를 입력해주세요.",t.username=e.data.user[0].username):(t.alert="alert alert-danger",r.errorMsg=e.data.message)}),r.savePassword=function(e,s,i){r.errorMsg=!1,r.successMsg=!1,r.disabled=!0,r.loading=!0,s&&i?(r.regData.username=t.username,a.savePassword(r.regData).then(function(e){r.loading=!1,e.data.success?(t.alert="alert alert-success",r.successMsg=e.data.message+"...메인 화면으로 이동합니다.",n(function(){o.go("app")},2e3)):(t.alert="alert alert-danger",r.disabled=!1,r.errorMsg=e.data.message)})):(t.alert="alert alert-danger",r.loading=!1,r.disabled=!1,r.errorMsg="올바른 정보를 입력해주세요.")}}]),angular.module("userControllers",["userServices"]).controller("regCtrl",["$http","$location","$timeout","User","Auth","$state",function(e,t,a,n,o,r){var s=this;this.regStep1=function(e){s.errorMsg=!1,e?e.terms&&e.privacy?(s.successMsg="약관에 성공적으로 동의하셨습니다.",s.disabled=!0,r.go("registerStep2")):(s.errorMsg="약관에 동의해야만 회원가입을 진행할 수 있습니다.",s.disabled=!1):s.errorMsg="약관에 동의해야만 회원가입을 진행할 수 있습니다."},this.regStep2=function(e,t,o){s.errorMsg=!1,s.disabled=!0,t&&o?n.create(s.regData).then(function(e){e.data.success?(s.disabled=!0,s.successMsg=e.data.message,a(function(){$("#register").modal("hide"),s.regData=null,s.isLoggedIn=!1,r.go("app")},3e3)):(s.disabled=!1,s.errorMsg=e.data.message)}):(s.disabled=!1,s.loading=!1,s.errorMsg="올바른 정보를 입력해주세요.")},this.bannerRegUser=function(e,t){s.errorMsg=!1,s.disabled=!0,t?n.create(s.regData).then(function(e){e.data.success?(s.disabled=!0,s.successMsg=e.data.message,a(function(){r.go("app"),r.reload()},2e3)):(s.disabled=!1,s.errorMsg=e.data.message)}):(s.disabled=!1,s.loading=!1,s.errorMsg="올바른 정보를 입력해주세요.")}}]),angular.module("mainController",["authServices","userServices"]).controller("mainCtrl",["Auth","$timeout","$location","$state","$rootScope","$window","$interval","User","AuthToken",function(e,t,a,n,o,r,s,i,l){var d=this;d.loadme=!1,o.$on("$stateChangeStart",function(){u||u(),e.isLoggedIn()?(d.isLoggedIn=!0,e.getUser().then(function(e){d.user=e.data,d.loadme=!0})):(d.user=!1,d.isLoggedIn=!1,d.loadme=!0)});var u=function(){if(e.isLoggedIn()){d.checkSession=!0;var t=s(function(){var e=r.localStorage.getItem("token");if(null===e)s.cancel(t);else{self.parseJwt=function(e){var t=e.split(".")[1],a=t.replace("-","+").replace("_","/");return JSON.parse(r.atob(a))};var a=self.parseJwt(e),n=Math.floor(Date.now()/1e3);a.exp-n<=5&&(c("expired"),s.cancel(t))}},2e3)}};u(),d.renewSession=function(){d.choicMade=!0,i.renewSession(d.user.username).then(function(e){e.data.success?(l.setToken(e.data.token),u()):d.ModalBody=e.data.message}),p("logout")},d.endSession=function(){d.choicMade=!0,p("logout"),t(function(){c("logout")},500)};var c=function(a){d.choiceMade=!1,d.modalHeader=void 0,d.modalBody=void 0,d.hideButton=!1,"expired"===a?(d.modalHeader="Timeout Warning",d.modalBody="Your session will expired in 5 minutes. Would you like to renew your session?",$("#myModal").modal({backdrop:"static"})):"logout"===a?(d.hideButton=!0,d.modalHeader="로그아웃",$("#myModal").modal({backdrop:"static"}),t(function(){e.logout(),d.isLoggedIn=!1,p("logout"),n.reload()},2e3)):"login"===a?$("#login").modal({backdrop:"static"}):"upload"===a&&$("#upload").modal({backdrop:"static"}),t(function(){d.choicMade||p("logout")},4e3)},p=function(e){"expired"===e?$("#myModal").modal("hide"):"logout"===e?$("#myModal").modal("hide"):"login"===e?$("#login").modal("hide"):"upload"===e&&$("#upload").modal("hide")};this.doLogin=function(a,o){d.errorMsg=!1,d.expired=!1,d.disabled=!0,o?e.login(d.loginData).then(function(e){e.data.success?(d.disabled=!0,d.successMsg=e.data.message,t(function(){p("login"),d.loginData=null,d.isLoggedIn=!0,u(),n.reload()},2e3)):e.data.expired?(d.expired=!0,d.disabled=!0,d.errorMsg=e.data.message):(d.disabled=!1,d.errorMsg=e.data.message)}):(d.disabled=!1,d.loading=!1,d.errorMsg="Please ensure form is filled our properly")},d.upload=function(){d.choicMade=!0,i.checkPermission(d.user.username).then(function(e){e.data.success?(n.go("app.upload"),d.permission=!0):c("upload")})},this.doPermission=function(){d.uploadDisabled=!0,d.uploaderrorMsg=!1,i.resetPermission(d.user).then(function(e){e.data.success?(d.uploadDisabled=!0,d.uploadSuccessMsg=e.data.message,t(function(){p("upload"),n.go("app.upload")},2e3)):(d.uploadDisabled=!1,d.uploaderrorMsg="잘못된 정보가 입력되었습니다.")})},d.login=function(){d.successMsg=!1,d.errorMsg=!1,d.disabled=!1,c("login")},d.logout=function(){c("logout")},d.resend=function(){p("login"),t(function(){n.go("resend"),d.expired=!1},500)},d.resetusername=function(){p("login"),t(function(){n.go("resetusername")},500)},d.resetpassword=function(){p("login"),t(function(){n.go("resetpassword")},500)}}]),angular.module("app").controller("ArtistMenuController",["$scope","$http","$stateParams",function(e,t,a){e.data={availableOptions:[{sort:"-created",name:"최신순"}],selectedOption:{sort:"-created",name:"최신순"}},t.get("/api/artistMenu").then(function(t){e.headers=t.data}),e.getHeaderContent=function(){var n=a.code;t.get("/api/artistMenu/"+n).then(function(t){console.log(t);var a;for(a=0;a<t.data.length;a++)0===t.data[a].user_type&&(t.data[a].description="미분류");e.allArtist=t.data})}}]),angular.module("app").controller("BoardMenuController",["$scope","$http","$stateParams",function(e,t,a){e.data={availableOptions:[{sort:"-created",name:"최신순"},{sort:"-view",name:"조회순"},{sort:"-comment_count",name:"댓글순"}],selectedOption:{sort:"-created",name:"최신순"}},t.get("/api/boardMenu").then(function(t){e.headers=t.data}),e.getHeaderContent=function(){var n=a.code;t.get("/api/boardMenu/"+n).then(function(t){e.boardes=t.data})}}]),angular.module("app").controller("displayMenuController",["$scope","$http","$stateParams",function(e,t,a){e.data={availableOptions:[{sort:"-created",name:"최신순"}],selectedOption:{sort:"-created",name:"최신순"}},t.get("/api/displayMenu").then(function(t){e.headers=t.data}),e.getHeaderContent=function(){var n=a.code;t.get("/api/displayMenu/"+n).then(function(t){e.displays=t.data})}}]),angular.module("app").controller("GalleryMenuController",["$scope","$http","$stateParams",function(e,t,a){e.data={availableOptions:[{sort:"-created",name:"최신순"},{sort:"-view",name:"조회순"},{sort:"-comment_count",name:"댓글순"}],selectedOption:{sort:"-created",name:"최신순"}},t.get("/api/galleryMenu").then(function(t){e.headers=t.data}),e.getHeaderContent=function(){var n=a.code;t.get("/api/galleryMenu/"+n).then(function(t){e.photos=t.data})}}]),angular.module("app").controller("MainMenuController",["$http","$scope",function(e,t){e.get("/api/header").then(function(e){t.headers=e.data})}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

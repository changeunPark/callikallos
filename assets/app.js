angular.module("app",["ui.router","ui.bootstrap","userControllers","mainControllers","emailControllers","artistControllers","gallertControllers","commentControllers","boardControllers","uiCropper"]).config(["$httpProvider",function(t){t.interceptors.push("AuthInterceptors")}]);var app=angular.module("app");app.config(["$stateProvider","$urlRouterProvider","$locationProvider",function(t,e,a){e.otherwise("/"),t.state("app",{url:"/",views:{header:{templateUrl:"/menues/mainMenu.html",controller:"MainMenuController"},content:{templateUrl:"/main/home.html"},footer:{templateUrl:"/company/footer.html"}}}).state("registerStep1",{url:"/register/step1",controller:"regCtrl",controllerAs:"register",templateUrl:"/isLoggedOut/registerStep1.html",authenticated:!1}).state("registerStep2",{url:"/register/step2",controller:"regCtrl",controllerAs:"register",templateUrl:"/isLoggedOut/registerStep2.html",authenticated:!1}).state("resetusername",{url:"/resetusername",templateUrl:"/users/reset/username.html",controller:"usernameCtrl",controllerAs:"username"}).state("resetpassword",{url:"/resetpassword",templateUrl:"/users/reset/password.html",controller:"passwordCtrl",controllerAs:"password"}).state("reset",{url:"/reset/:token",templateUrl:"/users/reset/newpassword.html",controller:"resetCtrl",controllerAs:"reset"}).state("activate",{url:"/activate/:token",templateUrl:"/users/activation/activate.html",controller:"emailCtrl",controllerAs:"email"}).state("resend",{url:"/resend",templateUrl:"/users/activation/resend.html",controller:"resendCtrl",controllerAs:"resend"}).state("app.profiles",{url:"profiles",views:{"content@":{templateUrl:"isLoggedIn/userProfiles.html",controller:"profileCtrl",controllerAs:"profile",authenticated:!1}}}).state("app.photos",{url:"photos",views:{"content@":{templateUrl:"isLoggedIn/artistPhotos.html",controller:"artistPhotoCtrl",controllerAs:"artistPhoto",authenticated:!1}}}).state("app.artistProfiles",{url:"artist",views:{"content@":{templateUrl:"isLoggedIn/artistProfiles.html",controller:"artistProfileCtrl",controllerAs:"artistProfile",authenticated:!0}}}).state("app.intro",{url:"intro",views:{"content@":{templateUrl:"/company/intro.html",authenticated:!1}}}).state("app.terms",{url:"terms",views:{"content@":{templateUrl:"/company/terms.html",authenticated:!1}}}).state("app.privacy",{url:"privacy",views:{"content@":{templateUrl:"/company/privacy.html",authenticated:!1}}}).state("app.artist",{url:"artist/category=:code",views:{"content@":{templateUrl:"/main/form.html"},"menu@app.artist":{templateUrl:"/partialArtist/artistTap.html",controller:"artistTapCtrl",controllerAs:"artistTap",authenticated:!1},"contents@app.artist":{templateUrl:"/partialArtist/artists.html",controller:"artistsCtrl",controllerAs:"artists",authenticated:!1}}}).state("app.gallery",{url:"gallery/category=:code",views:{"content@":{templateUrl:"/main/form.html"},"menu@app.gallery":{templateUrl:"/partialGallery/galleryTap.html",controller:"galleryTapCtrl",controllerAs:"galleryTap"},"contents@app.gallery":{templateUrl:"/partialGallery/photos.html",controller:"galleryPhotosCtrl",controllerAs:"galleryPhotos",authenticated:!1}}}).state("app.board",{url:"board/category=:code",views:{"content@":{templateUrl:"/main/form.html"},"menu@app.board":{templateUrl:"/partialBoard/boardTap.html",controller:"boardTapCtrl",authenticated:!1},"contents@app.board":{templateUrl:"/partialBoard/boards.html",controller:"boardsCtrl",controllerAs:"boards",authenticated:!1}}}).state("app.display",{url:"display/category=:code",views:{"content@":{templateUrl:"/main/form.html"},"menu@app.display":{templateUrl:"/partialDisplay/displayTap.html",controller:"displayMenuController",authenticated:!1},"contents@app.display":{templateUrl:"/partialDisplay/content.html",controller:"displayMenuController",authenticated:!1}}}).state("app.artist.show",{url:"/artist:artist_id",views:{"content@":{templateUrl:"/partialArtist/artist.html",controller:"artistPhotoCtrl",controllerAs:"artistPhoto",authenticated:!1}}}).state("app.gallery.show",{url:"/photo_type=:photo_type/photo:photo_id",views:{"content@":{templateUrl:"/partialGallery/photo.html",controller:"galleryPhotoCtrl",controllerAs:"galleryphoto"}}}).state("app.board.show",{url:"/board:board_id",views:{"contents@app.board":{templateUrl:"partialBoard/board.html",controller:"boardCtrl",controllerAs:"board"}}}).state("app.board.create",{url:"/create",views:{"contents@app.board":{templateUrl:"/partialBoard/boardCreate.html",controller:"boardCtrl",controllerAs:"board",authenticated:!0}}}).state("app.board.edit",{url:"/edit/:board_id",views:{"contents@app.board":{templateUrl:"partialBoard/boardUpdate.html",controller:"boardCtrl",controllerAs:"board",authenticated:!0}}}).state("app.gallery.edit",{url:"/edit/:photo_id",views:{"content@":{templateUrl:"/partialGallery/photoEdit.html",controller:"galleryPhotoCtrl",controllerAs:"galleryphoto"}}})}]),angular.module("commentControllers",["commentServices"]).controller("commentCtrl",["$scope","$http","$stateParams","$state","$window","Comment",function(t,e,a,r,o,s){var n=this;t.userComment=!1,this.createComment=function(t){e.post("/api/comment",n.response).then(function(t){console.log(t)})},t.getComment=function(){var r=a.photo_id,o=a.board_id,s="",n={photo_id:r,board_id:o},i={params:n,headers:{Accept:"application/json"}};r?(s=r,e.get("/api/comment/"+s,i).then(function(e){t.comments=e.data[0]})):o?(s=o,e.get("/api/comment/"+s,i).then(function(e){t.comments=e.data[0]})):t.comments="시스템이 불안정합니다."},t.addComment=function(t,a){if(a){var s=t.board_id,n=t.photo_id,i=t.comment;e.post("/api/comment",{board_id:s,photo_id:n,comment:i}).then(function(t){r.reload()})}else o.alert("댓글을 입력해주세요.")},t.deleteComment=function(t){var a=t.comment_id;e.delete("/api/comment/"+a).then(function(t){r.reload()})}}]),angular.module("app").controller("ImageCropCtrl",["$scope",function(t){t.myCroppedImage="",t.myImage=void 0,t.crobject={};var e=function(e){var a=e.currentTarget.files[0],r=new FileReader;r.onload=function(e){t.$apply(function(t){t.myImage=e.target.result})},r.readAsDataURL(a)};angular.element(document.querySelector("#fileInput")).on("change",e),this.imageCrop=function(){var e=t.myImage;console.log(e)}}]),angular.module("app").controller("OpinionController",["$scope","$http","$stateParams",function(t,e,a){t.doLikeStatus=!0,t.doLike=function(){t.doLikeStatus=!t.doLikeStatus},t.getOpinion=function(r){var o=a.id;e.get("/api/opinion/"+o).then(function(e){t.opinionInfo=e.data[0][0]})}}]),angular.module("app").directive("fileModel",["$parse",function(t){return{restrict:"A",link:function(e,a,r){var o=t(r.fileModel),s=o.assign;a.bind("change",function(){e.$apply(function(){s(e,a[0].files[0])})})}}}]),angular.module("app").directive("match",function(){return{restrict:"A",controller:["$scope",function(t){t.doConfirm=function(e){t.confirmed=!1,e.forEach(function(e){t.confirm==e?t.confirmed=!0:t.confirmed=!1})}}],link:function(t,e,a){a.$observe("match",function(){t.matches=JSON.parse(a.match),t.doConfirm(t.matches)}),t.$watch("confirm",function(){t.matches=JSON.parse(a.match),t.doConfirm(t.matches)})}}}),angular.module("artistServices",[]).factory("Artist",["$http",function(t){return artistFactory={},artistFactory.readArtistTap=function(){return t.get("/api/artistMenu")},artistFactory.readArtists=function(e){return t.get("/api/artistMenu/"+e)},artistFactory.readArtist=function(e){return t.get("/api/artist/"+e)},artistFactory.createAristPhoto=function(e){return t.post("/api/artistProfiles",e)},artistFactory.updateAristProfile=function(e){return t.put("/api/artistProfiles",e)},artistFactory.readArtistProfile=function(e){return t.get("/api/artistProfiles/"+e)},artistFactory.readAristPhoto=function(e){return t.get("/api/artistPhotos/"+e)},artistFactory}]),angular.module("authServices",[]).factory("Auth",["$http","AuthToken",function(t,e){var a={};return a.getUser=function(){if(e.getToken())return t.post("/api/me");$q.reject({message:"User has no token"})},a.login=function(a){return t.post("/api/authenticate",a).then(function(t){return e.setToken(t.data.token),t})},a.isLoggedIn=function(){return!!e.getToken()},a.logout=function(){e.setToken()},a}]).factory("AuthToken",["$window",function(t){var e={};return e.setToken=function(e){e?t.localStorage.setItem("token",e):t.localStorage.removeItem("token",e)},e.getToken=function(){return t.localStorage.getItem("token")},e}]).factory("AuthInterceptors",["AuthToken",function(t){var e={};return e.request=function(e){var a=t.getToken();return a&&(e.headers["x-access-token"]=a),e},e}]),angular.module("boardServices",[]).factory("Board",["$http",function(t){return boardFactory={},boardFactory.readBoardTap=function(){return t.get("/api/boardMenu")},boardFactory.readBoards=function(e){return t.get("/api/boardMenu/"+e)},boardFactory.readBoard=function(e){return t.get("api/board/"+e)},boardFactory.createBoard=function(e){return t.post("/api/boardMenu",e)},boardFactory}]),angular.module("commentServices",[]).factory("Comment",["$http",function(t){return commentFactory={},commentFactory.createComment=function(e){return t.post("/api/comment",e)},commentFactory}]),angular.module("galleryServices",[]).factory("Gallery",["$http",function(t){return galleryFactory={},galleryFactory.readGalleryTap=function(){return t.get("/api/galleryMenu")},galleryFactory.readPhotos=function(e){return t.get("/api/galleryMenu/"+e)},galleryFactory.readPhotoData=function(e){return t.get("/api/gallery/"+e)},galleryFactory.readMorePhoto=function(e){return t.get("/api/galleryMenu/"+e)},galleryFactory}]),angular.module("userServices",[]).factory("User",["$http",function(t){return userFactory={},userFactory.create=function(e){return t.post("/api/users",e)},userFactory.activeAccount=function(e){return t.put("/api/activate/"+e)},userFactory.checkCredentials=function(e){return t.post("/api/resend",e)},userFactory.resendLink=function(e){return t.put("/api/resend",e)},userFactory.sendUsername=function(e){return t.get("/api/resetusername/"+e)},userFactory.sendPassword=function(e){return t.put("/api/resetpassword",e)},userFactory.resetPassword=function(e){return t.get("/api/resetpassword/"+e)},userFactory.savePassword=function(e){return t.put("/api/savepassword",e)},userFactory.renewSession=function(e){return t.get("/api/renewToken/"+e)},userFactory.resetPermission=function(e){return t.put("/api/users/",e)},userFactory.checkPermission=function(e){return t.get("/api/users/"+e)},userFactory.readProfiles=function(e){return t.get("/api/userProfiles/"+e)},userFactory.updateProfiles=function(e){return t.put("/api/userProfiles",e)},userFactory}]),angular.module("artistControllers",["userServices","artistServices"]).controller("artistTapCtrl",["$scope","Artist",function(t,e){e.readArtistTap().then(function(e){e.data.success?t.headers=e.data.result:app.errorMsg=e.data.message})}]).controller("artistsCtrl",["$stateParams","Artist",function(t,e){var a=this,r=t.code;a.data={availableOptions:[{sort:"-created",name:"최신순"}],selectedOption:{sort:"-created",name:"최신순"}},e.readArtists(r).then(function(t){t.data.success?a.artistDatas=t.data.result:a.errorMsg=t.data.message})}]).controller("uploadCtrl",["$http","$timeout","$scope","Artist","$state",function(t,e,a,r,o){var s=this;s.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."},{id:"1",name:"붓 글씨"},{id:"2",name:"펜 글씨"},{id:"3",name:"미분류"}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},this.file={},this.mainPhotoChanged=function(t){if(t.length>0&&t[0].name.match(/\.(png|jpeg|jpg)$/)){var a=t[0],r=new FileReader;r.readAsDataURL(a),r.onload=function(t){e(function(){s.mainThumbnail={},s.mainThumbnail.dataUrl=t.target.result})}}else s.mainThumbnail={}},this.readPhoto=function(){s.errorMsg=!1,s.disabled=!0,a.$emit("LOAD");var e=new FormData;e.append("myfile",s.file.upload),t.post("/api/uploadTemp/",e,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(t){t.data.success?(a.$emit("UNLOAD"),s.disabled=!1,s.successMsg=t.data.message,s.mainImagePath=t.data.photo_path,s.file={}):(a.$emit("UNLOAD"),s.disabled=!1,s.errorMsg=t.data.message,s.file={})})},this.createPhoto=function(t){s.disabled=!1,s.errorMsg=!1,t?void 0===s.uploadData.title||null===s.uploadData.title||""===s.uploadData.title?s.errorMsg="작품의 제목을 입력해주세요.":void 0===s.uploadData.detail||null===s.uploadData.detail||""===s.uploadData.detail?s.errorMsg="작품의 설명을 입력해주세요.":void 0===s.mainImagePath||null===s.mainImagePath||""===s.mainImagePath?s.errorMsg="작품 이미지를 선택해주세요.":"0"===s.data.selectedOption.id?s.errorMsg="작품의 종류를 선택해주세요.":(s.uploadData=t,s.uploadData.user_id=a.main.user.user_id,s.uploadData.photo_type=s.data.selectedOption.id,s.uploadData.photo_path=s.mainImagePath,r.createAristPhoto(s.uploadData).then(function(t){t.data.success?(s.successMsg=t.data.message,s.disabled=!0,e(function(){o.reload()},2e3)):(s.errorMsg=t.data.message,s.successMsg=!1,s.disabled=!1)})):(s.errorMsg="빈칸을 모두 입력해주세요.",s.successMsg=!1)}}]).controller("artistProfileCtrl",["$timeout","Artist","$state","$scope",function(t,e,a,r){var o=this;o.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."},{id:"1",name:"붓 글씨"},{id:"2",name:"펜 글씨"},{id:"3",name:"미분류"}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},this.updateAristProfile=function(s){o.errorMsg=!1,s?void 0===o.artistData.short_info||null===o.artistData.short_info||""===o.artistData.short_info?o.errorMsg="한 줄 소개를 입력해주세요.":void 0===o.artistData.detail_info||null===o.artistData.detail_info||""===o.artistData.detail_info?o.errorMsg="상세 소개를 입력해주세요.":(o.artistData=s,o.artistData.user_id=r.main.user.user_id,o.artistData.user_type=o.data.selectedOption.id,e.updateAristProfile(o.artistData).then(function(e){e.data.success?(o.errorMsg=!1,o.successMsg=e.data.message,o.disabled=!0,t(function(){a.reload()},2e3)):o.errorMsg="올바르지 않은 값이 입력되었습니다."})):o.errorMsg="필수기재사항을 입력해주세요."},this.readAristProfile=function(){var t=r.main.user.user_id;e.readArtistProfile(t).then(function(t){t.data.success?o.artistData=t.data.result:o.errorMsg=t.data.message})}}]).controller("artistPhotoCtrl",["Artist","$stateParams",function(t,e){var a=this,r=e.artist_id;this.contactArtist=function(){console.log("작동 중")},t.readArtistProfile(r).then(function(t){t.data.success?a.artistData=t.data.result:a.errorMsg=t.data.message}),t.readAristPhoto(r).then(function(t){t.data.success?a.artistPhotos=t.data.result:a.errorMsg=t.data.message})}]),angular.module("boardControllers",["boardServices"]).filter("to_trusted",["$sce",function(t){return function(e){return t.trustAsHtml(e)}}]).controller("boardTapCtrl",["Board","$scope",function(t,e){t.readBoardTap().then(function(t){e.headers=t.data})}]).controller("boardsCtrl",["$stateParams","Board",function(t,e){var a=this,r=t.code;a.data={availableOptions:[{sort:"-created",name:"최신순"},{sort:"-view",name:"조회순"},{sort:"-comment_count",name:"댓글순"}],selectedOption:{sort:"-created",name:"최신순"}},e.readBoards(r).then(function(t){a.boardDatas=t.data.result})}]).controller("boardCtrl",["$stateParams","Board","$scope","$http","$state","$timeout",function(t,e,a,r,o,s){var n=this;n.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."},{id:"1",name:"공지사항"},{id:"2",name:"잡학사전"},{id:"3",name:"질문사항"}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},$(document).ready(function(){$("#summernote").summernote({lang:"ko-KR",height:100,minHeight:null,maxHeight:null,focus:!0,placeholder:"댓글은 1,000자까지 작성할 수 있으며 주제와 무관한 댓글, 악성 댓글은 삭제될 수 있습니다.",toolbar:[["style",["bold","italic","underline","clear"]],["font",["strikethrough","superscript","subscript"]],["fontsize",["fontsize"]],["color",["color"]],["para",["ul","ol","paragraph"]],["height",["height"]]]})}),this.createBoard=function(t){if(n.disabled=!0,n.errorMsg=!1,"0"===n.data.selectedOption.id)n.errorMsg="게시글의 종류를 선택해주세요",n.disabled=!1;else if(void 0===t||null===t||""===t)n.errorMsg="제목을 입력해주세요.",n.disabled=!1;else if("<p><br></p>"===$("#summernote").summernote("code")||null===$("#summernote").summernote("code")||void 0===$("#summernote").summernote("code")||""===$("#summernote").summernote("code"))n.errorMsg="내용을 입력해주세요.",n.disabled=!1;else{var r=$("#summernote").summernote("code"),i=n.data.selectedOption.id,l=t.title,d={title:l,content:r,board_type:i,user_id:a.main.user.user_id};e.createBoard(d).then(function(t){t.data.success?(n.successMsg=t.data.message,s(function(){o.go("app.board")},500)):(n.disabled=!1,n.errorMsg=t.data.message)})}};var i=t.board_id;e.readBoard(i).then(function(t){t.data.success?(n.boardDatas=t.data.result,n.htmlcontent=t.data.result.content):n.errorMsg=t.data.message})}]),angular.module("gallertControllers",["galleryServices"]).controller("galleryTapCtrl",["$scope","Gallery",function(t,e){e.readGalleryTap().then(function(e){e.data.success?t.headers=e.data.result:app.errorMsg=e.data.message})}]).controller("galleryPhotosCtrl",["Gallery","$stateParams",function(t,e){var a=this,r=e.code;a.data={availableOptions:[{sort:"-created",name:"최신순"},{sort:"-view",name:"조회순"},{sort:"-comment_count",name:"댓글순"}],selectedOption:{sort:"-created",name:"최신순"}},t.readPhotos(r).then(function(t){t.data.success?a.photoData=t.data.result:a.errorMsg=t.data.message})}]).controller("galleryPhotoCtrl",["$scope","$stateParams","Gallery",function(t,e,a){var r=this,o=e.photo_id,s=e.photo_type;t.main.user.user_id;a.readPhotoData(o).then(function(t){t.data.success?r.photoData=t.data.result:r.errorMsg=t.data.message}),a.readPhotos(s).then(function(t){t.data.success?r.photosData=t.data.result:r.errorMsg=t.data.message})}]),angular.module("app").controller("HomeCtrl",["$http","$scope",function(t,e){e.getContent=function(){t.get("/api/home").then(function(t){e.photos=t.data})}}]),angular.module("mainControllers",["authServices","userServices"]).controller("mainCtrl",["Auth","$timeout","$location","$state","$rootScope","$scope","$window","$interval","User","AuthToken",function(t,e,a,r,o,s,n,i,l,d){var c=this;c.loadme=!1,s.$on("LOAD",function(){s.loading=!0}),s.$on("UNLOAD",function(){s.loading=!1}),o.$on("$stateChangeStart",function(){u||u(),t.isLoggedIn()?(c.isLoggedIn=!0,t.getUser().then(function(t){"admin"===t.data.permission?(c.permission=!0,c.user=t.data,c.loadme=!0):"artist"===t.data.permission?(c.permission=!0,c.user=t.data,c.loadme=!0):(c.user=t.data,c.loadme=!0)})):(c.user=!1,c.isLoggedIn=!1,c.loadme=!0)});var u=function(){if(t.isLoggedIn()){c.checkSession=!0;var e=i(function(){var t=n.localStorage.getItem("token");if(null===t)i.cancel(e);else{self.parseJwt=function(t){var e=t.split(".")[1],a=e.replace("-","+").replace("_","/");return JSON.parse(n.atob(a))};var a=self.parseJwt(t),r=Math.floor(Date.now()/1e3);a.exp-r<=5&&(p("expired"),i.cancel(e))}},2e3)}};u(),c.renewSession=function(){c.choiceMade=!0,l.renewSession(c.user.username).then(function(t){t.data.success?(d.setToken(t.data.token),u(),m("expired")):(c.ModalBody=t.data.message,m("expired"))})},c.endSession=function(){c.choiceMade=!0,m("expired"),e(function(){p("logout")},500)};var p=function(a){c.choiceMade=!1,c.modalHeader=void 0,c.modalBody=void 0,c.hideButton=!1,"expired"===a?(c.modalHeader="Timeout Warning",c.modalBody="Your session will expired in 5 minutes. Would you like to renew your session?",$("#myModal").modal({backdrop:"static"})):"logout"===a?(c.hideButton=!0,c.modalHeader="로그아웃",$("#myModal").modal({backdrop:"static"}),e(function(){t.logout(),c.isLoggedIn=!1,m("logout"),r.reload()},2e3)):"login"===a?$("#login").modal({backdrop:"static"}):"upload"===a&&$("#upload").modal({backdrop:"static"}),e(function(){c.choiceMade||m("logout")},4e3)},m=function(t){"expired"===t?$("#myModal").modal("hide"):"logout"===t?$("#myModal").modal("hide"):"login"===t?$("#login").modal("hide"):"upload"===t&&$("#upload").modal("hide")};this.doLogin=function(a,o){c.errorMsg=!1,c.expired=!1,c.disabled=!0,o?t.login(c.loginData).then(function(t){t.data.success?(c.disabled=!0,c.successMsg=t.data.message,e(function(){m("login"),c.loginData=null,c.isLoggedIn=!0,u(),r.reload()},2e3)):t.data.expired?(c.expired=!0,c.disabled=!0,c.errorMsg=t.data.message):(c.disabled=!1,c.errorMsg=t.data.message)}):(c.disabled=!1,c.loading=!1,c.errorMsg="올바른 정보를 입력해주세요.")},this.upload=function(){c.choiceMade=!0,"artist"===c.user.permission?r.go("app.artistProfiles"):l.checkPermission(c.user.username).then(function(t){t.data.success?(r.go("app.artistProfiles"),c.permission=!0):p("upload")})},this.doPermission=function(){c.choiceMade=!0,c.uploadDisabled=!0,c.uploaderrorMsg=!1,l.resetPermission(c.user).then(function(t){t.data.success?(c.uploadDisabled=!0,c.uploadSuccessMsg=t.data.message,e(function(){m("upload"),r.go("app.artistProfiles")},2e3)):(c.uploadDisabled=!1,c.uploaderrorMsg="잘못된 정보가 입력되었습니다.")})},c.login=function(){c.successMsg=!1,c.errorMsg=!1,c.disabled=!1,p("login")},c.logout=function(){p("logout")},c.resend=function(){m("login"),e(function(){r.go("resend"),c.expired=!1},500)},c.resetusername=function(){m("login"),e(function(){r.go("resetusername")},500)},c.resetpassword=function(){m("login"),e(function(){r.go("resetpassword")},500)}}]),angular.module("app").controller("BoardMenuController",["$scope","$http","$stateParams",function(t,e,a){t.data={availableOptions:[{sort:"-created",name:"최신순"},{sort:"-view",name:"조회순"},{sort:"-comment_count",name:"댓글순"}],selectedOption:{sort:"-created",name:"최신순"}},e.get("/api/boardMenu").then(function(e){t.headers=e.data}),t.getHeaderContent=function(){var r=a.code;e.get("/api/boardMenu/"+r).then(function(e){t.boardes=e.data})}}]),angular.module("app").controller("displayMenuController",["$scope","$http","$stateParams",function(t,e,a){t.data={availableOptions:[{sort:"-created",name:"최신순"}],selectedOption:{sort:"-created",name:"최신순"}},e.get("/api/displayMenu").then(function(e){t.headers=e.data}),t.getHeaderContent=function(){var r=a.code;e.get("/api/displayMenu/"+r).then(function(e){t.displays=e.data})}}]),angular.module("app").controller("MainMenuController",["$http","$scope",function(t,e){t.get("/api/header").then(function(t){e.headers=t.data})}]),angular.module("emailControllers",["userServices"]).controller("emailCtrl",["$stateParams","User","$timeout","$state",function(t,e,a,r){var o=this;e.activeAccount(t.token).then(function(t){o.successMsg=!1,o.errorMsg=!1,t.data.success?(o.disabled=!0,o.successMsg=t.data.message+"...메인 페이지로 이동합니다.",a(function(){r.go("app")},2e3)):(o.errorMsg=t.data.message+"...메인 페이지로 이동합니다.",a(function(){r.go("app")},2e3))})}]).controller("resendCtrl",["User","$timeout","$state",function(t,e,a){app=this,this.checkCredentials=function(r){app.successMsg=!1,app.errorMsg=!1,app.disabled=!0,t.checkCredentials(this.loginData).then(function(r){r.data.success?t.resendLink(app.loginData).then(function(t){t.data.success&&(app.disabled=!0,app.successMsg=t.data.message+"...메인 페이지로 이동합니다.",e(function(){a.go("app")},2e3))}):(app.disabled=!1,app.errorMsg=r.data.message)})}}]).controller("usernameCtrl",["User","$timeout","$state",function(t,e,a){var r=this;this.sendUsername=function(o,s){r.errorMsg=!1,r.disabled=!0,s?t.sendUsername(r.userData.email).then(function(t){t.data.success?(r.successMsg=t.data.message+"...메인 페이지로 이동합니다.",e(function(){a.go("app")},2e3)):(r.disabled=!1,r.errorMsg=t.data.message)}):(r.disabled=!1,r.errorMsg="올바른 이메일 주소가 아닙니다.")}}]).controller("passwordCtrl",["User","$timeout","$state",function(t,e,a){var r=this;r.sendPassword=function(o,s){r.errorMsg=!1,r.disabled=!0,s?t.sendPassword(r.resetData).then(function(t){t.data.success?(r.successMsg=t.data.message+"...메인 페이지로 이동합니다.",e(function(){a.go("app")},2e3)):(r.disabled=!1,r.errorMsg=t.data.message)}):(r.disabled=!1,r.errorMsg="올바른 아이디가 아닙니다.")}}]).controller("resetCtrl",["$stateParams","$scope","User","$timeout","$state",function(t,e,a,r,o){var s=this;s.hide=!0,a.resetPassword(t.token).then(function(t){t.data.success?(s.hide=!1,e.alert="alert alert-success",s.successMsg="새로운 비밀번호를 입력해주세요.",e.username=t.data.user[0].username):(e.alert="alert alert-danger",s.errorMsg=t.data.message)}),s.savePassword=function(t,n,i){s.errorMsg=!1,s.successMsg=!1,s.disabled=!0,s.loading=!0,n&&i?(s.regData.username=e.username,a.savePassword(s.regData).then(function(t){s.loading=!1,t.data.success?(e.alert="alert alert-success",s.successMsg=t.data.message+"...메인 화면으로 이동합니다.",r(function(){o.go("app")},2e3)):(e.alert="alert alert-danger",s.disabled=!1,s.errorMsg=t.data.message)})):(e.alert="alert alert-danger",s.loading=!1,s.disabled=!1,s.errorMsg="올바른 정보를 입력해주세요.")}}]),angular.module("userControllers",["userServices"]).controller("regCtrl",["$http","$location","$timeout","User","Auth","$state",function(t,e,a,r,o,s){var n=this;this.regStep1=function(t){n.errorMsg=!1,t?t.terms&&t.privacy?(n.successMsg="약관에 성공적으로 동의하셨습니다.",n.disabled=!0,s.go("registerStep2")):(n.errorMsg="약관에 동의해야만 회원가입을 진행할 수 있습니다.",n.disabled=!1):n.errorMsg="약관에 동의해야만 회원가입을 진행할 수 있습니다."},this.regStep2=function(t,e,o){n.errorMsg=!1,n.disabled=!0,e&&o?r.create(n.regData).then(function(t){t.data.success?(n.disabled=!0,n.successMsg=t.data.message,a(function(){$("#register").modal("hide"),n.regData=null,n.isLoggedIn=!1,s.go("app")},3e3)):(n.disabled=!1,n.errorMsg=t.data.message)}):(n.disabled=!1,n.loading=!1,n.errorMsg="올바른 정보를 입력해주세요.")}}]).controller("profileCtrl",["$scope","User","$timeout","$state","$http",function(t,e,a,r,o){var s=this,n=t.main.user.username;e.readProfiles(n).then(function(t){t.data.success?s.readData=t.data.profiles:s.errorMsg=t.data.message}),this.file={},this.photoChanged=function(t){if(t.length>0&&t[0].name.match(/\.(png|jpeg|jpg)$/)){var e=t[0],r=new FileReader;r.readAsDataURL(e),r.onload=function(t){a(function(){s.thumbnail={},s.thumbnail.dataUrl=t.target.result,s.uploading=!1,s.message=!1})}}else s.thumbnail={},s.message=!1},this.updateProfileImage=function(){s.errorMsg=!1,s.disabled=!0,t.$emit("LOAD");var e=new FormData,n=t.main.user.user_id;e.append("myfile",s.file.upload),o.put("/api/uploadTemp/"+n,e,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){e.data.success?(t.$emit("UNLOAD"),s.successMsg=e.data.message,s.file={},a(function(){r.reload()},1e3)):(t.$emit("UNLOAD"),s.disabled=!1,s.errorMsg=e.data.message,s.file={})})},this.updateProfile=function(){s.errorMsg=!1,s.disabled=!0,s.readData.user_id=t.main.user.user_id,e.updateProfiles(s.readData).then(function(t){t.data.success?(s.successMsg=t.data.message,a(function(){r.reload()},2e3)):(s.errorMsg=t.data.message,s.disabled=!1)})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

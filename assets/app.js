angular.module("app",["ui.router","ui.bootstrap","userControllers","userServices","mainController","authServices","emailController","resetController"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptors")}]);var app=angular.module("app");app.config(["$stateProvider","$urlRouterProvider","$locationProvider",function(e,t,a){t.otherwise("/"),e.state("app",{url:"/",views:{header:{templateUrl:"/fixed/mainMenu.html",controller:"MainMenuController"},content:{templateUrl:"/category/home.html"},footer:{templateUrl:"/fixed/footer.html"}}}).state("resetusername",{url:"/resetusername",templateUrl:"/fixed/reset/username.html",controller:"usernameCtrl",controllerAs:"username"}).state("resetpassword",{url:"/resetpassword",templateUrl:"/fixed/reset/password.html",controller:"passwordCtrl",controllerAs:"password"}).state("reset",{url:"/reset/:token",templateUrl:"/fixed/reset/newpassword.html",controller:"resetCtrl",controllerAs:"reset"}).state("activate",{url:"/activate/:token",templateUrl:"/fixed/activation/activate.html",controller:"emailCtrl",controllerAs:"email"}).state("resend",{url:"/resend",templateUrl:"/fixed/activation/resend.html",controller:"resendCtrl",controllerAs:"resend"}).state("login",{url:"/login",templateUrl:"/isLoggedOut/login.html",authenticated:!1}).state("register",{url:"/register",controller:"regCtrl",controllerAs:"register",templateUrl:"/isLoggedOut/register.html",authenticated:!1}).state("app.intro",{url:"intro",views:{"content@":{templateUrl:"/fixed/introduce/intro.html",authenticated:!1}}}).state("app.terms",{url:"terms",views:{"content@":{templateUrl:"/fixed/law/terms.html",authenticated:!1}}}).state("app.privacy",{url:"privacy",views:{"content@":{templateUrl:"/fixed/law/privacy.html",authenticated:!1}}}).state("app.profiles",{url:"profiles",views:{"content@":{templateUrl:"isLoggedIn/myProfiles.html",controller:"ProfileController",authenticated:!0}}}).state("app.photos",{url:"photos",views:{"content@":{templateUrl:"isLoggedIn/myPhotos.html",controller:"PhotosController",authenticated:!1}}}).state("app.upload",{url:"upload",views:{"content@":{templateUrl:"isLoggedIn/upload.html",controller:"UploadPhotoController",authenticated:!0}}}).state("app.artist",{url:"artist",views:{"content@":{templateUrl:"category/artist.html",controller:"ArtistController",authenticated:!1},"artist-header@app.artist":{templateUrl:"/fixed/subMenu.html",controller:"ArtistMenuController",authenticated:!1}}}).state("app.artist.category",{url:"/category=:code",views:{"detail@app.artist":{templateUrl:"/partialArtist/content.html",controller:"ArtistMenuController",authenticated:!1}}}).state("app.artist.show",{url:"/:artist_id",views:{"content@":{templateUrl:"/partialArtist/artist.html",controller:"ArtistController",authenticated:!1}}}).state("app.gallery",{url:"gallery",views:{"content@":{templateUrl:"category/gallery.html",controller:"GalleryController",authenticated:!1},"gallery-header@app.gallery":{templateUrl:"/fixed/subMenu.html",controller:"GalleryMenuController",authenticated:!1}}}).state("app.gallery.category",{url:"/category=:code",views:{"detail@app.gallery":{templateUrl:"/partialGallery/content.html",controller:"GalleryMenuController",authenticated:!1}}}).state("app.gallery.show",{url:"/category=:photo_type/photos:photo_id",views:{"content@":{templateUrl:"/partialGallery/photo.html",controller:"GalleryController",authenticated:!1}}}).state("app.gallery.edit",{url:"/edit/:photo_id",views:{"content@":{templateUrl:"/partialGallery/photoEdit.html",controller:"GalleryController",authenticated:!0}}}).state("app.display",{url:"display",views:{"content@":{templateUrl:"category/display.html",authenticated:!1},"display-header@app.display":{templateUrl:"/fixed/subMenu.html",controller:"displayMenuController",authenticated:!1}}}).state("app.display.category",{url:"/category=:code",views:{"detail@app.display":{templateUrl:"/partialDisplay/content.html",controller:"displayMenuController",authenticated:!1}}}).state("app.board",{url:"board",views:{"content@":{templateUrl:"category/board.html",controller:"BoardController",authenticated:!1},"board-header@app.board":{templateUrl:"/fixed/boardMenu.html",controller:"BoardMenuController",authenticated:!1}}}).state("app.board.category",{url:"/category=:code",views:{"content@app.board":{templateUrl:"/partialBoard/content.html",controller:"BoardMenuController",authenticated:!1}}}).state("app.board.create",{url:"/create",views:{"content@app.board":{controller:"BoardController",templateUrl:"/partialBoard/boardCreate.html",authenticated:!0}}}).state("app.board.show",{url:"/:board_id",views:{"content@app.board":{controller:"BoardController",templateUrl:"partialBoard/article.html",authenticated:!1}}}).state("app.board.edit",{url:"/edit/:board_id",views:{"content@app.board":{controller:"BoardController",templateUrl:"partialBoard/boardUpdate.html",authenticated:!0}}})}]),angular.module("app").directive("fileModel",["$parse",function(e){return{restrict:"A",link:function(t,a,n){var r=e(n.fileModel),o=r.assign;a.bind("change",function(){t.$apply(function(){o(t,a[0].files[0])})})}}}]),angular.module("app").directive("match",function(){return{restrict:"A",controller:["$scope",function(e){e.doConfirm=function(t){e.confirmed=!1,t.forEach(function(t){e.confirm==t?e.confirmed=!0:e.confirmed=!1})}}],link:function(e,t,a){a.$observe("match",function(){e.matches=JSON.parse(a.match),e.doConfirm(e.matches)}),e.$watch("confirm",function(){e.matches=JSON.parse(a.match),e.doConfirm(e.matches)})}}}),angular.module("app").controller("ArtistController",["$scope","$http","$stateParams",function(e,t,a){e.getArtist=function(){var n=a.artist_id;t.get("/api/artist/"+n).then(function(t){e.artistInfo=t.data})}}]),angular.module("app").controller("BoardController",["$scope","$location","$http","$stateParams",function(e,t,a,n){e.data={availableOptions:[{id:"-1",name:"카테고리를 선택해주세요."},{id:"0",name:"공지사항"},{id:"1",name:"학원/홍보"},{id:"2",name:"모임/스터디"}],selectedOption:{id:"-1",name:"카테고리를 선택해주세요."}},e.userArticle=!1,e.addBoard=function(n,r){var o=e.data.selectedOption.id;a.post("/api/boardMenu",{title:n,content:r,board_type:o}).then(function(e){}),t.path("app.board")},e.showBoard=function(){var t=n.board_id;a.get("/api/board/"+t).then(function(t){t.data[1].success?(e.userArticle=!0,e.board=t.data[0][0]):(e.userArticle=!1,e.board=t.data[0][0])})},e.deleteBoard=function(){var e=n.board_id;a.delete("/api/board/"+e).then(function(e){t.path("app.board.category({code: 0})")})},e.updateBoard=function(){var r=n.board_id;a.put("/api/board/"+r,e.board).then(function(a){e.board=a.data,t.path("board")})}}]),angular.module("app").controller("CommentController",["$scope","$http","$stateParams","$state","$window",function(e,t,a,n,r){e.userComment=!1,e.getComment=function(){var n=a.photo_id,r=a.board_id,o="",l={photo_id:n,board_id:r},i={params:l,headers:{Accept:"application/json"}};n?(o=n,t.get("/api/comment/"+o,i).then(function(t){e.comments=t.data[0]})):r?(o=r,t.get("/api/comment/"+o,i).then(function(t){e.comments=t.data[0]})):e.comments="시스템이 불안정합니다."},e.addComment=function(e,a){if(a){var o=e.board_id,l=e.photo_id,i=e.comment;t.post("/api/comment",{board_id:o,photo_id:l,comment:i}).then(function(e){n.reload()})}else r.alert("댓글을 입력해주세요.")},e.deleteComment=function(e){var a=e.comment_id;t.delete("/api/comment/"+a).then(function(e){n.reload()})}}]),angular.module("emailController",["userServices"]).controller("emailCtrl",["$stateParams","User","$timeout","$state",function(e,t,a,n){var r=this;t.activeAccount(e.token).then(function(e){r.successMsg=!1,r.errorMsg=!1,e.data.success?(r.successMsg=e.data.message+"...Redirecting",a(function(){n.go("app")},2e3)):(r.errorMsg=e.data.message+"...Redirecting",a(function(){n.go("app")},2e3))})}]).controller("resendCtrl",["User",function(e){app=this,this.checkCredentials=function(t){app.successMsg=!1,app.errorMsg=!1,app.disabled=!0,e.checkCredentials(this.loginData).then(function(t){t.data.success?e.resendLink(app.loginData).then(function(e){e.data.success&&(app.successMsg=e.data.message,app.disabled=!0)}):(app.disabled=!1,app.errorMsg=t.data.message)})}}]),angular.module("app").controller("GalleryController",["$scope","$http","$timeout","$stateParams","$location","$window",function(e,t,a,n,r,o){e.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."},{id:"1",name:"캘리그라피"},{id:"2",name:"서예"},{id:"3",name:"문인화"},{id:"4",name:"전각"},{id:"5",name:"음각"}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},e.deletePhoto=function(){var e=n.photo_id;t.delete("/api/gallery/"+e).then(function(e){r.path("app.gallery.category({code: 0})")})},e.getphoto=function(){var a=n.photo_id;t.get("/api/gallery/"+a).then(function(t){t.data[1].success?(e.userArticle=!0,e.photo=t.data[0][0]):(e.userArticle=!1,e.photo=t.data[0][0])})},e.getRelatedPic=function(){var a=n.photo_type;t.get("/api/galleryHeader/"+a).then(function(t){e.photos=t.data})},e.file={},e.insertPhoto=function(){e.uploading=!0;var a=new FormData;a.append("myfile",e.file.upload),t.post("/api/upload/",a,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(t){2===t.data.length?(o.alert(t.data[1].message),e.uploading=!1,e.mainImagePath=t.data[0],e.mainImageStatus=!0,e.file={}):(o.alert(t.data.message),e.uploading=!1,e.mainImageStatus=!1,e.file={})})},e.mainPhotoChanged=function(t){if(t.length>0&&t[0].name.match(/\.(png|jpeg|jpg)$/)){e.uploading=!0;var n=t[0],r=new FileReader;r.readAsDataURL(n),r.onload=function(t){a(function(){e.mainThumbnail={},e.mainThumbnail.dataUrl=t.target.result,e.uploading=!1,e.message=!1},2e3)}}else e.mainThumbnail={},e.message=!1},e.insertPhotoInfo=function(a,n){"0"===e.data.selectedOption.id?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="카테고리를 선택해주세요."):e.mainImageStatus?t.post("/api/myProfile/",{title:a,detail:n,mainImage:e.mainImagePath,type:e.data.selectedOption.id}).then(function(t){e.mainMessageStatus=!0,e.alert="alert alert-success",e.mainMessage=t.data.message}):(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="정보를 입력해주세요.")},e.insertPhotoInfo=function(){"0"===e.data.selectedOption.id?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="카테고리를 선택해주세요."):void 0===e.photo.photo_title||null===e.photo.photo_title?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="작품 제목을 입력해주세요."):void 0===e.photo.photo_detail||null===e.photo.photo_detail?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="작품 설명을 입력해주세요."):void 0===e.mainImagePath||null===e.mainImagePath?(e.mainImagePath=e.photo.photo_path,e.mainImageStatus=!0,t.put("/api/gallery/",{photo_id:e.photo.photo_id,title:e.photo.photo_title,detail:e.photo.photo_detail,mainImage:e.mainImagePath,type:e.data.selectedOption.id}).then(function(t){e.mainMessageStatus=!0,e.alert="alert alert-success",e.mainMessage="정보가 변경되었습니다."})):e.mainImageStatus?t.put("/api/gallery/",{photo_id:e.photo.photo_id,title:e.photo.photo_title,detail:e.photo.photo_detail,mainImage:e.mainImagePath,type:e.data.selectedOption.id}).then(function(t){e.mainMessageStatus=!0,e.alert="alert alert-success",e.mainMessage="정보가 변경되었습니다."}):(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="정보를 입력해주세요.")}}]),angular.module("app").controller("HomeCtrl",["$http","$scope",function(e,t){t.getContent=function(){e.get("/api/home").then(function(e){t.photos=e.data})}}]),angular.module("mainController",["authServices"]).controller("mainCtrl",["Auth","$timeout","$location","$state","$rootScope","$window","$interval",function(e,t,a,n,r,o,l){var i=this;i.loadme=!1,i.checkSession=function(){if(e.isLoggedIn()){i.checkSession=!0;var t=l(function(){var e=o.localStorage.getItem("token");if(null===e)l.cancel(t);else{self.parseJwt=function(e){var t=e.split(".")[1],a=t.replace("-","+").replace("_","/");return JSON.parse(o.atob(a))};var a=self.parseJwt(e),n=Math.floor(Date.now()/1e3);a.exp-n<=0&&(s(1),l.cancel(t))}},2e3)}},i.checkSession();var s=function(r){i.choiceMade=!1,i.modalHeader=void 0,i.modalBody=void 0,i.hideButton=!1,1===r?(i.modalHeader="Timeout Warning",i.modalBody="Your session will expired in 5 minutes. Would you like to renew your session?",$("#myModal").modal({backdrop:"static"})):2===r?(i.hideButton=!0,i.modalHeader="로그아웃...",$("#myModal").modal({backdrop:"static"}),t(function(){e.logout(),a.path("/"),d(2),n.reload()},2e3)):3===r&&$("#login").modal({backdrop:"static"}),t(function(){i.choicMade||(console.log("LOGGED OuT!!!"),d(2))},4e3)};i.renewSession=function(){i.choicMade=!0,d(2)},i.endSession=function(){i.choicMade=!0,d(2)};var d=function(e){1===e?$("#myModal").modal("hide"):2===e?$("#myModal").modal("hide"):3===e&&$("#login").modal("hide")};r.$on("$stateChangeStart",function(){i.checkSession||i.checkSession(),e.isLoggedIn()?(i.isLoggedIn=!0,e.getUser().then(function(e){i.user=e.data,i.loadme=!0})):(i.username=!1,i.isLoggedIn=!1,i.loadme=!0)}),this.doLogin=function(r,o){i.errorMsg=!1,i.expired=!1,i.disabled=!1,o?e.login(i.loginData).then(function(e){e.data.success?(i.successMsg=e.data.message,t(function(){a.path("/"),d(3),i.loginData=null,i.disabled=!0,i.successMsg=!1,i.isLoggedIn=!0,i.checkSession(),n.reload()},2e3)):e.data.expired?(i.expired=!0,i.disabled=!0,i.errorMsg=e.data.message):(i.disabled=!1,i.errorMsg=e.data.message)}):(i.disabled=!1,i.loading=!1,i.errorMsg="Please ensure form is filled our properly")},i.login=function(){s(3)},i.logout=function(){s(2)}}]),angular.module("app").controller("PhotosController",["$scope","$http",function(e,t){e.getArtist=function(){t.get("/api/myPhotos/").then(function(t){e.artistInfo=t.data})}}]),angular.module("app").controller("ProfileController",["$scope","$http",function(e,t){e.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."},{id:"1",name:"캘리그라피"},{id:"2",name:"서예"},{id:"3",name:"문인화"},{id:"4",name:"전각"},{id:"5",name:"음각"}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},e.history=[],e.skills=[],e.addSkill=function(t){e.skills.length>"4"?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="히스토리 등록은 5개로 제한됩니다."):void 0===e.newSkill||null===e.newSkill||""===e.newSkill?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="히스토리를 입력해주세요."):(e.mainMessageStatus=!0,e.skills.push({title:e.newSkill,done:!1}),e.newSkill="",e.history=e.skills)},e.deleteSkill=function(t){e.skills.splice(t,1)},e.getUserDetail=function(){t.get("/api/myProfileTap2/").then(function(t){e.userInfo2=t.data})},e.insertUserDetail=function(a){"0"===e.data.selectedOption.id?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="카테고리를 선택해주세요."):void 0===a.short_info||null===a.short_info||""===a.short_info?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="한 줄 소개를 입력해주세요."):void 0===a.detail_info||null===a.detail_info||""===a.detail_info?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="상세소개를 입력해주세요."):void 0===a.social_site||null===a.social_site||""===a.social_site?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="대표 사이트를 입력해주세요."):void 0===a.public_email||null===a.public_email||""===a.public_email?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="공개 이메일을 입력해주세요."):t.put("/api/myProfileTap2/",{response:a,user_type:e.data.selectedOption.id}).then(function(t){t.data.success?(e.mainMessageStatus=!0,e.alert="alert alert-success",e.mainMessage=t.data.message):(e.mainMessageStatus=!0,e.alert="alert alert-success",e.mainMessage=t)})},e.getUserProfile=function(){t.get("/api/myProfileTap1/").then(function(t){"admin"===t.data.permission||"moderator"===t.data.permission?(e.checkboxModel={value:!0},e.userSetting=t.data):(e.checkboxModel={value:!1},e.userSetting=t.data)})},e.updateUserInfo=function(){var a=e.checkboxModel.value,n=e.userSetting.permission,r=e.userSetting,o=e.userSetting.is_enrolled;a?o?(n="moderator",t.put("/api/myProfileTap1/",{permission:n,response:r,is_enrolled:"1"}).then(function(e){$window.location.reload()})):(UserSvc.created(),n="moderator",t.put("/api/myProfileTap1/",{permission:n,response:r,is_enrolled:"1"}).then(function(e){$window.location.reload()})):(n="user",t.put("/api/myProfileTap1/",{permission:n,response:r,is_enrolled:"1"}).then(function(e){$window.location.reload()}))},e.file={},e.photoChanged=function(t){if(t.length>0&&t[0].name.match(/\.(png|jpeg|jpg)$/)){var a=t[0],n=new FileReader;n.readAsDataURL(a),n.onload=function(t){$timeout(function(){e.thumbnail={},e.thumbnail.dataUrl=t.target.result,e.uploading=!1,e.message=!1})}}else e.thumbnail={},e.message=!1},e.updateProfileImage=function(){e.$emit("LOAD");var a=new FormData;a.append("myfile",e.file.upload),t.put("/api/myProfileImage/",a,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(t){t.data.success?(e.$emit("UNLOAD"),e.alert="alert alert-success",e.message=t.data.message,e.file={}):(e.$emit("UNLOAD"),e.alert="alert alert-danger",e.message=t.data.message,e.file={})})}}]),angular.module("app").controller("OpinionController",["$scope","$http","$stateParams",function(e,t,a){e.doLikeStatus=!0,e.doLike=function(){e.doLikeStatus=!e.doLikeStatus},e.getOpinion=function(n){var r=a.id;t.get("/api/opinion/"+r).then(function(t){e.opinionInfo=t.data[0][0]})}}]),angular.module("app").controller("UploadDisplayController",["$scope","$http","$timeout",function(e,t,a){e.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."},{id:"1",name:"전시회"},{id:"2",name:"공모전"},{id:"3",name:"휘호대회"}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},e.file={},e.mainPhotoChanged=function(t){if(t.length>0&&t[0].name.match(/\.(png|jpeg|jpg)$/)){e.uploading=!0;var n=t[0],r=new FileReader;r.readAsDataURL(n),r.onload=function(t){a(function(){e.mainThumbnail={},e.mainThumbnail.dataUrl=t.target.result,e.uploading=!1,e.displayMessage=!1})}}else e.mainThumbnail={},e.displayMessage=!1},e.insertDisplayTemp=function(){var a=new FormData;e.$emit("LOAD"),a.append("myfile",e.file.upload),t.post("/api/uploadDisplayTemp/",a,{entitiy:!0,transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(t){2===t.data.length?(e.$emit("UNLOAD"),e.alert="alert alert-success",e.displayMessage=t.data[1].message,e.mainImagePath=t.data[0],e.mainImageStatus=!0,e.file={}):(e.$emit("UNLOAD"),e.alert="alert alert-danger",e.displayMessage=t.data.message,e.mainImageStatus=!1,e.file={})})},e.insertDisplay=function(a,n){"0"===e.data.selectedOption.id?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="카테고리를 선택해주세요."):void 0===e.mainImagePath||null===e.mainImagePath?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="이미지를 업로드해주세요."):void 0===a||null===a?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="작품 제목을 입력해주세요."):void 0===n||null===n?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="작품 설명을 입력해주세요."):e.mainImageStatus?t.post("/api/uploadDisplay/",{title:a,detail:n,mainImage:e.mainImagePath,type:e.data.selectedOption.id}).then(function(t){e.mainMessageStatus=!0,e.alert="alert alert-success",e.mainMessage=t.data.message}):(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="정보를 입력해주세요.")}}]),angular.module("app").controller("UploadPhotoController",["$scope","$http","$timeout","uploadFile","$state","$stateParams","$location","$window",function(e,t,a,n,r,o,l,i){e.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."},{id:"1",name:"캘리그라피"},{id:"2",name:"서예"},{id:"3",name:"문인화"}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},e.file={},e.mainPhotoChanged=function(t){if(t.length>0&&t[0].name.match(/\.(png|jpeg|jpg)$/)){e.uploading=!0;var n=t[0],r=new FileReader;r.readAsDataURL(n),r.onload=function(t){a(function(){e.mainThumbnail={},e.mainThumbnail.dataUrl=t.target.result,e.uploading=!1,e.message=!1})}}else e.mainThumbnail={},e.message=!1},e.insertPhotoTemp=function(){var a=new FormData;e.$emit("LOAD"),a.append("myfile",e.file.upload),t.post("/api/uploadTemp/",a,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(t){2===t.data.length?(e.$emit("UNLOAD"),e.alert="alert alert-success",e.message=t.data[1].message,e.mainImagePath=t.data[0],e.mainImageStatus=!0,e.file={}):(e.$emit("UNLOAD"),e.alert="alert alert-danger",e.message=t.data.message,e.mainImageStatus=!1,e.file={})})},e.insertPhoto=function(a,n){"0"===e.data.selectedOption.id?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="카테고리를 선택해주세요."):void 0===e.mainImagePath||null===e.mainImagePath?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="이미지를 업로드해주세요."):void 0===a||null===a?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="작품 제목을 입력해주세요."):void 0===n||null===n?(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="작품 설명을 입력해주세요."):e.mainImageStatus?t.post("/api/upload/",{title:a,detail:n,mainImage:e.mainImagePath,type:e.data.selectedOption.id,user_id:e.main.user_id}).then(function(t){e.mainMessageStatus=!0,e.alert="alert alert-success",e.mainMessage=t.data.message}):(e.mainMessageStatus=!0,e.alert="alert alert-danger",e.mainMessage="정보를 입력해주세요.")}}]),angular.module("userControllers",["userServices"]).controller("regCtrl",["$http","$location","$timeout","User","Auth",function(e,t,a,n,r){var o=this;this.regUser=function(e,r,l){o.errorMsg=!1,o.disabled=!0,r&&l?n.create(o.regData).then(function(e){e.data.success?(o.disabled=!0,o.successMsg=e.data.message,a(function(){t.path("/")},2e3)):(o.disabled=!1,o.errorMsg=e.data.message)}):(o.disabled=!1,o.loading=!1,o.errorMsg="Please ensure form is filled our properly")}}]),angular.module("authServices",[]).factory("Auth",["$http","AuthToken",function(e,t){var a={};return a.getUser=function(){if(t.getToken())return e.post("/api/me");$q.reject({message:"User has no token"})},a.login=function(a){return e.post("/api/authenticate",a).then(function(e){return t.setToken(e.data.token),e})},a.isLoggedIn=function(){return!!t.getToken()},a.logout=function(){t.setToken()},a}]).factory("AuthToken",["$window",function(e){var t={};return t.setToken=function(t){t?e.localStorage.setItem("token",t):e.localStorage.removeItem("token",t)},t.getToken=function(){return e.localStorage.getItem("token")},t}]).factory("AuthInterceptors",["AuthToken",function(e){var t={};return t.request=function(t){var a=e.getToken();return a&&(t.headers["x-access-token"]=a),t},t}]),angular.module("app").service("uploadFile",["$http","$stateParams",function(e,t){this.upload=function(t){var a=new FormData;return a.append("myfile",t.upload),e.post("/api/upload",a,{transformRequest:angular.identity,headers:{"Content-Type":void 0}})}}]),angular.module("userServices",[]).factory("User",["$http",function(e){return userFactory={},userFactory.create=function(t){return e.post("/api/users",t)},userFactory.activeAccount=function(t){return e.put("/api/activate/"+t)},userFactory.checkCredentials=function(t){return e.post("/api/resend",t)},userFactory.resendLink=function(t){return e.put("/api/resend",t)},userFactory.sendUsername=function(t){return e.get("/api/resetusername/"+t)},userFactory.sendPassword=function(t){return e.put("/api/resetpassword",t)},userFactory.resetPassword=function(t){return e.get("/api/resetpassword/"+t)},userFactory.savePassword=function(t){return e.put("/api/savepassword",t)},userFactory}]),angular.module("app").controller("ArtistMenuController",["$scope","$http","$stateParams",function(e,t,a){e.data={availableOptions:[{sort:"-created",name:"최신순"}],selectedOption:{sort:"-created",name:"최신순"}},t.get("/api/artistMenu").then(function(t){e.headers=t.data}),e.getHeaderContent=function(){var n=a.code;t.get("/api/artistMenu/"+n).then(function(t){var a;for(a=0;a<t.data.length;a++)0===t.data[a].user_type&&(t.data[a].description="미분류");e.allArtist=t.data})}}]),angular.module("app").controller("BoardMenuController",["$scope","$http","$stateParams",function(e,t,a){e.data={availableOptions:[{sort:"-created",name:"최신순"},{sort:"-view",name:"조회순"},{sort:"-comment_count",name:"댓글순"}],selectedOption:{sort:"-created",name:"최신순"}},t.get("/api/boardMenu").then(function(t){e.headers=t.data}),e.getHeaderContent=function(){var n=a.code;t.get("/api/boardMenu/"+n).then(function(t){e.boardes=t.data})}}]),angular.module("app").controller("displayMenuController",["$scope","$http","$stateParams",function(e,t,a){e.data={availableOptions:[{sort:"-created",name:"최신순"}],selectedOption:{sort:"-created",name:"최신순"}},t.get("/api/displayMenu").then(function(t){e.headers=t.data}),e.getHeaderContent=function(){var n=a.code;t.get("/api/displayMenu/"+n).then(function(t){e.displays=t.data})}}]),angular.module("app").controller("GalleryMenuController",["$scope","$http","$stateParams",function(e,t,a){e.data={availableOptions:[{sort:"-created",name:"최신순"},{sort:"-view",name:"조회순"},{sort:"-comment_count",name:"댓글순"}],selectedOption:{sort:"-created",name:"최신순"}},t.get("/api/galleryMenu").then(function(t){e.headers=t.data}),e.getHeaderContent=function(){var n=a.code;t.get("/api/galleryMenu/"+n).then(function(t){e.photos=t.data})}}]),angular.module("app").controller("MainMenuController",["$http","$scope",function(e,t){e.get("/api/header").then(function(e){t.headers=e.data})}]),angular.module("resetController",["userServices"]).controller("usernameCtrl",["User",function(e){var t=this;this.sendUsername=function(a,n){t.errorMsg=!1,t.disabled=!0,n?e.sendUsername(t.userData.email).then(function(e){e.data.success?t.successMsg=e.data.message:(t.disabled=!1,t.errorMsg=e.data.message)}):(t.disabled=!1,t.errorMsg="Please enter a valid e-mail!")}}]).controller("passwordCtrl",["User",function(e){var t=this;t.sendPassword=function(a,n){t.errorMsg=!1,t.disabled=!0,n?e.sendPassword(t.resetData).then(function(e){e.data.success?t.successMsg=e.data.message:(t.disabled=!1,t.errorMsg=e.data.message)}):(t.disabled=!1,t.errorMsg="Please enter a valid username!")}}]).controller("resetCtrl",["$stateParams","$scope","User","$timeout",function(e,t,a,n){var r=this;r=this,r.hide=!0,a.resetPassword(e.token).then(function(e){e.data.success?(r.hide=!1,t.alert="alert alert-success",r.successMsg="Please enter a new password",t.username=e.data.user[0].username):(t.alert="alert alert-danger",r.errorMsg=e.data.message)}),r.savePassword=function(e,o,l){r.errorMsg=!1,r.successMsg=!1,r.disabled=!0,r.loading=!0,o&&l?(r.regData.username=t.username,a.savePassword(r.regData).then(function(e){r.loading=!1,e.data.success?(t.alert="alert alert-success",r.successMsg=e.data.message+"...Redirecting",n(function(){$location.path("/login")},2e3)):(t.alert="alert alert-danger",r.disabled=!1,r.errorMsg=e.data.message)})):(t.alert="alert alert-danger",r.loading=!1,r.disabled=!1,r.errorMsg="Please ensure form is filled out properly")}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

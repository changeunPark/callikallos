angular.module("app",["ui.router","ui.bootstrap","userControllers","mainControllers","emailControllers","artistControllers","gallertControllers","commentControllers","boardControllers","managementControllers","uiCropper"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptors")}]);var app=angular.module("app");app.config(["$stateProvider","$urlRouterProvider","$locationProvider",function(e,t,a){t.otherwise("/"),e.state("app",{url:"/",views:{header:{templateUrl:"/menues/mainMenu.html",controller:"mainMenuController"},content:{templateUrl:"/main/home.html"},footer:{templateUrl:"/company/footer.html"}}}).state("management",{url:"/management",templateUrl:"/management/management.html",controller:"managementCtrl",controllerAs:"management",permission:"admin"}).state("registerStep1",{url:"/register/step1",controller:"regCtrl",controllerAs:"register",templateUrl:"/isLoggedOut/registerStep1.html",authenticated:!1}).state("registerStep2",{url:"/register/step2",controller:"regCtrl",controllerAs:"register",templateUrl:"/isLoggedOut/registerStep2.html",authenticated:!1}).state("resetusername",{url:"/resetusername",templateUrl:"/users/reset/username.html",controller:"usernameCtrl",controllerAs:"username"}).state("resetpassword",{url:"/resetpassword",templateUrl:"/users/reset/password.html",controller:"passwordCtrl",controllerAs:"password"}).state("reset",{url:"/reset/:token",templateUrl:"/users/reset/newpassword.html",controller:"resetCtrl",controllerAs:"reset"}).state("activate",{url:"/activate/:token",templateUrl:"/users/activation/activate.html",controller:"emailCtrl",controllerAs:"email"}).state("resend",{url:"/resend",templateUrl:"/users/activation/resend.html",controller:"resendCtrl",controllerAs:"resend"}).state("app.profiles",{url:"profiles",views:{"content@":{templateUrl:"isLoggedIn/userProfiles.html",controller:"profileCtrl",controllerAs:"profile",authenticated:!1}}}).state("app.photos",{url:"photos",views:{"content@":{templateUrl:"isLoggedIn/artistPhotos.html",controller:"anArtistPhotoCtrl",controllerAs:"anArtistPhoto",authenticated:!1}}}).state("app.artistProfiles",{url:"artist",views:{"content@":{templateUrl:"isLoggedIn/artistProfiles.html",controller:"artistProfileCtrl",controllerAs:"artistProfile",authenticated:!0}}}).state("app.intro",{url:"intro",views:{"content@":{templateUrl:"/company/intro.html",authenticated:!1}}}).state("app.terms",{url:"terms",views:{"content@":{templateUrl:"/company/terms.html",authenticated:!1}}}).state("app.privacy",{url:"privacy",views:{"content@":{templateUrl:"/company/privacy.html",authenticated:!1}}}).state("app.artist",{url:"artist/category=:code",views:{"content@":{templateUrl:"/main/form.html"},"menu@app.artist":{templateUrl:"/partialArtist/artistTap.html",controller:"artistTapCtrl",controllerAs:"artistTap",authenticated:!1},"contents@app.artist":{templateUrl:"/partialArtist/artists.html",controller:"artistsCtrl",controllerAs:"artists",authenticated:!1}}}).state("app.gallery",{url:"gallery/category=:code",views:{"content@":{templateUrl:"/main/form.html"},"menu@app.gallery":{templateUrl:"/partialGallery/galleryTap.html",controller:"galleryTapCtrl",controllerAs:"galleryTap"},"contents@app.gallery":{templateUrl:"/partialGallery/photos.html",controller:"galleryPhotosCtrl",controllerAs:"galleryPhotos",authenticated:!1}}}).state("app.board",{url:"board/category=:code",views:{"content@":{templateUrl:"/main/form.html"},"menu@app.board":{templateUrl:"/partialBoard/boardTap.html",controller:"boardTapCtrl",authenticated:!1},"contents@app.board":{templateUrl:"/partialBoard/boards.html",controller:"boardsCtrl",controllerAs:"boards",authenticated:!1}}}).state("app.display",{url:"display/category=:code",views:{"content@":{templateUrl:"/main/form.html"},"menu@app.display":{templateUrl:"/partialDisplay/displayTap.html",controller:"displayMenuController",authenticated:!1},"contents@app.display":{templateUrl:"/partialDisplay/content.html",controller:"displayMenuController",authenticated:!1}}}).state("app.artist.show",{url:"/artist:artist_id",views:{"contents@app.artist":{templateUrl:"/partialArtist/artist.html",controller:"artistPhotoCtrl",controllerAs:"artistPhoto",authenticated:!1}}}).state("app.gallery.show",{url:"/photo_type=:photo_type/photo:photo_id",views:{"contents@app.gallery":{templateUrl:"/partialGallery/photo.html",controller:"galleryPhotoCtrl",controllerAs:"galleryphoto"}}}).state("app.board.show",{url:"/board:board_id",views:{"contents@app.board":{templateUrl:"partialBoard/board.html",controller:"boardCtrl",controllerAs:"board"}}}).state("app.board.create",{url:"/create",views:{"contents@app.board":{templateUrl:"/partialBoard/boardCreate.html",controller:"boardCtrl",controllerAs:"board",authenticated:!0}}}).state("app.board.edit",{url:"/edit/:board_id",views:{"contents@app.board":{templateUrl:"partialBoard/boardUpdate.html",controller:"boardCtrl",controllerAs:"board",authenticated:!0}}}).state("app.gallery.edit",{url:"/edit/:photo_id",views:{"content@":{templateUrl:"/partialGallery/photoEdit.html",controller:"galleryPhotoCtrl",controllerAs:"galleryphoto"}}})}]),app.run(["$rootScope","User","$state",function(e,t,a){e.$on("$stateChangeStart",function(e,a,r,o,s,n){"admin"===a.permission&&t.getPermission().then(function(e){})}),e.$on("$stateChangeError",function(e,t,r,o,s,n){a.go("app")})}]),angular.module("commentControllers",["commentServices"]).controller("commentCtrl",["$scope","$http","$stateParams","$state","$window","Comment",function(e,t,a,r,o,s){var n=a.photo_id;this.createComment=function(t){if(e.main.user.user_id)if(t){var a={comment:t,user_id:e.main.user.user_id,photo_id:n};s.createComment(a).then(function(e){e.data.success&&r.reload()})}else o.alert("댓글을 입력해주세요.");else e.main.login()},e.deleteComment=function(e){var a=e.comment_id;t.delete("/api/comment/"+a).then(function(e){r.reload()})}}]),angular.module("app").controller("ImageCropCtrl",["$scope",function(e){e.myCroppedImage="",e.myImage=void 0,e.crobject={};var t=function(t){var a=t.currentTarget.files[0],r=new FileReader;r.onload=function(t){e.$apply(function(e){e.myImage=t.target.result})},r.readAsDataURL(a)};angular.element(document.querySelector("#fileInput")).on("change",t),this.imageCrop=function(){var t=e.myImage;console.log(t)}}]),angular.module("managementControllers",[]).controller("managementCtrl",function(){console.log("작동 중")}),angular.module("app").directive("fileModel",["$parse",function(e){return{restrict:"A",link:function(t,a,r){var o=e(r.fileModel),s=o.assign;a.bind("change",function(){t.$apply(function(){s(t,a[0].files[0])})})}}}]),angular.module("app").directive("match",function(){return{restrict:"A",controller:["$scope",function(e){e.doConfirm=function(t){e.confirmed=!1,t.forEach(function(t){e.confirm==t?e.confirmed=!0:e.confirmed=!1})}}],link:function(e,t,a){a.$observe("match",function(){e.matches=JSON.parse(a.match),e.doConfirm(e.matches)}),e.$watch("confirm",function(){e.matches=JSON.parse(a.match),e.doConfirm(e.matches)})}}}),angular.module("artistServices",[]).factory("Artist",["$http",function(e){return artistFactory={},artistFactory.readArtistTap=function(){return e.get("/api/artistMenu")},artistFactory.readArtists=function(t){return e.get("/api/artistMenu/"+t)},artistFactory.readArtist=function(t){return e.get("/api/artist/"+t)},artistFactory.createAristPhoto=function(t){return e.post("/api/artistProfiles",t)},artistFactory.updateAristProfile=function(t){return e.put("/api/artistProfiles",t)},artistFactory.readArtistProfile=function(t){return e.get("/api/artistProfiles/"+t)},artistFactory.readAristPhoto=function(t){return e.get("/api/artistPhotos/"+t)},artistFactory}]),angular.module("authServices",[]).factory("Auth",["$http","AuthToken",function(e,t){var a={};return a.getUser=function(){if(t.getToken())return e.post("/api/me");$q.reject({message:"User has no token"})},a.login=function(a){return e.post("/api/authenticate",a).then(function(e){return t.setToken(e.data.token),e})},a.isLoggedIn=function(){return!!t.getToken()},a.logout=function(){t.setToken()},a}]).factory("AuthToken",["$window",function(e){var t={};return t.setToken=function(t){t?e.localStorage.setItem("token",t):e.localStorage.removeItem("token",t)},t.getToken=function(){return e.localStorage.getItem("token")},t}]).factory("AuthInterceptors",["AuthToken",function(e){var t={};return t.request=function(t){var a=e.getToken();return a&&(t.headers["x-access-token"]=a),t},t}]),angular.module("boardServices",[]).factory("Board",["$http",function(e){return boardFactory={},boardFactory.readBoardTap=function(){return e.get("/api/boardMenu")},boardFactory.readBoards=function(t){return e.get("/api/boardMenu/"+t)},boardFactory.readBoard=function(t){return e.get("api/board/"+t)},boardFactory.createBoard=function(t){return e.post("/api/boardMenu",t)},boardFactory}]),angular.module("commentServices",[]).factory("Comment",["$http",function(e){return commentFactory={},commentFactory.createComment=function(t){return e.post("/api/comment",t)},commentFactory.readComment=function(t){return e.get("/api/comment/"+t)},commentFactory.readBoardComment=function(t){return e.get("/api/commentBoard/"+t)},commentFactory}]),angular.module("galleryServices",[]).factory("Gallery",["$http",function(e){return galleryFactory={},galleryFactory.readGalleryTap=function(){return e.get("/api/galleryMenu")},galleryFactory.readPhotos=function(t){return e.get("/api/galleryMenu/"+t)},galleryFactory.readPhotoData=function(t){return e.get("/api/gallery/"+t)},galleryFactory.readMorePhoto=function(t){return e.get("/api/galleryMenu/"+t)},galleryFactory}]),angular.module("userServices",[]).factory("User",["$http",function(e){return userFactory={},userFactory.getPermission=function(){return e.get("/api/permission")},userFactory.create=function(t){return e.post("/api/users",t)},userFactory.activeAccount=function(t){return e.put("/api/activate/"+t)},userFactory.checkCredentials=function(t){return e.post("/api/resend",t)},userFactory.resendLink=function(t){return e.put("/api/resend",t)},userFactory.sendUsername=function(t){return e.get("/api/resetusername/"+t)},userFactory.sendPassword=function(t){return e.put("/api/resetpassword",t)},userFactory.resetPassword=function(t){return e.get("/api/resetpassword/"+t)},userFactory.savePassword=function(t){return e.put("/api/savepassword",t)},userFactory.renewSession=function(t){return e.get("/api/renewToken/"+t)},userFactory.resetPermission=function(t){return e.put("/api/users/",t)},userFactory.checkPermission=function(t){return e.get("/api/users/"+t)},userFactory.readProfiles=function(t){return e.get("/api/userProfiles/"+t)},userFactory.updateProfiles=function(t){return e.put("/api/userProfiles",t)},userFactory}]),angular.module("artistControllers",["userServices","artistServices"]).controller("artistTapCtrl",["$scope","Artist",function(e,t){t.readArtistTap().then(function(t){t.data.success?e.headers=t.data.result:app.errorMsg=t.data.message})}]).controller("artistsCtrl",["$stateParams","Artist",function(e,t){var a=this,r=e.code;a.data={availableOptions:[{sort:"-created",name:"최신순"}],selectedOption:{sort:"-created",name:"최신순"}},t.readArtists(r).then(function(e){e.data.success?a.artistDatas=e.data.result:a.errorMsg=e.data.message})}]).controller("uploadCtrl",["$http","$timeout","$scope","Artist","$state",function(e,t,a,r,o){var s=this;s.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."},{id:"1",name:"붓 글씨"},{id:"2",name:"펜 글씨"},{id:"3",name:"미분류"}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},this.file={},this.mainPhotoChanged=function(e){if(e.length>0&&e[0].name.match(/\.(png|jpeg|jpg)$/)){var a=e[0],r=new FileReader;r.readAsDataURL(a),r.onload=function(e){t(function(){s.mainThumbnail={},s.mainThumbnail.dataUrl=e.target.result})}}else s.mainThumbnail={}},this.readPhoto=function(){s.errorMsg=!1,s.disabled=!0,a.$emit("LOAD");var t=new FormData;t.append("myfile",s.file.upload),e.post("/api/uploadTemp/",t,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){e.data.success?(a.$emit("UNLOAD"),s.disabled=!1,s.successMsg=e.data.message,s.mainImagePath=e.data.photo_path,s.file={}):(a.$emit("UNLOAD"),s.disabled=!1,s.errorMsg=e.data.message,s.file={})})},this.createPhoto=function(e){s.disabled=!1,s.errorMsg=!1,e?void 0===s.uploadData.title||null===s.uploadData.title||""===s.uploadData.title?s.errorMsg="작품의 제목을 입력해주세요.":void 0===s.uploadData.detail||null===s.uploadData.detail||""===s.uploadData.detail?s.errorMsg="작품의 설명을 입력해주세요.":void 0===s.mainImagePath||null===s.mainImagePath||""===s.mainImagePath?s.errorMsg="작품 이미지를 선택해주세요.":"0"===s.data.selectedOption.id?s.errorMsg="작품의 종류를 선택해주세요.":(s.uploadData=e,s.uploadData.user_id=a.main.user.user_id,s.uploadData.photo_type=s.data.selectedOption.id,s.uploadData.photo_path=s.mainImagePath,r.createAristPhoto(s.uploadData).then(function(e){e.data.success?(s.successMsg=e.data.message,s.disabled=!0,t(function(){o.reload()},2e3)):(s.errorMsg=e.data.message,s.successMsg=!1,s.disabled=!1)})):(s.errorMsg="빈칸을 모두 입력해주세요.",s.successMsg=!1)}}]).controller("artistProfileCtrl",["$timeout","Artist","$state","$scope",function(e,t,a,r){var o=this,s=r.main.user.user_id;o.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."},{id:"1",name:"붓 글씨"},{id:"2",name:"펜 글씨"},{id:"3",name:"미분류"}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},t.readArtistProfile(s).then(function(e){e.data.success?o.artistData=e.data.result:o.errorMsg=e.data.message}),this.updateAristProfile=function(s){console.log("작동 중"),o.errorMsg=!1,s?void 0===o.artistData.short_info||null===o.artistData.short_info||""===o.artistData.short_info?o.errorMsg="한 줄 소개를 입력해주세요.":void 0===o.artistData.detail_info||null===o.artistData.detail_info||""===o.artistData.detail_info?o.errorMsg="상세 소개를 입력해주세요.":(o.artistData=s,o.artistData.user_id=r.main.user.user_id,t.updateAristProfile(o.artistData).then(function(t){t.data.success?(o.errorMsg=!1,o.successMsg=t.data.message,o.disabled=!0,e(function(){a.reload()},2e3)):o.errorMsg="올바르지 않은 값이 입력되었습니다."})):o.errorMsg="필수기재사항을 입력해주세요."}}]).controller("anArtistPhotoCtrl",["Artist","$stateParams","$scope",function(e,t,a){var r=this,o=a.main.user.user_id;e.readArtistProfile(o).then(function(e){e.data.success?r.artistData=e.data.result:r.errorMsg=e.data.message}),e.readAristPhoto(o).then(function(e){e.data.success?r.artistPhotos=e.data.result:r.errorMsg=e.data.message})}]).controller("artistPhotoCtrl",["Artist","$stateParams",function(e,t){var a=this,r=t.artist_id;e.readArtistProfile(r).then(function(e){e.data.success?a.artistData=e.data.result:a.errorMsg=e.data.message}),e.readAristPhoto(r).then(function(e){e.data.success?a.artistPhotos=e.data.result:a.errorMsg=e.data.message})}]),angular.module("boardControllers",["boardServices"]).filter("to_trusted",["$sce",function(e){return function(t){return e.trustAsHtml(t)}}]).controller("boardTapCtrl",["Board","$scope",function(e,t){e.readBoardTap().then(function(e){t.headers=e.data})}]).controller("boardsCtrl",["$stateParams","Board","$scope","$state",function(e,t,a,r){var o=this,s=e.code;o.data={availableOptions:[{sort:"-created",name:"최신순"},{sort:"-view",name:"조회순"},{sort:"-comment_count",name:"댓글순"}],selectedOption:{sort:"-created",name:"최신순"}},t.readBoards(s).then(function(e){o.boardDatas=e.data.result}),this.createBoard=function(e){a.main.user.user_id?r.go("app.board.create"):a.main.login()}}]).controller("boardCtrl",["$stateParams","Board","$scope","$http","$state","$timeout","Comment","$window",function(e,t,a,r,o,s,n,i){var l=this,c=e.board_id;l.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."},{id:"1",name:"공지사항"},{id:"2",name:"잡학사전"},{id:"3",name:"질문사항"}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},n.readBoardComment(c).then(function(e){e.data.success?l.commentData=e.data.result:l.errorMsg=e.data.message}),this.createComment=function(e){if(a.main.user.user_id)if(e){var t={comment:e,user_id:a.main.user.user_id,board_id:c};n.createComment(t).then(function(e){e.data.success&&o.reload()})}else i.alert("댓글을 입력해주세요.");else a.main.login()},$(document).ready(function(){$("#summernote").summernote({lang:"ko-KR",height:100,minHeight:null,maxHeight:null,focus:!0,placeholder:"댓글은 1,000자까지 작성할 수 있으며 주제와 무관한 댓글, 악성 댓글은 삭제될 수 있습니다.",toolbar:[["style",["bold","italic","underline","clear"]],["font",["strikethrough","superscript","subscript"]],["fontsize",["fontsize"]],["color",["color"]],["para",["ul","ol","paragraph"]],["height",["height"]]]})}),this.createBoard=function(e){if(l.disabled=!0,l.errorMsg=!1,"0"===l.data.selectedOption.id)l.errorMsg="게시글의 종류를 선택해주세요",l.disabled=!1;else if(void 0===e||null===e||""===e)l.errorMsg="제목을 입력해주세요.",l.disabled=!1;else if("<p><br></p>"===$("#summernote").summernote("code")||null===$("#summernote").summernote("code")||void 0===$("#summernote").summernote("code")||""===$("#summernote").summernote("code"))l.errorMsg="내용을 입력해주세요.",l.disabled=!1;else{var r=$("#summernote").summernote("code"),n=l.data.selectedOption.id,i=e.title,c={title:i,content:r,board_type:n,user_id:a.main.user.user_id};t.createBoard(c).then(function(e){e.data.success?(l.successMsg=e.data.message,s(function(){o.go("app.board")},500)):(l.disabled=!1,l.errorMsg=e.data.message)})}},t.readBoard(c).then(function(e){e.data.success?(l.boardDatas=e.data.result,l.htmlcontent=e.data.result.content):l.errorMsg=e.data.message})}]),angular.module("gallertControllers",["galleryServices"]).controller("galleryTapCtrl",["$scope","Gallery",function(e,t){t.readGalleryTap().then(function(t){t.data.success?e.headers=t.data.result:app.errorMsg=t.data.message})}]).controller("galleryPhotosCtrl",["Gallery","$stateParams",function(e,t){var a=this,r=t.code;a.data={availableOptions:[{sort:"-created",name:"최신순"},{sort:"-view",name:"조회순"},{sort:"-comment_count",name:"댓글순"}],selectedOption:{sort:"-created",name:"최신순"}},e.readPhotos(r).then(function(e){e.data.success?a.photoData=e.data.result:a.errorMsg=e.data.message})}]).controller("galleryPhotoCtrl",["$stateParams","Gallery","Comment","$scope","$window","$state",function(e,t,a,r,o,s){var n=this,i=e.photo_id,l=e.photo_type;r.main.user.user_id;t.readPhotoData(i).then(function(e){e.data.success?n.photoData=e.data.result:n.errorMsg=e.data.message}),t.readPhotos(l).then(function(e){e.data.success?n.photosData=e.data.result:n.errorMsg=e.data.message}),a.readComment(i).then(function(e){e.data.success?(n.commentData=e.data.result,console.log(n.commentData)):n.errorMsg=e.data.message}),this.createComment=function(e){if(r.main.user.user_id)if(e){var t={comment:e,user_id:r.main.user.user_id,photo_id:i};a.createComment(t).then(function(e){e.data.success&&s.reload()})}else o.alert("댓글을 입력해주세요.");else r.main.login()}}]),angular.module("app").controller("HomeCtrl",["$http","$scope",function(e,t){t.getContent=function(){e.get("/api/home").then(function(e){t.photos=e.data})}}]),angular.module("mainControllers",["authServices","userServices"]).controller("mainCtrl",["Auth","$timeout","$location","$state","$rootScope","$scope","$window","$interval","User","AuthToken",function(e,t,a,r,o,s,n,i,l,c){var d=this;d.loadme=!1,s.$on("LOAD",function(){s.loading=!0}),s.$on("UNLOAD",function(){s.loading=!1}),o.$on("$stateChangeStart",function(){u||u(),e.isLoggedIn()?(d.isLoggedIn=!0,e.getUser().then(function(e){d.user=e.data,l.getPermission().then(function(e){e.data.success?"admin"===e.data.permission?(d.authorized=!0,d.loadme=!0):"artist"===e.data.permission?(d.permission=!0,d.loadme=!0):(d.permission=!1,d.authorized=!1,d.loadme=!0):(d.permission=!1,d.authorized=!1,d.loadme=!0)})})):(d.user=!1,d.isLoggedIn=!1,d.loadme=!0)});var u=function(){if(e.isLoggedIn()){d.checkSession=!0;var t=i(function(){var e=n.localStorage.getItem("token");if(null===e)i.cancel(t);else{self.parseJwt=function(e){var t=e.split(".")[1],a=t.replace("-","+").replace("_","/");return JSON.parse(n.atob(a))};var a=self.parseJwt(e),r=Math.floor(Date.now()/1e3);a.exp-r<=5&&(m("expired"),i.cancel(t))}},2e3)}};u(),d.renewSession=function(){d.choiceMade=!0,l.renewSession(d.user.username).then(function(e){e.data.success?(c.setToken(e.data.token),u(),p("expired")):(d.ModalBody=e.data.message,p("expired"))})},d.endSession=function(){d.choiceMade=!0,p("expired"),t(function(){m("logout")},500)};var m=function(a){d.choiceMade=!1,d.modalHeader=void 0,d.modalBody=void 0,d.hideButton=!1,"expired"===a?(d.modalHeader="Timeout Warning",d.modalBody="Your session will expired in 5 minutes. Would you like to renew your session?",$("#myModal").modal({backdrop:"static"})):"logout"===a?(d.hideButton=!0,d.modalHeader="로그아웃",$("#myModal").modal({backdrop:"static"}),t(function(){e.logout(),d.isLoggedIn=!1,p("logout"),r.reload()},2e3)):"login"===a?$("#login").modal({backdrop:"static"}):"upload"===a&&$("#upload").modal({backdrop:"static"}),t(function(){d.choiceMade||p("logout")},4e3)},p=function(e){"expired"===e?$("#myModal").modal("hide"):"logout"===e?$("#myModal").modal("hide"):"login"===e?$("#login").modal("hide"):"upload"===e&&$("#upload").modal("hide")};this.doLogin=function(a,o){d.errorMsg=!1,d.expired=!1,d.disabled=!0,o?e.login(d.loginData).then(function(e){e.data.success?(d.disabled=!0,d.successMsg=e.data.message,t(function(){p("login"),d.loginData=null,d.isLoggedIn=!0,u(),r.reload()},2e3)):e.data.expired?(d.expired=!0,d.disabled=!0,d.errorMsg=e.data.message):(d.disabled=!1,d.errorMsg=e.data.message)}):(d.disabled=!1,d.loading=!1,d.errorMsg="올바른 정보를 입력해주세요.")},this.upload=function(){d.choiceMade=!0,"artist"===d.user.permission?r.go("app.artistProfiles"):l.checkPermission(d.user.username).then(function(e){e.data.success?(r.go("app.artistProfiles"),d.permission=!0):m("upload")})},this.doPermission=function(){d.choiceMade=!0,d.uploadDisabled=!0,d.uploaderrorMsg=!1,l.resetPermission(d.user).then(function(e){e.data.success?(d.uploadDisabled=!0,d.uploadSuccessMsg=e.data.message,t(function(){p("upload"),r.go("app.artistProfiles")},2e3)):(d.uploadDisabled=!1,d.uploaderrorMsg="잘못된 정보가 입력되었습니다.")})},d.login=function(){d.successMsg=!1,d.errorMsg=!1,d.disabled=!1,m("login")},d.logout=function(){m("logout")},d.resend=function(){p("login"),t(function(){r.go("resend"),d.expired=!1},500)},d.resetusername=function(){p("login"),t(function(){r.go("resetusername")},500)},d.resetpassword=function(){p("login"),t(function(){r.go("resetpassword")},500)}}]),angular.module("app").controller("mainMenuController",["$http","$scope",function(e,t){e.get("/api/header").then(function(e){t.headers=e.data})}]),angular.module("emailControllers",["userServices"]).controller("emailCtrl",["$stateParams","User","$timeout","$state",function(e,t,a,r){var o=this;t.activeAccount(e.token).then(function(e){o.successMsg=!1,o.errorMsg=!1,e.data.success?(o.disabled=!0,o.successMsg=e.data.message+"...메인 페이지로 이동합니다.",a(function(){r.go("app")},2e3)):(o.errorMsg=e.data.message+"...메인 페이지로 이동합니다.",a(function(){r.go("app")},2e3))})}]).controller("resendCtrl",["User","$timeout","$state",function(e,t,a){app=this,this.checkCredentials=function(r){app.successMsg=!1,app.errorMsg=!1,app.disabled=!0,e.checkCredentials(this.loginData).then(function(r){r.data.success?e.resendLink(app.loginData).then(function(e){e.data.success&&(app.disabled=!0,app.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3))}):(app.disabled=!1,app.errorMsg=r.data.message)})}}]).controller("usernameCtrl",["User","$timeout","$state",function(e,t,a){var r=this;this.sendUsername=function(o,s){r.errorMsg=!1,r.disabled=!0,s?e.sendUsername(r.userData.email).then(function(e){e.data.success?(r.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3)):(r.disabled=!1,r.errorMsg=e.data.message)}):(r.disabled=!1,r.errorMsg="올바른 이메일 주소가 아닙니다.")}}]).controller("passwordCtrl",["User","$timeout","$state",function(e,t,a){var r=this;r.sendPassword=function(o,s){r.errorMsg=!1,r.disabled=!0,s?e.sendPassword(r.resetData).then(function(e){e.data.success?(r.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3)):(r.disabled=!1,r.errorMsg=e.data.message)}):(r.disabled=!1,r.errorMsg="올바른 아이디가 아닙니다.")}}]).controller("resetCtrl",["$stateParams","$scope","User","$timeout","$state",function(e,t,a,r,o){var s=this;s.hide=!0,a.resetPassword(e.token).then(function(e){e.data.success?(s.hide=!1,t.alert="alert alert-success",s.successMsg="새로운 비밀번호를 입력해주세요.",t.username=e.data.user[0].username):(t.alert="alert alert-danger",s.errorMsg=e.data.message)}),s.savePassword=function(e,n,i){s.errorMsg=!1,s.successMsg=!1,s.disabled=!0,s.loading=!0,n&&i?(s.regData.username=t.username,a.savePassword(s.regData).then(function(e){s.loading=!1,e.data.success?(t.alert="alert alert-success",s.successMsg=e.data.message+"...메인 화면으로 이동합니다.",r(function(){o.go("app")},2e3)):(t.alert="alert alert-danger",s.disabled=!1,s.errorMsg=e.data.message)})):(t.alert="alert alert-danger",s.loading=!1,s.disabled=!1,s.errorMsg="올바른 정보를 입력해주세요.")}}]),angular.module("userControllers",["userServices"]).controller("regCtrl",["$http","$location","$timeout","User","Auth","$state",function(e,t,a,r,o,s){var n=this;this.regStep1=function(e){n.errorMsg=!1,e?e.terms&&e.privacy?(n.successMsg="약관에 성공적으로 동의하셨습니다.",n.disabled=!0,s.go("registerStep2")):(n.errorMsg="약관에 동의해야만 회원가입을 진행할 수 있습니다.",n.disabled=!1):n.errorMsg="약관에 동의해야만 회원가입을 진행할 수 있습니다."},this.regStep2=function(e,t,o){n.errorMsg=!1,n.disabled=!0,t&&o?r.create(n.regData).then(function(e){e.data.success?(n.disabled=!0,n.successMsg=e.data.message,a(function(){$("#register").modal("hide"),n.regData=null,n.isLoggedIn=!1,s.go("app")},3e3)):(n.disabled=!1,n.errorMsg=e.data.message)}):(n.disabled=!1,n.loading=!1,n.errorMsg="올바른 정보를 입력해주세요.")}}]).controller("profileCtrl",["$scope","User","$timeout","$state","$http",function(e,t,a,r,o){var s=this,n=e.main.user.username;t.readProfiles(n).then(function(e){e.data.success?s.readData=e.data.profiles:s.errorMsg=e.data.message}),this.file={},this.photoChanged=function(e){if(e.length>0&&e[0].name.match(/\.(png|jpeg|jpg)$/)){var t=e[0],r=new FileReader;r.readAsDataURL(t),r.onload=function(e){a(function(){s.thumbnail={},s.thumbnail.dataUrl=e.target.result,s.uploading=!1,s.message=!1})}}else s.thumbnail={},s.message=!1},this.updateProfileImage=function(){s.errorMsg=!1,s.disabled=!0,e.$emit("LOAD");var t=new FormData,n=e.main.user.user_id;t.append("myfile",s.file.upload),o.put("/api/uploadTemp/"+n,t,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(t){t.data.success?(e.$emit("UNLOAD"),s.successMsg=t.data.message,s.file={},a(function(){r.reload()},1e3)):(e.$emit("UNLOAD"),s.disabled=!1,s.errorMsg=t.data.message,s.file={})})},this.updateProfile=function(){s.errorMsg=!1,s.disabled=!0,s.readData.user_id=e.main.user.user_id,t.updateProfiles(s.readData).then(function(e){e.data.success?(s.successMsg=e.data.message,a(function(){r.reload()},2e3)):(s.errorMsg=e.data.message,s.disabled=!1)})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

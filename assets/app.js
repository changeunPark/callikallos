angular.module("app",["ui.router","ui.bootstrap","userControllers","mainControllers","emailControllers","artistControllers","gallertControllers","commentControllers","boardControllers","uiCropper"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptors")}]);var app=angular.module("app");app.config(["$stateProvider","$urlRouterProvider","$locationProvider",function(e,t,a){t.otherwise("/"),e.state("app",{url:"/",views:{header:{templateUrl:"/menues/mainMenu.html",controller:"MainMenuController"},content:{templateUrl:"../categories/home.html"},footer:{templateUrl:"/company/footer.html"}}}).state("registerStep1",{url:"/register/step1",controller:"regCtrl",controllerAs:"register",templateUrl:"/isLoggedOut/registerStep1.html",authenticated:!1}).state("registerStep2",{url:"/register/step2",controller:"regCtrl",controllerAs:"register",templateUrl:"/isLoggedOut/registerStep2.html",authenticated:!1}).state("resetusername",{url:"/resetusername",templateUrl:"/users/reset/username.html",controller:"usernameCtrl",controllerAs:"username"}).state("resetpassword",{url:"/resetpassword",templateUrl:"/users/reset/password.html",controller:"passwordCtrl",controllerAs:"password"}).state("reset",{url:"/reset/:token",templateUrl:"/users/reset/newpassword.html",controller:"resetCtrl",controllerAs:"reset"}).state("activate",{url:"/activate/:token",templateUrl:"/users/activation/activate.html",controller:"emailCtrl",controllerAs:"email"}).state("resend",{url:"/resend",templateUrl:"/users/activation/resend.html",controller:"resendCtrl",controllerAs:"resend"}).state("app.profiles",{url:"profiles",views:{"content@":{templateUrl:"isLoggedIn/userProfiles.html",controller:"profileCtrl",controllerAs:"profile",authenticated:!1}}}).state("app.photos",{url:"photos",views:{"content@":{templateUrl:"isLoggedIn/artistPhotos.html",controller:"artistPhotoCtrl",controllerAs:"artistPhoto",authenticated:!1}}}).state("app.artistProfiles",{url:"artist",views:{"content@":{templateUrl:"isLoggedIn/artistProfiles.html",controller:"artistProfileCtrl",controllerAs:"artistProfile",authenticated:!0}}}).state("app.intro",{url:"intro",views:{"content@":{templateUrl:"/company/intro.html",authenticated:!1}}}).state("app.terms",{url:"terms",views:{"content@":{templateUrl:"/company/terms.html",authenticated:!1}}}).state("app.privacy",{url:"privacy",views:{"content@":{templateUrl:"/company/privacy.html",authenticated:!1}}}).state("app.artist",{url:"artist",views:{"content@":{templateUrl:"categories/artist.html",controller:"artistsCtrl",controllerAs:"artists",authenticated:!1},"artist-header@app.artist":{templateUrl:"/menues/subMenu.html",controller:"artistTapCtrl",controllerAs:"artistTap",authenticated:!1}}}).state("app.artist.categories",{url:"/category=:code",views:{"detail@app.artist":{templateUrl:"/partialArtist/artists.html",controller:"artistsCtrl",controllerAs:"artists",authenticated:!1}}}).state("app.artist.show",{url:"/:artist_id",views:{"content@":{templateUrl:"/partialArtist/artist.html",controller:"artistPhotoCtrl",controllerAs:"artistPhoto",authenticated:!1}}}).state("app.gallery",{url:"gallery",views:{"gallery-header@app.gallery":{templateUrl:"/menues/subMenu.html",controller:"galleryTapCtrl",controllerAs:"galleryTap"},"content@":{templateUrl:"categories/gallery.html",controller:"galleryPhotosCtrl",controllerAs:"galleryPhotos",authenticated:!1}}}).state("app.gallery.categories",{url:"/category=:code",views:{"detail@app.gallery":{templateUrl:"/partialGallery/photos.html",controller:"galleryPhotosCtrl",controllerAs:"galleryPhotos",authenticated:!1}}}).state("app.gallery.show",{url:"/category=:photo_type/photo:photo_id",views:{"content@":{templateUrl:"/partialGallery/photo.html",controller:"galleryPhotoCtrl",controllerAs:"galleryphoto"}}}).state("app.gallery.edit",{url:"/edit/:photo_id",views:{"content@":{templateUrl:"/partialGallery/photoEdit.html",controller:"galleryPhotoCtrl",controllerAs:"galleryphoto"}}}).state("app.display",{url:"display",views:{"content@":{templateUrl:"categories/display.html",authenticated:!1},"display-header@app.display":{templateUrl:"/menues/subMenu.html",controller:"displayMenuController",authenticated:!1}}}).state("app.display.categories",{url:"/category=:code",views:{"detail@app.display":{templateUrl:"/partialDisplay/content.html",controller:"displayMenuController",authenticated:!1}}}).state("app.board",{url:"board",views:{"content@":{templateUrl:"categories/board.html",controller:"boardsCtrl",controllerAs:"boards",authenticated:!1},"board-header@app.board":{templateUrl:"/menues/boardMenu.html",controller:"boardTapCtrl",authenticated:!1}}}).state("app.board.categories",{url:"/category=:code",views:{"content@app.board":{templateUrl:"/partialBoard/boards.html",controller:"boardsCtrl",controllerAs:"boards",authenticated:!1}}}).state("app.board.create",{url:"/create",views:{"content@app.board":{templateUrl:"/partialBoard/boardCreate.html",controller:"boardCtrl",controllerAs:"board",authenticated:!0}}}).state("app.board.show",{url:"/:board_id",views:{"content@app.board":{templateUrl:"partialBoard/board.html",controller:"boardCtrl",controllerAs:"board",authenticated:!1}}}).state("app.board.edit",{url:"/edit/:board_id",views:{"content@app.board":{templateUrl:"partialBoard/boardUpdate.html",controller:"boardCtrl",controllerAs:"board",authenticated:!0}}})}]),angular.module("commentControllers",["commentServices"]).controller("commentCtrl",["$scope","$http","$stateParams","$state","$window","Comment",function(e,t,a,r,o,s){var n=this;e.userComment=!1,this.createComment=function(e){t.post("/api/comment",n.response).then(function(e){console.log(e)})},e.getComment=function(){var r=a.photo_id,o=a.board_id,s="",n={photo_id:r,board_id:o},i={params:n,headers:{Accept:"application/json"}};r?(s=r,t.get("/api/comment/"+s,i).then(function(t){e.comments=t.data[0]})):o?(s=o,t.get("/api/comment/"+s,i).then(function(t){e.comments=t.data[0]})):e.comments="시스템이 불안정합니다."},e.addComment=function(e,a){if(a){var s=e.board_id,n=e.photo_id,i=e.comment;t.post("/api/comment",{board_id:s,photo_id:n,comment:i}).then(function(e){r.reload()})}else o.alert("댓글을 입력해주세요.")},e.deleteComment=function(e){var a=e.comment_id;t.delete("/api/comment/"+a).then(function(e){r.reload()})}}]),angular.module("app").controller("ImageCropCtrl",["$scope",function(e){e.myCroppedImage="",e.myImage=void 0,e.crobject={};var t=function(t){var a=t.currentTarget.files[0],r=new FileReader;r.onload=function(t){e.$apply(function(e){e.myImage=t.target.result})},r.readAsDataURL(a)};angular.element(document.querySelector("#fileInput")).on("change",t),this.imageCrop=function(){var t=e.myImage;console.log(t)}}]),angular.module("app").controller("OpinionController",["$scope","$http","$stateParams",function(e,t,a){e.doLikeStatus=!0,e.doLike=function(){e.doLikeStatus=!e.doLikeStatus},e.getOpinion=function(r){var o=a.id;t.get("/api/opinion/"+o).then(function(t){e.opinionInfo=t.data[0][0]})}}]),angular.module("artistServices",[]).factory("Artist",["$http",function(e){return artistFactory={},artistFactory.readArtistTap=function(){return e.get("/api/artistMenu")},artistFactory.readArtists=function(t){return e.get("/api/artistMenu/"+t)},artistFactory.readArtist=function(t){return e.get("/api/artist/"+t)},artistFactory.createAristPhoto=function(t){return e.post("/api/artistProfiles",t)},artistFactory.updateAristProfile=function(t){return e.put("/api/artistProfiles",t)},artistFactory.readArtistProfile=function(t){return e.get("/api/artistProfiles/"+t)},artistFactory.readAristPhoto=function(t){return e.get("/api/artistPhotos/"+t)},artistFactory}]),angular.module("authServices",[]).factory("Auth",["$http","AuthToken",function(e,t){var a={};return a.getUser=function(){if(t.getToken())return e.post("/api/me");$q.reject({message:"User has no token"})},a.login=function(a){return e.post("/api/authenticate",a).then(function(e){return t.setToken(e.data.token),e})},a.isLoggedIn=function(){return!!t.getToken()},a.logout=function(){t.setToken()},a}]).factory("AuthToken",["$window",function(e){var t={};return t.setToken=function(t){t?e.localStorage.setItem("token",t):e.localStorage.removeItem("token",t)},t.getToken=function(){return e.localStorage.getItem("token")},t}]).factory("AuthInterceptors",["AuthToken",function(e){var t={};return t.request=function(t){var a=e.getToken();return a&&(t.headers["x-access-token"]=a),t},t}]),angular.module("boardServices",[]).factory("Board",["$http",function(e){return boardFactory={},boardFactory.readBoardTap=function(){return e.get("/api/boardMenu")},boardFactory.readBoards=function(t){return e.get("/api/boardMenu/"+t)},boardFactory.readBoard=function(t){return e.get("api/board/"+t)},boardFactory}]),angular.module("commentServices",[]).factory("Comment",["$http",function(e){return commentFactory={},commentFactory.createComment=function(t){return e.post("/api/comment",t)},commentFactory}]),angular.module("galleryServices",[]).factory("Gallery",["$http",function(e){return galleryFactory={},galleryFactory.readGalleryTap=function(){return e.get("/api/galleryMenu")},galleryFactory.readPhotos=function(t){return e.get("/api/galleryMenu/"+t)},galleryFactory.readPhotoData=function(t){return e.get("/api/gallery/"+t)},galleryFactory.readMorePhoto=function(t){return e.get("/api/galleryMenu/"+t)},galleryFactory}]),angular.module("userServices",[]).factory("User",["$http",function(e){return userFactory={},userFactory.create=function(t){return e.post("/api/users",t)},userFactory.activeAccount=function(t){return e.put("/api/activate/"+t)},userFactory.checkCredentials=function(t){return e.post("/api/resend",t)},userFactory.resendLink=function(t){return e.put("/api/resend",t)},userFactory.sendUsername=function(t){return e.get("/api/resetusername/"+t)},userFactory.sendPassword=function(t){return e.put("/api/resetpassword",t)},userFactory.resetPassword=function(t){return e.get("/api/resetpassword/"+t)},userFactory.savePassword=function(t){return e.put("/api/savepassword",t)},userFactory.renewSession=function(t){return e.get("/api/renewToken/"+t)},userFactory.resetPermission=function(t){return e.put("/api/users/",t)},userFactory.checkPermission=function(t){return e.get("/api/users/"+t)},userFactory.readProfiles=function(t){return e.get("/api/userProfiles/"+t)},userFactory.updateProfiles=function(t){return e.put("/api/userProfiles",t)},userFactory}]),angular.module("app").directive("fileModel",["$parse",function(e){return{restrict:"A",link:function(t,a,r){var o=e(r.fileModel),s=o.assign;a.bind("change",function(){t.$apply(function(){s(t,a[0].files[0])})})}}}]),angular.module("app").directive("match",function(){return{restrict:"A",controller:["$scope",function(e){e.doConfirm=function(t){e.confirmed=!1,t.forEach(function(t){e.confirm==t?e.confirmed=!0:e.confirmed=!1})}}],link:function(e,t,a){a.$observe("match",function(){e.matches=JSON.parse(a.match),e.doConfirm(e.matches)}),e.$watch("confirm",function(){e.matches=JSON.parse(a.match),e.doConfirm(e.matches)})}}}),angular.module("artistControllers",["userServices","artistServices"]).controller("artistTapCtrl",["$scope","Artist",function(e,t){t.readArtistTap().then(function(t){t.data.success?e.headers=t.data.result:app.errorMsg=t.data.message})}]).controller("artistsCtrl",["$stateParams","Artist",function(e,t){var a=this,r=e.code;a.data={availableOptions:[{sort:"-created",name:"최신순"}],selectedOption:{sort:"-created",name:"최신순"}},t.readArtists(r).then(function(e){e.data.success?a.artistDatas=e.data.result:a.errorMsg=e.data.message})}]).controller("uploadCtrl",["$http","$timeout","$scope","Artist","$state",function(e,t,a,r,o){var s=this;s.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."},{id:"1",name:"붓 글씨"},{id:"2",name:"펜 글씨"},{id:"3",name:"미분류"}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},this.file={},this.mainPhotoChanged=function(e){if(e.length>0&&e[0].name.match(/\.(png|jpeg|jpg)$/)){var a=e[0],r=new FileReader;r.readAsDataURL(a),r.onload=function(e){t(function(){s.mainThumbnail={},s.mainThumbnail.dataUrl=e.target.result})}}else s.mainThumbnail={}},this.readPhoto=function(){s.errorMsg=!1,s.disabled=!0,a.$emit("LOAD");var t=new FormData;t.append("myfile",s.file.upload),e.post("/api/uploadTemp/",t,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){e.data.success?(a.$emit("UNLOAD"),s.disabled=!1,s.successMsg=e.data.message,s.mainImagePath=e.data.photo_path,s.file={}):(a.$emit("UNLOAD"),s.disabled=!1,s.errorMsg=e.data.message,s.file={})})},this.createPhoto=function(e){s.disabled=!1,s.errorMsg=!1,e?void 0===s.uploadData.title||null===s.uploadData.title||""===s.uploadData.title?s.errorMsg="작품의 제목을 입력해주세요.":void 0===s.uploadData.detail||null===s.uploadData.detail||""===s.uploadData.detail?s.errorMsg="작품의 설명을 입력해주세요.":void 0===s.mainImagePath||null===s.mainImagePath||""===s.mainImagePath?s.errorMsg="작품 이미지를 선택해주세요.":"0"===s.data.selectedOption.id?s.errorMsg="작품의 종류를 선택해주세요.":(s.uploadData=e,s.uploadData.user_id=a.main.user.user_id,s.uploadData.photo_type=s.data.selectedOption.id,s.uploadData.photo_path=s.mainImagePath,r.createAristPhoto(s.uploadData).then(function(e){e.data.success?(s.successMsg=e.data.message,s.disabled=!0,t(function(){o.reload()},2e3)):(s.errorMsg=e.data.message,s.successMsg=!1,s.disabled=!1)})):(s.errorMsg="빈칸을 모두 입력해주세요.",s.successMsg=!1)}}]).controller("artistProfileCtrl",["$timeout","Artist","$state","$scope",function(e,t,a,r){var o=this;o.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."},{id:"1",name:"붓 글씨"},{id:"2",name:"펜 글씨"},{id:"3",name:"미분류"}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},this.updateAristProfile=function(s){o.errorMsg=!1,s?void 0===o.artistData.short_info||null===o.artistData.short_info||""===o.artistData.short_info?o.errorMsg="한 줄 소개를 입력해주세요.":void 0===o.artistData.detail_info||null===o.artistData.detail_info||""===o.artistData.detail_info?o.errorMsg="상세 소개를 입력해주세요.":(o.artistData=s,o.artistData.user_id=r.main.user.user_id,o.artistData.user_type=o.data.selectedOption.id,t.updateAristProfile(o.artistData).then(function(t){t.data.success?(o.errorMsg=!1,o.successMsg=t.data.message,o.disabled=!0,e(function(){a.reload()},2e3)):o.errorMsg="올바르지 않은 값이 입력되었습니다."})):o.errorMsg="필수기재사항을 입력해주세요."},this.readAristProfile=function(){var e=r.main.user.user_id;t.readArtistProfile(e).then(function(e){e.data.success?o.artistData=e.data.result:o.errorMsg=e.data.message})}}]).controller("artistPhotoCtrl",["$timeout","Artist","$state","$scope",function(e,t,a,r){var o=this,s=r.main.user.user_id;t.readArtistProfile(s).then(function(e){e.data.success?o.artistData=e.data.result:o.errorMsg=e.data.message}),t.readAristPhoto(s).then(function(e){e.data.success?o.artistPhotos=e.data.result:o.errorMsg=e.data.message})}]),angular.module("boardControllers",["boardServices"]).controller("boardTapCtrl",["Board","$scope",function(e,t){e.readBoardTap().then(function(e){t.headers=e.data})}]).controller("boardsCtrl",["$stateParams","Board",function(e,t){var a=this,r=e.code;a.data={availableOptions:[{sort:"-created",name:"최신순"},{sort:"-view",name:"조회순"},{sort:"-comment_count",name:"댓글순"}],selectedOption:{sort:"-created",name:"최신순"}},t.readBoards(r).then(function(e){a.boardDatas=e.data.result})}]).controller("boardCtrl",["$stateParams","Board","$scope",function(e,t,a){var r=this;a.text="hello world",$(document).ready(function(){$("#summernote").summernote({lang:"ko-KR",height:100,minHeight:null,maxHeight:null,focus:!0,placeholder:"댓글은 1,000자까지 작성할 수 있으며 주제와 무관한 댓글, 악성 댓글은 삭제될 수 있습니다.",toolbar:[["style",["bold","italic","underline","clear"]],["font",["strikethrough","superscript","subscript"]],["fontsize",["fontsize"]],["color",["color"]],["para",["ul","ol","paragraph"]],["height",["height"]]]})});var o=e.board_id;t.readBoard(o).then(function(e){e.data.success&&(r.boardDatas=e.data.result)})}]),angular.module("gallertControllers",["galleryServices"]).controller("galleryTapCtrl",["$scope","Gallery",function(e,t){t.readGalleryTap().then(function(t){t.data.success?e.headers=t.data.result:app.errorMsg=t.data.message})}]).controller("galleryPhotosCtrl",["Gallery","$stateParams",function(e,t){var a=this,r=t.code;a.data={availableOptions:[{sort:"-created",name:"최신순"},{sort:"-view",name:"조회순"},{sort:"-comment_count",name:"댓글순"}],selectedOption:{sort:"-created",name:"최신순"}},e.readPhotos(r).then(function(e){e.data.success?a.photoData=e.data.result:a.errorMsg=e.data.message})}]).controller("galleryPhotoCtrl",["$scope","$stateParams","Gallery",function(e,t,a){var r=this,o=t.photo_id,s=t.photo_type;e.main.user.user_id;a.readPhotoData(o).then(function(e){e.data.success?r.photoData=e.data.result:r.errorMsg=e.data.message}),a.readPhotos(s).then(function(e){e.data.success?r.photosData=e.data.result:r.errorMsg=e.data.message})}]),angular.module("app").controller("HomeCtrl",["$http","$scope",function(e,t){t.getContent=function(){e.get("/api/home").then(function(e){t.photos=e.data})}}]),angular.module("mainControllers",["authServices","userServices"]).controller("mainCtrl",["Auth","$timeout","$location","$state","$rootScope","$scope","$window","$interval","User","AuthToken",function(e,t,a,r,o,s,n,i,l,c){var d=this;d.loadme=!1,s.$on("LOAD",function(){s.loading=!0}),s.$on("UNLOAD",function(){s.loading=!1}),o.$on("$stateChangeStart",function(){u||u(),e.isLoggedIn()?(d.isLoggedIn=!0,e.getUser().then(function(e){"admin"===e.data.permission?(d.permission=!0,d.user=e.data,d.loadme=!0):"artist"===e.data.permission?(d.permission=!0,d.user=e.data,d.loadme=!0):(d.user=e.data,d.loadme=!0)})):(d.user=!1,d.isLoggedIn=!1,d.loadme=!0)});var u=function(){if(e.isLoggedIn()){d.checkSession=!0;var t=i(function(){var e=n.localStorage.getItem("token");if(null===e)i.cancel(t);else{self.parseJwt=function(e){var t=e.split(".")[1],a=t.replace("-","+").replace("_","/");return JSON.parse(n.atob(a))};var a=self.parseJwt(e),r=Math.floor(Date.now()/1e3);a.exp-r<=5&&(p("expired"),i.cancel(t))}},2e3)}};u(),d.renewSession=function(){d.choiceMade=!0,l.renewSession(d.user.username).then(function(e){e.data.success?(c.setToken(e.data.token),u(),m("expired")):(d.ModalBody=e.data.message,m("expired"))})},d.endSession=function(){d.choiceMade=!0,m("expired"),t(function(){p("logout")},500)};var p=function(a){d.choiceMade=!1,d.modalHeader=void 0,d.modalBody=void 0,d.hideButton=!1,"expired"===a?(d.modalHeader="Timeout Warning",d.modalBody="Your session will expired in 5 minutes. Would you like to renew your session?",$("#myModal").modal({backdrop:"static"})):"logout"===a?(d.hideButton=!0,d.modalHeader="로그아웃",$("#myModal").modal({backdrop:"static"}),t(function(){e.logout(),d.isLoggedIn=!1,m("logout"),r.reload()},2e3)):"login"===a?$("#login").modal({backdrop:"static"}):"upload"===a&&$("#upload").modal({backdrop:"static"}),t(function(){d.choiceMade||m("logout")},4e3)},m=function(e){"expired"===e?$("#myModal").modal("hide"):"logout"===e?$("#myModal").modal("hide"):"login"===e?$("#login").modal("hide"):"upload"===e&&$("#upload").modal("hide")};this.doLogin=function(a,o){d.errorMsg=!1,d.expired=!1,d.disabled=!0,o?e.login(d.loginData).then(function(e){e.data.success?(d.disabled=!0,d.successMsg=e.data.message,t(function(){m("login"),d.loginData=null,d.isLoggedIn=!0,u(),r.reload()},2e3)):e.data.expired?(d.expired=!0,d.disabled=!0,d.errorMsg=e.data.message):(d.disabled=!1,d.errorMsg=e.data.message)}):(d.disabled=!1,d.loading=!1,d.errorMsg="올바른 정보를 입력해주세요.")},this.upload=function(){d.choiceMade=!0,"artist"===d.user.permission?r.go("app.artistProfiles"):l.checkPermission(d.user.username).then(function(e){e.data.success?(r.go("app.artistProfiles"),d.permission=!0):p("upload")})},this.doPermission=function(){d.choiceMade=!0,d.uploadDisabled=!0,d.uploaderrorMsg=!1,l.resetPermission(d.user).then(function(e){e.data.success?(d.uploadDisabled=!0,d.uploadSuccessMsg=e.data.message,t(function(){m("upload"),r.go("app.artistProfiles")},2e3)):(d.uploadDisabled=!1,d.uploaderrorMsg="잘못된 정보가 입력되었습니다.")})},d.login=function(){d.successMsg=!1,d.errorMsg=!1,d.disabled=!1,p("login")},d.logout=function(){p("logout")},d.resend=function(){m("login"),t(function(){r.go("resend"),d.expired=!1},500)},d.resetusername=function(){m("login"),t(function(){r.go("resetusername")},500)},d.resetpassword=function(){m("login"),t(function(){r.go("resetpassword")},500)}}]),angular.module("app").controller("BoardMenuController",["$scope","$http","$stateParams",function(e,t,a){e.data={availableOptions:[{sort:"-created",name:"최신순"},{sort:"-view",name:"조회순"},{sort:"-comment_count",name:"댓글순"}],selectedOption:{sort:"-created",name:"최신순"}},t.get("/api/boardMenu").then(function(t){e.headers=t.data}),e.getHeaderContent=function(){var r=a.code;t.get("/api/boardMenu/"+r).then(function(t){e.boardes=t.data})}}]),angular.module("app").controller("displayMenuController",["$scope","$http","$stateParams",function(e,t,a){e.data={availableOptions:[{sort:"-created",name:"최신순"}],selectedOption:{sort:"-created",name:"최신순"}},t.get("/api/displayMenu").then(function(t){e.headers=t.data}),e.getHeaderContent=function(){var r=a.code;t.get("/api/displayMenu/"+r).then(function(t){e.displays=t.data})}}]),angular.module("app").controller("MainMenuController",["$http","$scope",function(e,t){e.get("/api/header").then(function(e){t.headers=e.data})}]),angular.module("emailControllers",["userServices"]).controller("emailCtrl",["$stateParams","User","$timeout","$state",function(e,t,a,r){var o=this;t.activeAccount(e.token).then(function(e){o.successMsg=!1,o.errorMsg=!1,e.data.success?(o.disabled=!0,o.successMsg=e.data.message+"...메인 페이지로 이동합니다.",a(function(){r.go("app")},2e3)):(o.errorMsg=e.data.message+"...메인 페이지로 이동합니다.",a(function(){r.go("app")},2e3))})}]).controller("resendCtrl",["User","$timeout","$state",function(e,t,a){app=this,this.checkCredentials=function(r){app.successMsg=!1,app.errorMsg=!1,app.disabled=!0,e.checkCredentials(this.loginData).then(function(r){r.data.success?e.resendLink(app.loginData).then(function(e){e.data.success&&(app.disabled=!0,app.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3))}):(app.disabled=!1,app.errorMsg=r.data.message)})}}]).controller("usernameCtrl",["User","$timeout","$state",function(e,t,a){var r=this;this.sendUsername=function(o,s){r.errorMsg=!1,r.disabled=!0,s?e.sendUsername(r.userData.email).then(function(e){e.data.success?(r.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3)):(r.disabled=!1,r.errorMsg=e.data.message)}):(r.disabled=!1,r.errorMsg="올바른 이메일 주소가 아닙니다.")}}]).controller("passwordCtrl",["User","$timeout","$state",function(e,t,a){var r=this;r.sendPassword=function(o,s){r.errorMsg=!1,r.disabled=!0,s?e.sendPassword(r.resetData).then(function(e){e.data.success?(r.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3)):(r.disabled=!1,r.errorMsg=e.data.message)}):(r.disabled=!1,r.errorMsg="올바른 아이디가 아닙니다.")}}]).controller("resetCtrl",["$stateParams","$scope","User","$timeout","$state",function(e,t,a,r,o){var s=this;s.hide=!0,a.resetPassword(e.token).then(function(e){e.data.success?(s.hide=!1,t.alert="alert alert-success",s.successMsg="새로운 비밀번호를 입력해주세요.",t.username=e.data.user[0].username):(t.alert="alert alert-danger",s.errorMsg=e.data.message)}),s.savePassword=function(e,n,i){s.errorMsg=!1,s.successMsg=!1,s.disabled=!0,s.loading=!0,n&&i?(s.regData.username=t.username,a.savePassword(s.regData).then(function(e){s.loading=!1,e.data.success?(t.alert="alert alert-success",s.successMsg=e.data.message+"...메인 화면으로 이동합니다.",r(function(){o.go("app")},2e3)):(t.alert="alert alert-danger",s.disabled=!1,s.errorMsg=e.data.message)})):(t.alert="alert alert-danger",s.loading=!1,s.disabled=!1,s.errorMsg="올바른 정보를 입력해주세요.")}}]),angular.module("userControllers",["userServices"]).controller("regCtrl",["$http","$location","$timeout","User","Auth","$state",function(e,t,a,r,o,s){var n=this;this.regStep1=function(e){n.errorMsg=!1,e?e.terms&&e.privacy?(n.successMsg="약관에 성공적으로 동의하셨습니다.",n.disabled=!0,s.go("registerStep2")):(n.errorMsg="약관에 동의해야만 회원가입을 진행할 수 있습니다.",n.disabled=!1):n.errorMsg="약관에 동의해야만 회원가입을 진행할 수 있습니다."},this.regStep2=function(e,t,o){n.errorMsg=!1,n.disabled=!0,t&&o?r.create(n.regData).then(function(e){e.data.success?(n.disabled=!0,n.successMsg=e.data.message,a(function(){$("#register").modal("hide"),n.regData=null,n.isLoggedIn=!1,s.go("app")},3e3)):(n.disabled=!1,n.errorMsg=e.data.message)}):(n.disabled=!1,n.loading=!1,n.errorMsg="올바른 정보를 입력해주세요.")}}]).controller("profileCtrl",["$scope","User","$timeout","$state","$http",function(e,t,a,r,o){var s=this,n=e.main.user.username;t.readProfiles(n).then(function(e){e.data.success?s.readData=e.data.profiles:s.errorMsg=e.data.message}),this.file={},this.photoChanged=function(e){if(e.length>0&&e[0].name.match(/\.(png|jpeg|jpg)$/)){var t=e[0],r=new FileReader;r.readAsDataURL(t),r.onload=function(e){a(function(){s.thumbnail={},s.thumbnail.dataUrl=e.target.result,s.uploading=!1,s.message=!1})}}else s.thumbnail={},s.message=!1},this.updateProfileImage=function(){s.errorMsg=!1,s.disabled=!0,e.$emit("LOAD");var t=new FormData,n=e.main.user.user_id;t.append("myfile",s.file.upload),o.put("/api/uploadTemp/"+n,t,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(t){t.data.success?(e.$emit("UNLOAD"),s.successMsg=t.data.message,s.file={},a(function(){r.reload()},1e3)):(e.$emit("UNLOAD"),s.disabled=!1,s.errorMsg=t.data.message,s.file={})})},this.updateProfile=function(){s.errorMsg=!1,s.disabled=!0,s.readData.user_id=e.main.user.user_id,t.updateProfiles(s.readData).then(function(e){e.data.success?(s.successMsg=e.data.message,a(function(){r.reload()},2e3)):(s.errorMsg=e.data.message,s.disabled=!1)})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

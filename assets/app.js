angular.module("app",["ui.router","ui.bootstrap","userControllers","mainControllers","emailControllers","artistControllers","gallertControllers","commentControllers","boardControllers","uiCropper"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptors")}]);var app=angular.module("app");app.config(["$stateProvider","$urlRouterProvider","$locationProvider",function(e,t,a){t.otherwise("/"),e.state("app",{url:"/",views:{header:{templateUrl:"/menues/mainMenu.html",controller:"MainMenuController"},content:{templateUrl:"/main/home.html"},footer:{templateUrl:"/company/footer.html"}}}).state("registerStep1",{url:"/register/step1",controller:"regCtrl",controllerAs:"register",templateUrl:"/isLoggedOut/registerStep1.html",authenticated:!1}).state("registerStep2",{url:"/register/step2",controller:"regCtrl",controllerAs:"register",templateUrl:"/isLoggedOut/registerStep2.html",authenticated:!1}).state("resetusername",{url:"/resetusername",templateUrl:"/users/reset/username.html",controller:"usernameCtrl",controllerAs:"username"}).state("resetpassword",{url:"/resetpassword",templateUrl:"/users/reset/password.html",controller:"passwordCtrl",controllerAs:"password"}).state("reset",{url:"/reset/:token",templateUrl:"/users/reset/newpassword.html",controller:"resetCtrl",controllerAs:"reset"}).state("activate",{url:"/activate/:token",templateUrl:"/users/activation/activate.html",controller:"emailCtrl",controllerAs:"email"}).state("resend",{url:"/resend",templateUrl:"/users/activation/resend.html",controller:"resendCtrl",controllerAs:"resend"}).state("app.profiles",{url:"profiles",views:{"content@":{templateUrl:"isLoggedIn/userProfiles.html",controller:"profileCtrl",controllerAs:"profile",authenticated:!1}}}).state("app.photos",{url:"photos",views:{"content@":{templateUrl:"isLoggedIn/artistPhotos.html",controller:"anArtistPhotoCtrl",controllerAs:"anArtistPhoto",authenticated:!1}}}).state("app.artistProfiles",{url:"artist",views:{"content@":{templateUrl:"isLoggedIn/artistProfiles.html",controller:"artistProfileCtrl",controllerAs:"artistProfile",authenticated:!0}}}).state("app.intro",{url:"intro",views:{"content@":{templateUrl:"/company/intro.html",authenticated:!1}}}).state("app.terms",{url:"terms",views:{"content@":{templateUrl:"/company/terms.html",authenticated:!1}}}).state("app.privacy",{url:"privacy",views:{"content@":{templateUrl:"/company/privacy.html",authenticated:!1}}}).state("app.artist",{url:"artist/category=:code",views:{"content@":{templateUrl:"/main/form.html"},"menu@app.artist":{templateUrl:"/partialArtist/artistTap.html",controller:"artistTapCtrl",controllerAs:"artistTap",authenticated:!1},"contents@app.artist":{templateUrl:"/partialArtist/artists.html",controller:"artistsCtrl",controllerAs:"artists",authenticated:!1}}}).state("app.gallery",{url:"gallery/category=:code",views:{"content@":{templateUrl:"/main/form.html"},"menu@app.gallery":{templateUrl:"/partialGallery/galleryTap.html",controller:"galleryTapCtrl",controllerAs:"galleryTap"},"contents@app.gallery":{templateUrl:"/partialGallery/photos.html",controller:"galleryPhotosCtrl",controllerAs:"galleryPhotos",authenticated:!1}}}).state("app.board",{url:"board/category=:code",views:{"content@":{templateUrl:"/main/form.html"},"menu@app.board":{templateUrl:"/partialBoard/boardTap.html",controller:"boardTapCtrl",authenticated:!1},"contents@app.board":{templateUrl:"/partialBoard/boards.html",controller:"boardsCtrl",controllerAs:"boards",authenticated:!1}}}).state("app.display",{url:"display/category=:code",views:{"content@":{templateUrl:"/main/form.html"},"menu@app.display":{templateUrl:"/partialDisplay/displayTap.html",controller:"displayMenuController",authenticated:!1},"contents@app.display":{templateUrl:"/partialDisplay/content.html",controller:"displayMenuController",authenticated:!1}}}).state("app.artist.show",{url:"/artist:artist_id",views:{"contents@app.artist":{templateUrl:"/partialArtist/artist.html",controller:"artistPhotoCtrl",controllerAs:"artistPhoto",authenticated:!1}}}).state("app.gallery.show",{url:"/photo_type=:photo_type/photo:photo_id",views:{"contents@app.gallery":{templateUrl:"/partialGallery/photo.html",controller:"galleryPhotoCtrl",controllerAs:"galleryphoto"}}}).state("app.board.show",{url:"/board:board_id",views:{"contents@app.board":{templateUrl:"partialBoard/board.html",controller:"boardCtrl",controllerAs:"board"}}}).state("app.board.create",{url:"/create",views:{"contents@app.board":{templateUrl:"/partialBoard/boardCreate.html",controller:"boardCtrl",controllerAs:"board",authenticated:!0}}}).state("app.board.edit",{url:"/edit/:board_id",views:{"contents@app.board":{templateUrl:"partialBoard/boardUpdate.html",controller:"boardCtrl",controllerAs:"board",authenticated:!0}}}).state("app.gallery.edit",{url:"/edit/:photo_id",views:{"content@":{templateUrl:"/partialGallery/photoEdit.html",controller:"galleryPhotoCtrl",controllerAs:"galleryphoto"}}})}]),angular.module("commentControllers",["commentServices"]).controller("commentCtrl",["$scope","$http","$stateParams","$state","$window","Comment",function(e,t,a,r,o,s){var n=a.photo_id;this.createComment=function(t){if(e.main.user.user_id)if(t){var a={comment:t,user_id:e.main.user.user_id,photo_id:n};s.createComment(a).then(function(e){e.data.success&&r.reload()})}else o.alert("댓글을 입력해주세요.");else e.main.login()},e.deleteComment=function(e){var a=e.comment_id;t.delete("/api/comment/"+a).then(function(e){r.reload()})}}]),angular.module("app").controller("ImageCropCtrl",["$scope",function(e){e.myCroppedImage="",e.myImage=void 0,e.crobject={};var t=function(t){var a=t.currentTarget.files[0],r=new FileReader;r.onload=function(t){e.$apply(function(e){e.myImage=t.target.result})},r.readAsDataURL(a)};angular.element(document.querySelector("#fileInput")).on("change",t),this.imageCrop=function(){var t=e.myImage;console.log(t)}}]),angular.module("app").controller("OpinionController",["$scope","$http","$stateParams",function(e,t,a){e.doLikeStatus=!0,e.doLike=function(){e.doLikeStatus=!e.doLikeStatus},e.getOpinion=function(r){var o=a.id;t.get("/api/opinion/"+o).then(function(t){e.opinionInfo=t.data[0][0]})}}]),angular.module("app").directive("fileModel",["$parse",function(e){return{restrict:"A",link:function(t,a,r){var o=e(r.fileModel),s=o.assign;a.bind("change",function(){t.$apply(function(){s(t,a[0].files[0])})})}}}]),angular.module("app").directive("match",function(){return{restrict:"A",controller:["$scope",function(e){e.doConfirm=function(t){e.confirmed=!1,t.forEach(function(t){e.confirm==t?e.confirmed=!0:e.confirmed=!1})}}],link:function(e,t,a){a.$observe("match",function(){e.matches=JSON.parse(a.match),e.doConfirm(e.matches)}),e.$watch("confirm",function(){e.matches=JSON.parse(a.match),e.doConfirm(e.matches)})}}}),angular.module("artistServices",[]).factory("Artist",["$http",function(e){return artistFactory={},artistFactory.readArtistTap=function(){return e.get("/api/artistMenu")},artistFactory.readArtists=function(t){return e.get("/api/artistMenu/"+t)},artistFactory.readArtist=function(t){return e.get("/api/artist/"+t)},artistFactory.createAristPhoto=function(t){return e.post("/api/artistProfiles",t)},artistFactory.updateAristProfile=function(t){return e.put("/api/artistProfiles",t)},artistFactory.readArtistProfile=function(t){return e.get("/api/artistProfiles/"+t)},artistFactory.readAristPhoto=function(t){return e.get("/api/artistPhotos/"+t)},artistFactory}]),angular.module("authServices",[]).factory("Auth",["$http","AuthToken",function(e,t){var a={};return a.getUser=function(){if(t.getToken())return e.post("/api/me");$q.reject({message:"User has no token"})},a.login=function(a){return e.post("/api/authenticate",a).then(function(e){return t.setToken(e.data.token),e})},a.isLoggedIn=function(){return!!t.getToken()},a.logout=function(){t.setToken()},a}]).factory("AuthToken",["$window",function(e){var t={};return t.setToken=function(t){t?e.localStorage.setItem("token",t):e.localStorage.removeItem("token",t)},t.getToken=function(){return e.localStorage.getItem("token")},t}]).factory("AuthInterceptors",["AuthToken",function(e){var t={};return t.request=function(t){var a=e.getToken();return a&&(t.headers["x-access-token"]=a),t},t}]),angular.module("boardServices",[]).factory("Board",["$http",function(e){return boardFactory={},boardFactory.readBoardTap=function(){return e.get("/api/boardMenu")},boardFactory.readBoards=function(t){return e.get("/api/boardMenu/"+t)},boardFactory.readBoard=function(t){return e.get("api/board/"+t)},boardFactory.createBoard=function(t){return e.post("/api/boardMenu",t)},boardFactory}]),angular.module("commentServices",[]).factory("Comment",["$http",function(e){return commentFactory={},commentFactory.createComment=function(t){return e.post("/api/comment",t)},commentFactory.readComment=function(t){return e.get("/api/comment/"+t)},commentFactory.readBoardComment=function(t){return e.get("/api/commentBoard/"+t)},commentFactory}]),angular.module("galleryServices",[]).factory("Gallery",["$http",function(e){return galleryFactory={},galleryFactory.readGalleryTap=function(){return e.get("/api/galleryMenu")},galleryFactory.readPhotos=function(t){return e.get("/api/galleryMenu/"+t)},galleryFactory.readPhotoData=function(t){return e.get("/api/gallery/"+t)},galleryFactory.readMorePhoto=function(t){return e.get("/api/galleryMenu/"+t)},galleryFactory}]),angular.module("userServices",[]).factory("User",["$http",function(e){return userFactory={},userFactory.create=function(t){return e.post("/api/users",t)},userFactory.activeAccount=function(t){return e.put("/api/activate/"+t)},userFactory.checkCredentials=function(t){return e.post("/api/resend",t)},userFactory.resendLink=function(t){return e.put("/api/resend",t)},userFactory.sendUsername=function(t){return e.get("/api/resetusername/"+t)},userFactory.sendPassword=function(t){return e.put("/api/resetpassword",t)},userFactory.resetPassword=function(t){return e.get("/api/resetpassword/"+t)},userFactory.savePassword=function(t){return e.put("/api/savepassword",t)},userFactory.renewSession=function(t){return e.get("/api/renewToken/"+t)},userFactory.resetPermission=function(t){return e.put("/api/users/",t)},userFactory.checkPermission=function(t){return e.get("/api/users/"+t)},userFactory.readProfiles=function(t){return e.get("/api/userProfiles/"+t)},userFactory.updateProfiles=function(t){return e.put("/api/userProfiles",t)},userFactory}]),angular.module("artistControllers",["userServices","artistServices"]).controller("artistTapCtrl",["$scope","Artist",function(e,t){t.readArtistTap().then(function(t){t.data.success?e.headers=t.data.result:app.errorMsg=t.data.message})}]).controller("artistsCtrl",["$stateParams","Artist",function(e,t){var a=this,r=e.code;a.data={availableOptions:[{sort:"-created",name:"최신순"}],selectedOption:{sort:"-created",name:"최신순"}},t.readArtists(r).then(function(e){e.data.success?a.artistDatas=e.data.result:a.errorMsg=e.data.message})}]).controller("uploadCtrl",["$http","$timeout","$scope","Artist","$state",function(e,t,a,r,o){var s=this;s.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."},{id:"1",name:"붓 글씨"},{id:"2",name:"펜 글씨"},{id:"3",name:"미분류"}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},this.file={},this.mainPhotoChanged=function(e){if(e.length>0&&e[0].name.match(/\.(png|jpeg|jpg)$/)){var a=e[0],r=new FileReader;r.readAsDataURL(a),r.onload=function(e){t(function(){s.mainThumbnail={},s.mainThumbnail.dataUrl=e.target.result})}}else s.mainThumbnail={}},this.readPhoto=function(){s.errorMsg=!1,s.disabled=!0,a.$emit("LOAD");var t=new FormData;t.append("myfile",s.file.upload),e.post("/api/uploadTemp/",t,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(e){e.data.success?(a.$emit("UNLOAD"),s.disabled=!1,s.successMsg=e.data.message,s.mainImagePath=e.data.photo_path,s.file={}):(a.$emit("UNLOAD"),s.disabled=!1,s.errorMsg=e.data.message,s.file={})})},this.createPhoto=function(e){s.disabled=!1,s.errorMsg=!1,e?void 0===s.uploadData.title||null===s.uploadData.title||""===s.uploadData.title?s.errorMsg="작품의 제목을 입력해주세요.":void 0===s.uploadData.detail||null===s.uploadData.detail||""===s.uploadData.detail?s.errorMsg="작품의 설명을 입력해주세요.":void 0===s.mainImagePath||null===s.mainImagePath||""===s.mainImagePath?s.errorMsg="작품 이미지를 선택해주세요.":"0"===s.data.selectedOption.id?s.errorMsg="작품의 종류를 선택해주세요.":(s.uploadData=e,s.uploadData.user_id=a.main.user.user_id,s.uploadData.photo_type=s.data.selectedOption.id,s.uploadData.photo_path=s.mainImagePath,r.createAristPhoto(s.uploadData).then(function(e){e.data.success?(s.successMsg=e.data.message,s.disabled=!0,t(function(){o.reload()},2e3)):(s.errorMsg=e.data.message,s.successMsg=!1,s.disabled=!1)})):(s.errorMsg="빈칸을 모두 입력해주세요.",s.successMsg=!1)}}]).controller("artistProfileCtrl",["$timeout","Artist","$state","$scope",function(e,t,a,r){var o=this,s=r.main.user.user_id;o.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."},{id:"1",name:"붓 글씨"},{id:"2",name:"펜 글씨"},{id:"3",name:"미분류"}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},t.readArtistProfile(s).then(function(e){e.data.success?o.artistData=e.data.result:o.errorMsg=e.data.message}),this.updateAristProfile=function(s){console.log("작동 중"),o.errorMsg=!1,s?void 0===o.artistData.short_info||null===o.artistData.short_info||""===o.artistData.short_info?o.errorMsg="한 줄 소개를 입력해주세요.":void 0===o.artistData.detail_info||null===o.artistData.detail_info||""===o.artistData.detail_info?o.errorMsg="상세 소개를 입력해주세요.":(o.artistData=s,o.artistData.user_id=r.main.user.user_id,t.updateAristProfile(o.artistData).then(function(t){t.data.success?(o.errorMsg=!1,o.successMsg=t.data.message,o.disabled=!0,e(function(){a.reload()},2e3)):o.errorMsg="올바르지 않은 값이 입력되었습니다."})):o.errorMsg="필수기재사항을 입력해주세요."}}]).controller("anArtistPhotoCtrl",["Artist","$stateParams","$scope",function(e,t,a){var r=this,o=a.main.user.user_id;e.readArtistProfile(o).then(function(e){e.data.success?r.artistData=e.data.result:r.errorMsg=e.data.message}),e.readAristPhoto(o).then(function(e){e.data.success?r.artistPhotos=e.data.result:r.errorMsg=e.data.message})}]).controller("artistPhotoCtrl",["Artist","$stateParams",function(e,t){var a=this,r=t.artist_id;e.readArtistProfile(r).then(function(e){e.data.success?a.artistData=e.data.result:a.errorMsg=e.data.message}),e.readAristPhoto(r).then(function(e){e.data.success?a.artistPhotos=e.data.result:a.errorMsg=e.data.message})}]),angular.module("boardControllers",["boardServices"]).filter("to_trusted",["$sce",function(e){return function(t){return e.trustAsHtml(t)}}]).controller("boardTapCtrl",["Board","$scope",function(e,t){e.readBoardTap().then(function(e){t.headers=e.data})}]).controller("boardsCtrl",["$stateParams","Board","$scope","$state",function(e,t,a,r){var o=this,s=e.code;o.data={availableOptions:[{sort:"-created",name:"최신순"},{sort:"-view",name:"조회순"},{sort:"-comment_count",name:"댓글순"}],selectedOption:{sort:"-created",name:"최신순"}},t.readBoards(s).then(function(e){o.boardDatas=e.data.result}),this.createBoard=function(e){a.main.user.user_id?r.go("app.board.create"):a.main.login()}}]).controller("boardCtrl",["$stateParams","Board","$scope","$http","$state","$timeout","Comment","$window",function(e,t,a,r,o,s,n,i){var l=this,d=e.board_id;l.data={availableOptions:[{id:"0",name:"카테고리를 선택해주세요."},{id:"1",name:"공지사항"},{id:"2",name:"잡학사전"},{id:"3",name:"질문사항"}],selectedOption:{id:"0",name:"카테고리를 선택해주세요."}},n.readBoardComment(d).then(function(e){e.data.success?l.commentData=e.data.result:l.errorMsg=e.data.message}),this.createComment=function(e){if(a.main.user.user_id)if(e){var t={comment:e,user_id:a.main.user.user_id,board_id:d};n.createComment(t).then(function(e){e.data.success&&o.reload()})}else i.alert("댓글을 입력해주세요.");else a.main.login()},$(document).ready(function(){$("#summernote").summernote({lang:"ko-KR",height:100,minHeight:null,maxHeight:null,focus:!0,placeholder:"댓글은 1,000자까지 작성할 수 있으며 주제와 무관한 댓글, 악성 댓글은 삭제될 수 있습니다.",toolbar:[["style",["bold","italic","underline","clear"]],["font",["strikethrough","superscript","subscript"]],["fontsize",["fontsize"]],["color",["color"]],["para",["ul","ol","paragraph"]],["height",["height"]]]})}),this.createBoard=function(e){if(l.disabled=!0,l.errorMsg=!1,"0"===l.data.selectedOption.id)l.errorMsg="게시글의 종류를 선택해주세요",l.disabled=!1;else if(void 0===e||null===e||""===e)l.errorMsg="제목을 입력해주세요.",l.disabled=!1;else if("<p><br></p>"===$("#summernote").summernote("code")||null===$("#summernote").summernote("code")||void 0===$("#summernote").summernote("code")||""===$("#summernote").summernote("code"))l.errorMsg="내용을 입력해주세요.",l.disabled=!1;else{var r=$("#summernote").summernote("code"),n=l.data.selectedOption.id,i=e.title,d={title:i,content:r,board_type:n,user_id:a.main.user.user_id};t.createBoard(d).then(function(e){e.data.success?(l.successMsg=e.data.message,s(function(){o.go("app.board")},500)):(l.disabled=!1,l.errorMsg=e.data.message)})}},t.readBoard(d).then(function(e){e.data.success?(l.boardDatas=e.data.result,l.htmlcontent=e.data.result.content):l.errorMsg=e.data.message})}]),angular.module("gallertControllers",["galleryServices"]).controller("galleryTapCtrl",["$scope","Gallery",function(e,t){t.readGalleryTap().then(function(t){t.data.success?e.headers=t.data.result:app.errorMsg=t.data.message})}]).controller("galleryPhotosCtrl",["Gallery","$stateParams",function(e,t){var a=this,r=t.code;a.data={availableOptions:[{sort:"-created",name:"최신순"},{sort:"-view",name:"조회순"},{sort:"-comment_count",name:"댓글순"}],selectedOption:{sort:"-created",name:"최신순"}},e.readPhotos(r).then(function(e){e.data.success?a.photoData=e.data.result:a.errorMsg=e.data.message})}]).controller("galleryPhotoCtrl",["$stateParams","Gallery","Comment","$scope","$window","$state",function(e,t,a,r,o,s){var n=this,i=e.photo_id,l=e.photo_type;r.main.user.user_id;t.readPhotoData(i).then(function(e){e.data.success?n.photoData=e.data.result:n.errorMsg=e.data.message}),t.readPhotos(l).then(function(e){e.data.success?n.photosData=e.data.result:n.errorMsg=e.data.message}),a.readComment(i).then(function(e){e.data.success?(n.commentData=e.data.result,console.log(n.commentData)):n.errorMsg=e.data.message}),this.createComment=function(e){if(r.main.user.user_id)if(e){var t={comment:e,user_id:r.main.user.user_id,photo_id:i};a.createComment(t).then(function(e){e.data.success&&s.reload()})}else o.alert("댓글을 입력해주세요.");else r.main.login()}}]),angular.module("app").controller("HomeCtrl",["$http","$scope",function(e,t){t.getContent=function(){e.get("/api/home").then(function(e){t.photos=e.data})}}]),angular.module("mainControllers",["authServices","userServices"]).controller("mainCtrl",["Auth","$timeout","$location","$state","$rootScope","$scope","$window","$interval","User","AuthToken",function(e,t,a,r,o,s,n,i,l,d){var c=this;c.loadme=!1,s.$on("LOAD",function(){s.loading=!0}),s.$on("UNLOAD",function(){s.loading=!1}),o.$on("$stateChangeStart",function(){u||u(),e.isLoggedIn()?(c.isLoggedIn=!0,e.getUser().then(function(e){"admin"===e.data.permission?(c.permission=!0,c.user=e.data,c.loadme=!0):"artist"===e.data.permission?(c.permission=!0,c.user=e.data,c.loadme=!0):(c.user=e.data,c.loadme=!0)})):(c.user=!1,c.isLoggedIn=!1,c.loadme=!0)});var u=function(){if(e.isLoggedIn()){c.checkSession=!0;var t=i(function(){var e=n.localStorage.getItem("token");if(null===e)i.cancel(t);else{self.parseJwt=function(e){var t=e.split(".")[1],a=t.replace("-","+").replace("_","/");return JSON.parse(n.atob(a))};var a=self.parseJwt(e),r=Math.floor(Date.now()/1e3);a.exp-r<=5&&(p("expired"),i.cancel(t))}},2e3)}};u(),c.renewSession=function(){c.choiceMade=!0,l.renewSession(c.user.username).then(function(e){e.data.success?(d.setToken(e.data.token),u(),m("expired")):(c.ModalBody=e.data.message,m("expired"))})},c.endSession=function(){c.choiceMade=!0,m("expired"),t(function(){p("logout")},500)};var p=function(a){c.choiceMade=!1,c.modalHeader=void 0,c.modalBody=void 0,c.hideButton=!1,"expired"===a?(c.modalHeader="Timeout Warning",c.modalBody="Your session will expired in 5 minutes. Would you like to renew your session?",$("#myModal").modal({backdrop:"static"})):"logout"===a?(c.hideButton=!0,c.modalHeader="로그아웃",$("#myModal").modal({backdrop:"static"}),t(function(){e.logout(),c.isLoggedIn=!1,m("logout"),r.reload()},2e3)):"login"===a?$("#login").modal({backdrop:"static"}):"upload"===a&&$("#upload").modal({backdrop:"static"}),t(function(){c.choiceMade||m("logout")},4e3)},m=function(e){"expired"===e?$("#myModal").modal("hide"):"logout"===e?$("#myModal").modal("hide"):"login"===e?$("#login").modal("hide"):"upload"===e&&$("#upload").modal("hide")};this.doLogin=function(a,o){c.errorMsg=!1,c.expired=!1,c.disabled=!0,o?e.login(c.loginData).then(function(e){e.data.success?(c.disabled=!0,c.successMsg=e.data.message,t(function(){m("login"),c.loginData=null,c.isLoggedIn=!0,u(),r.reload()},2e3)):e.data.expired?(c.expired=!0,c.disabled=!0,c.errorMsg=e.data.message):(c.disabled=!1,c.errorMsg=e.data.message)}):(c.disabled=!1,c.loading=!1,c.errorMsg="올바른 정보를 입력해주세요.")},this.upload=function(){c.choiceMade=!0,"artist"===c.user.permission?r.go("app.artistProfiles"):l.checkPermission(c.user.username).then(function(e){e.data.success?(r.go("app.artistProfiles"),c.permission=!0):p("upload")})},this.doPermission=function(){c.choiceMade=!0,c.uploadDisabled=!0,c.uploaderrorMsg=!1,l.resetPermission(c.user).then(function(e){e.data.success?(c.uploadDisabled=!0,c.uploadSuccessMsg=e.data.message,t(function(){m("upload"),r.go("app.artistProfiles")},2e3)):(c.uploadDisabled=!1,c.uploaderrorMsg="잘못된 정보가 입력되었습니다.")})},c.login=function(){c.successMsg=!1,c.errorMsg=!1,c.disabled=!1,p("login")},c.logout=function(){p("logout")},c.resend=function(){m("login"),t(function(){r.go("resend"),c.expired=!1},500)},c.resetusername=function(){m("login"),t(function(){r.go("resetusername")},500)},c.resetpassword=function(){m("login"),t(function(){r.go("resetpassword")},500)}}]),angular.module("app").controller("BoardMenuController",["$scope","$http","$stateParams",function(e,t,a){e.data={availableOptions:[{sort:"-created",name:"최신순"},{sort:"-view",name:"조회순"},{sort:"-comment_count",name:"댓글순"}],selectedOption:{sort:"-created",name:"최신순"}},t.get("/api/boardMenu").then(function(t){e.headers=t.data}),e.getHeaderContent=function(){var r=a.code;t.get("/api/boardMenu/"+r).then(function(t){e.boardes=t.data})}}]),angular.module("app").controller("displayMenuController",["$scope","$http","$stateParams",function(e,t,a){e.data={availableOptions:[{sort:"-created",name:"최신순"}],selectedOption:{sort:"-created",name:"최신순"}},t.get("/api/displayMenu").then(function(t){e.headers=t.data}),e.getHeaderContent=function(){var r=a.code;t.get("/api/displayMenu/"+r).then(function(t){e.displays=t.data})}}]),angular.module("app").controller("MainMenuController",["$http","$scope",function(e,t){e.get("/api/header").then(function(e){t.headers=e.data})}]),angular.module("emailControllers",["userServices"]).controller("emailCtrl",["$stateParams","User","$timeout","$state",function(e,t,a,r){var o=this;t.activeAccount(e.token).then(function(e){o.successMsg=!1,o.errorMsg=!1,e.data.success?(o.disabled=!0,o.successMsg=e.data.message+"...메인 페이지로 이동합니다.",a(function(){r.go("app")},2e3)):(o.errorMsg=e.data.message+"...메인 페이지로 이동합니다.",a(function(){r.go("app")},2e3))})}]).controller("resendCtrl",["User","$timeout","$state",function(e,t,a){app=this,this.checkCredentials=function(r){app.successMsg=!1,app.errorMsg=!1,app.disabled=!0,e.checkCredentials(this.loginData).then(function(r){r.data.success?e.resendLink(app.loginData).then(function(e){e.data.success&&(app.disabled=!0,app.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3))}):(app.disabled=!1,app.errorMsg=r.data.message)})}}]).controller("usernameCtrl",["User","$timeout","$state",function(e,t,a){var r=this;this.sendUsername=function(o,s){r.errorMsg=!1,r.disabled=!0,s?e.sendUsername(r.userData.email).then(function(e){e.data.success?(r.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3)):(r.disabled=!1,r.errorMsg=e.data.message)}):(r.disabled=!1,r.errorMsg="올바른 이메일 주소가 아닙니다.")}}]).controller("passwordCtrl",["User","$timeout","$state",function(e,t,a){var r=this;r.sendPassword=function(o,s){r.errorMsg=!1,r.disabled=!0,s?e.sendPassword(r.resetData).then(function(e){e.data.success?(r.successMsg=e.data.message+"...메인 페이지로 이동합니다.",t(function(){a.go("app")},2e3)):(r.disabled=!1,r.errorMsg=e.data.message)}):(r.disabled=!1,r.errorMsg="올바른 아이디가 아닙니다.")}}]).controller("resetCtrl",["$stateParams","$scope","User","$timeout","$state",function(e,t,a,r,o){var s=this;s.hide=!0,a.resetPassword(e.token).then(function(e){e.data.success?(s.hide=!1,t.alert="alert alert-success",s.successMsg="새로운 비밀번호를 입력해주세요.",t.username=e.data.user[0].username):(t.alert="alert alert-danger",s.errorMsg=e.data.message)}),s.savePassword=function(e,n,i){s.errorMsg=!1,s.successMsg=!1,s.disabled=!0,s.loading=!0,n&&i?(s.regData.username=t.username,a.savePassword(s.regData).then(function(e){s.loading=!1,e.data.success?(t.alert="alert alert-success",s.successMsg=e.data.message+"...메인 화면으로 이동합니다.",r(function(){o.go("app")},2e3)):(t.alert="alert alert-danger",s.disabled=!1,s.errorMsg=e.data.message)})):(t.alert="alert alert-danger",s.loading=!1,s.disabled=!1,s.errorMsg="올바른 정보를 입력해주세요.")}}]),angular.module("userControllers",["userServices"]).controller("regCtrl",["$http","$location","$timeout","User","Auth","$state",function(e,t,a,r,o,s){var n=this;this.regStep1=function(e){n.errorMsg=!1,e?e.terms&&e.privacy?(n.successMsg="약관에 성공적으로 동의하셨습니다.",n.disabled=!0,s.go("registerStep2")):(n.errorMsg="약관에 동의해야만 회원가입을 진행할 수 있습니다.",n.disabled=!1):n.errorMsg="약관에 동의해야만 회원가입을 진행할 수 있습니다."},this.regStep2=function(e,t,o){n.errorMsg=!1,n.disabled=!0,t&&o?r.create(n.regData).then(function(e){e.data.success?(n.disabled=!0,n.successMsg=e.data.message,a(function(){$("#register").modal("hide"),n.regData=null,n.isLoggedIn=!1,s.go("app")},3e3)):(n.disabled=!1,n.errorMsg=e.data.message)}):(n.disabled=!1,n.loading=!1,n.errorMsg="올바른 정보를 입력해주세요.")}}]).controller("profileCtrl",["$scope","User","$timeout","$state","$http",function(e,t,a,r,o){var s=this,n=e.main.user.username;t.readProfiles(n).then(function(e){e.data.success?s.readData=e.data.profiles:s.errorMsg=e.data.message}),this.file={},this.photoChanged=function(e){if(e.length>0&&e[0].name.match(/\.(png|jpeg|jpg)$/)){var t=e[0],r=new FileReader;r.readAsDataURL(t),r.onload=function(e){a(function(){s.thumbnail={},s.thumbnail.dataUrl=e.target.result,s.uploading=!1,s.message=!1})}}else s.thumbnail={},s.message=!1},this.updateProfileImage=function(){s.errorMsg=!1,s.disabled=!0,e.$emit("LOAD");var t=new FormData,n=e.main.user.user_id;t.append("myfile",s.file.upload),o.put("/api/uploadTemp/"+n,t,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(function(t){t.data.success?(e.$emit("UNLOAD"),s.successMsg=t.data.message,s.file={},a(function(){r.reload()},1e3)):(e.$emit("UNLOAD"),s.disabled=!1,s.errorMsg=t.data.message,s.file={})})},this.updateProfile=function(){s.errorMsg=!1,s.disabled=!0,s.readData.user_id=e.main.user.user_id,t.updateProfiles(s.readData).then(function(e){e.data.success?(s.successMsg=e.data.message,a(function(){r.reload()},2e3)):(s.errorMsg=e.data.message,s.disabled=!1)})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsInJvdXRlLmpzIiwiY29udG9yb2xsZXJzL2NvbW1lbnRDdHJsLmpzIiwiY29udG9yb2xsZXJzL2ltYWdlQ3JvcC5qcyIsImNvbnRvcm9sbGVycy9vcGluaW9uQ3RybC5qcyIsImRpcmVjdGl2ZXMvZmlsZU1vZGVsLmpzIiwiZGlyZWN0aXZlcy9tYXRjaFBhc3N3b3JkLmpzIiwic2VydmljZXMvYXJ0aXN0U2VydmljZXMuanMiLCJzZXJ2aWNlcy9hdXRoU2VydmljZXMuanMiLCJzZXJ2aWNlcy9ib2FyZFNlcnZpY2VzLmpzIiwic2VydmljZXMvY29tbWVudFNlcnZpY2VzLmpzIiwic2VydmljZXMvZ2FsbGVyeVNlcnZpY2VzLmpzIiwic2VydmljZXMvdXNlclNlcnZpY2VzLmpzIiwiY29udG9yb2xsZXJzL2NhdGVnb3JpZXMvYXJ0aXN0Q3RybC5qcyIsImNvbnRvcm9sbGVycy9jYXRlZ29yaWVzL2JvYXJkQ3RybC5qcyIsImNvbnRvcm9sbGVycy9jYXRlZ29yaWVzL2dhbGxlcnlDdHJsLmpzIiwiY29udG9yb2xsZXJzL2NhdGVnb3JpZXMvaG9tZUN0cmwuanMiLCJjb250b3JvbGxlcnMvbWFpbi9tYWluQ3RybC5qcyIsImNvbnRvcm9sbGVycy9tZW51L2JvYXJkTWVudUN0cmwuanMiLCJjb250b3JvbGxlcnMvbWVudS9kaXNwbGF5TWVudUN0cmwuanMiLCJjb250b3JvbGxlcnMvbWVudS9tYWluTWVudUN0cmwuanMiLCJjb250b3JvbGxlcnMvdXNlci9lbWFpbEN0cmwuanMiLCJjb250b3JvbGxlcnMvdXNlci91c2VyQ3RybC5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwiY29uZmlnIiwiJGh0dHBQcm92aWRlciIsImludGVyY2VwdG9ycyIsInB1c2giLCJhcHAiLCIkc3RhdGVQcm92aWRlciIsIiR1cmxSb3V0ZXJQcm92aWRlciIsIiRsb2NhdGlvblByb3ZpZGVyIiwib3RoZXJ3aXNlIiwic3RhdGUiLCJ1cmwiLCJ2aWV3cyIsImhlYWRlciIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciIsImNvbnRlbnQiLCJmb290ZXIiLCJjb250cm9sbGVyQXMiLCJhdXRoZW50aWNhdGVkIiwiY29udGVudEAiLCJtZW51QGFwcC5hcnRpc3QiLCJjb250ZW50c0BhcHAuYXJ0aXN0IiwibWVudUBhcHAuZ2FsbGVyeSIsImNvbnRlbnRzQGFwcC5nYWxsZXJ5IiwibWVudUBhcHAuYm9hcmQiLCJjb250ZW50c0BhcHAuYm9hcmQiLCJtZW51QGFwcC5kaXNwbGF5IiwiY29udGVudHNAYXBwLmRpc3BsYXkiLCIkc2NvcGUiLCIkaHR0cCIsIiRzdGF0ZVBhcmFtcyIsIiRzdGF0ZSIsIiR3aW5kb3ciLCJDb21tZW50IiwicGhvdG9faWQiLCJ0aGlzIiwiY3JlYXRlQ29tbWVudCIsImRhdGEiLCJtYWluIiwidXNlciIsInVzZXJfaWQiLCJjb21tZW50RGF0YSIsImNvbW1lbnQiLCJ0aGVuIiwic3VjY2VzcyIsInJlbG9hZCIsImFsZXJ0IiwibG9naW4iLCJkZWxldGVDb21tZW50IiwicmVzcG9uc2UiLCJpZCIsImNvbW1lbnRfaWQiLCJkZWxldGUiLCJteUNyb3BwZWRJbWFnZSIsIm15SW1hZ2UiLCJ1bmRlZmluZWQiLCJjcm9iamVjdCIsImhhbmRsZUZpbGVTZWxlY3QiLCJldnQiLCJmaWxlIiwiY3VycmVudFRhcmdldCIsImZpbGVzIiwicmVhZGVyIiwiRmlsZVJlYWRlciIsIm9ubG9hZCIsIiRhcHBseSIsInRhcmdldCIsInJlc3VsdCIsInJlYWRBc0RhdGFVUkwiLCJlbGVtZW50IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwib24iLCJpbWFnZUNyb3AiLCJpbWdCbG9iIiwiY29uc29sZSIsImxvZyIsImRvTGlrZVN0YXR1cyIsImRvTGlrZSIsImdldE9waW5pb24iLCJnZXQiLCJvcGluaW9uSW5mbyIsImRpcmVjdGl2ZSIsIiRwYXJzZSIsInJlc3RyaWN0IiwibGluayIsInNjb3BlIiwiYXR0cnMiLCJwYXJzZWRGaWxlIiwiZmlsZU1vZGVsIiwicGFyc2VkZmlsZVNldHRlciIsImFzc2lnbiIsImJpbmQiLCJkb0NvbmZpcm0iLCJ2YWx1ZXMiLCJjb25maXJtZWQiLCJmb3JFYWNoIiwiZWxlIiwiY29uZmlybSIsIiRvYnNlcnZlIiwibWF0Y2hlcyIsIkpTT04iLCJwYXJzZSIsIm1hdGNoIiwiJHdhdGNoIiwiZmFjdG9yeSIsImFydGlzdEZhY3RvcnkiLCJyZWFkQXJ0aXN0VGFwIiwicmVhZEFydGlzdHMiLCJ1c2VyX3R5cGUiLCJyZWFkQXJ0aXN0IiwiYXJ0aXN0X2lkIiwiY3JlYXRlQXJpc3RQaG90byIsInBob3RvRGF0YSIsInBvc3QiLCJ1cGRhdGVBcmlzdFByb2ZpbGUiLCJhcnRpc3REYXRhIiwicHV0IiwicmVhZEFydGlzdFByb2ZpbGUiLCJyZWFkQXJpc3RQaG90byIsIkF1dGhUb2tlbiIsImF1dGhGYWN0b3J5IiwiZ2V0VXNlciIsImdldFRva2VuIiwiJHEiLCJyZWplY3QiLCJtZXNzYWdlIiwibG9naW5EYXRhIiwic2V0VG9rZW4iLCJ0b2tlbiIsImlzTG9nZ2VkSW4iLCJsb2dvdXQiLCJhdXRoVG9rZW5GYWN0b3J5IiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsInJlbW92ZUl0ZW0iLCJnZXRJdGVtIiwiYXV0aEludGVyY2VwdG9yc0ZhY3RvcnkiLCJyZXF1ZXN0IiwiaGVhZGVycyIsImJvYXJkRmFjdG9yeSIsInJlYWRCb2FyZFRhcCIsInJlYWRCb2FyZHMiLCJib2FyZF90eXBlIiwicmVhZEJvYXJkIiwiYm9hcmRfaWQiLCJjcmVhdGVCb2FyZCIsImJvYXJkRGF0YSIsImNvbW1lbnRGYWN0b3J5IiwicmVhZENvbW1lbnQiLCJyZWFkQm9hcmRDb21tZW50IiwiZ2FsbGVyeUZhY3RvcnkiLCJyZWFkR2FsbGVyeVRhcCIsInJlYWRQaG90b3MiLCJwaG90b190eXBlIiwicmVhZFBob3RvRGF0YSIsInJlYWRNb3JlUGhvdG8iLCJ1c2VyRmFjdG9yeSIsImNyZWF0ZSIsInJlZ0RhdGEiLCJhY3RpdmVBY2NvdW50IiwiY2hlY2tDcmVkZW50aWFscyIsInJlc2VuZExpbmsiLCJ1c2VybmFtZSIsInNlbmRVc2VybmFtZSIsInVzZXJEYXRhIiwic2VuZFBhc3N3b3JkIiwicmVzZXREYXRhIiwicmVzZXRQYXNzd29yZCIsInNhdmVQYXNzd29yZCIsInJlbmV3U2Vzc2lvbiIsInJlc2V0UGVybWlzc2lvbiIsImNoZWNrUGVybWlzc2lvbiIsInJlYWRQcm9maWxlcyIsInVwZGF0ZVByb2ZpbGVzIiwidXBkYXRlRGF0YSIsIkFydGlzdCIsImVycm9yTXNnIiwiY29kZSIsImF2YWlsYWJsZU9wdGlvbnMiLCJzb3J0IiwibmFtZSIsInNlbGVjdGVkT3B0aW9uIiwiYXJ0aXN0RGF0YXMiLCIkdGltZW91dCIsIm1haW5QaG90b0NoYW5nZWQiLCJsZW5ndGgiLCJmaWxlUmVhZGVyIiwiZSIsIm1haW5UaHVtYm5haWwiLCJkYXRhVXJsIiwicmVhZFBob3RvIiwiZGlzYWJsZWQiLCIkZW1pdCIsImZkIiwiRm9ybURhdGEiLCJhcHBlbmQiLCJ1cGxvYWQiLCJ0cmFuc2Zvcm1SZXF1ZXN0IiwiaWRlbnRpdHkiLCJDb250ZW50LVR5cGUiLCJzdWNjZXNzTXNnIiwibWFpbkltYWdlUGF0aCIsInBob3RvX3BhdGgiLCJjcmVhdGVQaG90byIsInVwbG9hZERhdGEiLCJ0aXRsZSIsImRldGFpbCIsInNob3J0X2luZm8iLCJkZXRhaWxfaW5mbyIsImFydGlzdFBob3RvcyIsImZpbHRlciIsIiRzY2UiLCJ0ZXh0IiwidHJ1c3RBc0h0bWwiLCJCb2FyZCIsImJvYXJkRGF0YXMiLCJnbyIsIiQiLCJyZWFkeSIsInN1bW1lcm5vdGUiLCJsYW5nIiwiaGVpZ2h0IiwibWluSGVpZ2h0IiwibWF4SGVpZ2h0IiwiZm9jdXMiLCJwbGFjZWhvbGRlciIsInRvb2xiYXIiLCJodG1sY29udGVudCIsIkdhbGxlcnkiLCJwaG90b3NEYXRhIiwiZ2V0Q29udGVudCIsInBob3RvcyIsIkF1dGgiLCIkbG9jYXRpb24iLCIkcm9vdFNjb3BlIiwiJGludGVydmFsIiwiVXNlciIsImxvYWRtZSIsIiRvbiIsImxvYWRpbmciLCJjaGVja1Nlc3Npb24iLCJwZXJtaXNzaW9uIiwiaW50ZXJ2YWwiLCJjYW5jZWwiLCJzZWxmIiwicGFyc2VKd3QiLCJiYXNlNjRVcmwiLCJzcGxpdCIsImJhc2U2NCIsInJlcGxhY2UiLCJhdG9iIiwiZXhwaXJlVGltZSIsInRpbWVTdGFtcCIsIk1hdGgiLCJmbG9vciIsIkRhdGUiLCJub3ciLCJleHAiLCJzaG93TW9kYWwiLCJjaG9pY2VNYWRlIiwiaGlkZU1vZGFsIiwiTW9kYWxCb2R5IiwiZW5kU2Vzc2lvbiIsIm9wdGlvbiIsIm1vZGFsSGVhZGVyIiwibW9kYWxCb2R5IiwiaGlkZUJ1dHRvbiIsIm1vZGFsIiwiYmFja2Ryb3AiLCJkb0xvZ2luIiwidmFsaWQiLCJleHBpcmVkIiwiZG9QZXJtaXNzaW9uIiwidXBsb2FkRGlzYWJsZWQiLCJ1cGxvYWRlcnJvck1zZyIsInVwbG9hZFN1Y2Nlc3NNc2ciLCJyZXNlbmQiLCJyZXNldHVzZXJuYW1lIiwicmVzZXRwYXNzd29yZCIsImdldEhlYWRlckNvbnRlbnQiLCJib2FyZGVzIiwiZGlzcGxheXMiLCJlbWFpbCIsImhpZGUiLCJyZWdTdGVwMSIsInJlZ1N0ZXAyIiwicmVhZERhdGEiLCJwcm9maWxlcyIsInBob3RvQ2hhbmdlZCIsInRodW1ibmFpbCIsInVwbG9hZGluZyIsInVwZGF0ZVByb2ZpbGVJbWFnZSIsInVwZGF0ZVByb2ZpbGUiXSwibWFwcGluZ3MiOiJBQUFBQSxRQUFBQyxPQUFBLE9BQ0EsWUFDQSxlQUNBLGtCQUNBLGtCQUNBLG1CQUNBLG9CQUNBLHFCQUNBLHFCQUNBLG1CQUNBLGNBQ0FDLFFBQUEsZ0JBQUEsU0FBQUMsR0FDQUEsRUFBQUMsYUFBQUMsS0FBQSxzQkNaQSxJQUFBQyxLQUFBTixRQUFBQyxPQUFBLE1BQ0FLLEtBQUFKLFFBQUEsaUJBQUEscUJBQUEsb0JBQUEsU0FBQUssRUFBQUMsRUFBQUMsR0FDQUQsRUFBQUUsVUFBQSxLQUdBSCxFQUNBSSxNQUFBLE9BQ0FDLElBQUEsSUFDQUMs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LEdBQ0FBLEVBQUFBLEtBQUFPLFNBQ0F4QyxFQUFBcU0sV0FBQXBLLEVBQUFBLEtBQUF5RixRQUNBMEQsRUFBQSxXQUNBekosRUFBQWMsVUFDQSxPQUVBekMsRUFBQTZLLFNBQUE1SSxFQUFBQSxLQUFBeUYsUUFDQTFILEVBQUE0TCxVQUFBIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKCdhcHAnLFtcclxuICAgICd1aS5yb3V0ZXInLFxyXG4gICAgJ3VpLmJvb3RzdHJhcCcsXHJcbiAgICAndXNlckNvbnRyb2xsZXJzJyxcclxuICAgICdtYWluQ29udHJvbGxlcnMnLFxyXG4gICAgJ2VtYWlsQ29udHJvbGxlcnMnLFxyXG4gICAgJ2FydGlzdENvbnRyb2xsZXJzJyxcclxuICAgICdnYWxsZXJ0Q29udHJvbGxlcnMnLFxyXG4gICAgJ2NvbW1lbnRDb250cm9sbGVycycsXHJcbiAgICAnYm9hcmRDb250cm9sbGVycycsXHJcbiAgICAndWlDcm9wcGVyJ1xyXG5dKS5jb25maWcoZnVuY3Rpb24oJGh0dHBQcm92aWRlcil7XHJcbiAgJGh0dHBQcm92aWRlci5pbnRlcmNlcHRvcnMucHVzaCgnQXV0aEludGVyY2VwdG9ycycpO1xyXG59KTtcclxuIiwidmFyIGFwcCA9IGFuZ3VsYXIubW9kdWxlKCdhcHAnKTtcclxuYXBwLmNvbmZpZyhmdW5jdGlvbiAoJHN0YXRlUHJvdmlkZXIsICR1cmxSb3V0ZXJQcm92aWRlciwgJGxvY2F0aW9uUHJvdmlkZXIpIHtcclxuJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZSgnLycpO1xuLy8gJGxvY2F0aW9uUHJvdmlkZXIuaHRtbDVNb2RlKHRydWUpO1xyXG5cclxuICRzdGF0ZVByb3ZpZGVyXHJcbiAgICAgICAgICAgLnN0YXRlKCdhcHAnLCB7XHJcbiAgICAgICAgICAgICB1cmw6ICcvJyxcclxuICAgICAgICAgICAgIHZpZXdzOntcclxuICAgICAgICAgICAgICAgJ2hlYWRlcic6IHtcclxuICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWVudWVzL21haW5NZW51Lmh0bWwnLFxyXG4gICAgICAgICAgICAgICBjb250cm9sbGVyOiAnTWFpbk1lbnVDb250cm9sbGVyJ1xyXG4gICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAnY29udGVudCc6IHtcclxuICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbWFpbi9ob21lLmh0bWwnXHJcbiAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICdmb290ZXInOiB7XHJcbiAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL2NvbXBhbnkvZm9vdGVyLmh0bWwnXHJcbiAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIC5zdGF0ZSgncmVnaXN0ZXJTdGVwMScsXHJcbiAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgIHVybDogJy9yZWdpc3Rlci9zdGVwMScsXHJcbiAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdyZWdDdHJsJyxcclxuICAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAncmVnaXN0ZXInLFxyXG4gICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9pc0xvZ2dlZE91dC9yZWdpc3RlclN0ZXAxLmh0bWwnLFxyXG4gICAgICAgICAgICAgICBhdXRoZW50aWNhdGVkOiBmYWxzZVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgLnN0YXRlKCdyZWdpc3RlclN0ZXAyJyxcclxuICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgdXJsOiAnL3JlZ2lzdGVyL3N0ZXAyJyxcclxuICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3JlZ0N0cmwnLFxyXG4gICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdyZWdpc3RlcicsXHJcbiAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL2lzTG9nZ2VkT3V0L3JlZ2lzdGVyU3RlcDIuaHRtbCcsXHJcbiAgICAgICAgICAgICAgIGF1dGhlbnRpY2F0ZWQ6IGZhbHNlXHJcbiAgICAgICAgICAgIH0pXHJcblxyXG5cclxuICAgICAgICAgICAgLnN0YXRlKCdyZXNldHVzZXJuYW1lJyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgIHVybDogJy9yZXNldHVzZXJuYW1lJyxcclxuICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy91c2Vycy9yZXNldC91c2VybmFtZS5odG1sJyxcclxuICAgICAgICAgICAgICBjb250cm9sbGVyOiAndXNlcm5hbWVDdHJsJyxcclxuICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICd1c2VybmFtZSdcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIC5zdGF0ZSgncmVzZXRwYXNzd29yZCcsXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICB1cmw6ICcvcmVzZXRwYXNzd29yZCcsXHJcbiAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvdXNlcnMvcmVzZXQvcGFzc3dvcmQuaHRtbCcsXHJcbiAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3Bhc3N3b3JkQ3RybCcsXHJcbiAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAncGFzc3dvcmQnXHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ3Jlc2V0JyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgIHVybDogJy9yZXNldC86dG9rZW4nLFxyXG4gICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3VzZXJzL3Jlc2V0L25ld3Bhc3N3b3JkLmh0bWwnLFxyXG4gICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdyZXNldEN0cmwnLFxyXG4gICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3Jlc2V0J1xyXG4gICAgICAgICAgICB9KVxyXG5cclxuXHJcbiAgICAgICAgICAgIC5zdGF0ZSgnYWN0aXZhdGUnLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgdXJsOiAnL2FjdGl2YXRlLzp0b2tlbicsXHJcbiAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvdXNlcnMvYWN0aXZhdGlvbi9hY3RpdmF0ZS5odG1sJyxcclxuICAgICAgICAgICAgICBjb250cm9sbGVyOiAnZW1haWxDdHJsJyxcclxuICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdlbWFpbCdcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIC5zdGF0ZSgncmVzZW5kJyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgIHVybDogJy9yZXNlbmQnLFxyXG4gICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3VzZXJzL2FjdGl2YXRpb24vcmVzZW5kLmh0bWwnLFxyXG4gICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdyZXNlbmRDdHJsJyxcclxuICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdyZXNlbmQnXHJcbiAgICAgICAgICAgIH0pXHJcblxyXG5cclxuXHJcbiAgLy8g7Jyg7KCAIO2UhOuhnO2VhCDrqqjslYQg64aT7J2AIOqzsyAgLyDqs4TsoJUg7KCV67O0XHJcbiAgICAgICAgICAgLnN0YXRlKCdhcHAucHJvZmlsZXMnLCB7XHJcbiAgICAgICAgICAgICB1cmw6ICdwcm9maWxlcycsXHJcbiAgICAgICAgICAgICB2aWV3czp7XHJcbiAgICAgICAgICAgICAgICdjb250ZW50QCc6IHtcclxuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnaXNMb2dnZWRJbi91c2VyUHJvZmlsZXMuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAncHJvZmlsZUN0cmwnLFxyXG4gICAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAncHJvZmlsZScsXHJcbiAgICAgICAgICAgICAgICBhdXRoZW50aWNhdGVkOiBmYWxzZVxyXG5cclxuICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuLy8g7J6R6rCAIOyeke2SiCDrqqjslYQg64aT7J2AIOqzs1xyXG4gICAgICAgICAgLnN0YXRlKCdhcHAucGhvdG9zJywge1xyXG4gICAgICAgICAgICB1cmw6ICdwaG90b3MnLFxyXG4gICAgICAgICAgICB2aWV3czp7XHJcbiAgICAgICAgICAgICAgJ2NvbnRlbnRAJzoge1xyXG4gICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdpc0xvZ2dlZEluL2FydGlzdFBob3Rvcy5odG1sJyxcclxuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdhbkFydGlzdFBob3RvQ3RybCcsXHJcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdhbkFydGlzdFBob3RvJyxcclxuICAgICAgICAgICAgICAgIGF1dGhlbnRpY2F0ZWQ6IGZhbHNlXHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgfSlcclxuXHJcbi8vIOuTseuhneuQnCDsnpHqsIDsnZgg7J6R7ZKIIOyXheuhnOuTnCAmIOyekeqwgCDtlITroZztlYRcclxuICAgICAgICAgICAuc3RhdGUoJ2FwcC5hcnRpc3RQcm9maWxlcycsIHtcclxuICAgICAgICAgICAgIHVybDogJ2FydGlzdCcsXHJcbiAgICAgICAgICAgICB2aWV3czp7XHJcbiAgICAgICAgICAgICAgICdjb250ZW50QCc6IHtcclxuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnaXNMb2dnZWRJbi9hcnRpc3RQcm9maWxlcy5odG1sJyxcclxuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdhcnRpc3RQcm9maWxlQ3RybCcsXHJcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdhcnRpc3RQcm9maWxlJyxcclxuICAgICAgICAgICAgICAgIGF1dGhlbnRpY2F0ZWQ6IHRydWVcclxuICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgLnN0YXRlKCdhcHAuaW50cm8nLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgdXJsOiAnaW50cm8nLFxyXG4gICAgICAgICAgICAgIHZpZXdzOntcclxuICAgICAgICAgICAgICAgICdjb250ZW50QCc6IHtcclxuICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvY29tcGFueS9pbnRyby5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgYXV0aGVudGljYXRlZDogZmFsc2VcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC50ZXJtcycsXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICB1cmw6ICd0ZXJtcycsXHJcbiAgICAgICAgICAgICAgdmlld3M6e1xyXG4gICAgICAgICAgICAgICAgJ2NvbnRlbnRAJzoge1xyXG4gICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9jb21wYW55L3Rlcm1zLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICBhdXRoZW50aWNhdGVkOiBmYWxzZVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIC5zdGF0ZSgnYXBwLnByaXZhY3knLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgdXJsOiAncHJpdmFjeScsXHJcbiAgICAgICAgICAgICAgdmlld3M6e1xyXG4gICAgICAgICAgICAgICAgJ2NvbnRlbnRAJzoge1xyXG4gICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9jb21wYW55L3ByaXZhY3kuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgIGF1dGhlbnRpY2F0ZWQ6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuXHJcbi8vID09PT09PT09PT09PT09PT09PSAgYXJ0aXN0IC8gZ2FsbGVyeSAvIGV4aGliaXRpb24gLyBib2FyZCA9PT09PT09PT09PT09PT09PT09PT09PT09PT09IC8vXHJcbi8vID09PT09PT09PT09PT09PT09PSAgYXJ0aXN0IOy5tO2FjOqzoOumrCA9PT09PT09PT09PT09PT09PT09PT09PT09PT09IC8vXHJcblxyXG4gICAgICAgICAgICAuc3RhdGUoJ2FwcC5hcnRpc3QnLCB7XHJcbiAgICAgICAgICAgICAgdXJsOiAnYXJ0aXN0L2NhdGVnb3J5PTpjb2RlJyxcclxuICAgICAgICAgICAgICB2aWV3czp7XHJcbiAgICAgICAgICAgICAgICAnY29udGVudEAnOiB7XHJcbiAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21haW4vZm9ybS5odG1sJ1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICdtZW51QGFwcC5hcnRpc3QnOntcclxuICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvcGFydGlhbEFydGlzdC9hcnRpc3RUYXAuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdhcnRpc3RUYXBDdHJsJyxcclxuICAgICAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAnYXJ0aXN0VGFwJyxcclxuICAgICAgICAgICAgICAgICAgYXV0aGVudGljYXRlZDogZmFsc2VcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAnY29udGVudHNAYXBwLmFydGlzdCc6e1xyXG4gICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9wYXJ0aWFsQXJ0aXN0L2FydGlzdHMuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdhcnRpc3RzQ3RybCcsXHJcbiAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ2FydGlzdHMnLFxyXG4gICAgICAgICAgICAgICAgICBhdXRoZW50aWNhdGVkOiBmYWxzZVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAgLnN0YXRlKCdhcHAuZ2FsbGVyeScsIHtcclxuICAgICAgICAgICAgICAgdXJsOiAnZ2FsbGVyeS9jYXRlZ29yeT06Y29kZScsXHJcbiAgICAgICAgICAgICAgIHZpZXdzOntcclxuICAgICAgICAgICAgICAgICAnY29udGVudEAnOiB7XHJcbiAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9tYWluL2Zvcm0uaHRtbCdcclxuICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICdtZW51QGFwcC5nYWxsZXJ5Jzp7XHJcbiAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9wYXJ0aWFsR2FsbGVyeS9nYWxsZXJ5VGFwLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ2dhbGxlcnlUYXBDdHJsJyxcclxuICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ2dhbGxlcnlUYXAnXHJcbiAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAnY29udGVudHNAYXBwLmdhbGxlcnknOntcclxuICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3BhcnRpYWxHYWxsZXJ5L3Bob3Rvcy5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdnYWxsZXJ5UGhvdG9zQ3RybCcsXHJcbiAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdnYWxsZXJ5UGhvdG9zJyxcclxuICAgICAgICAgICAgICAgICAgIGF1dGhlbnRpY2F0ZWQ6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgICAgLnN0YXRlKCdhcHAuYm9hcmQnLCB7XHJcbiAgICAgICAgICAgICAgICB1cmw6ICdib2FyZC9jYXRlZ29yeT06Y29kZScsXHJcbiAgICAgICAgICAgICAgICB2aWV3czp7XHJcbiAgICAgICAgICAgICAgICAgICdjb250ZW50QCc6IHtcclxuICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9tYWluL2Zvcm0uaHRtbCdcclxuICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgJ21lbnVAYXBwLmJvYXJkJzp7XHJcbiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvcGFydGlhbEJvYXJkL2JvYXJkVGFwLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdib2FyZFRhcEN0cmwnLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dGhlbnRpY2F0ZWQ6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICdjb250ZW50c0BhcHAuYm9hcmQnOntcclxuICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9wYXJ0aWFsQm9hcmQvYm9hcmRzLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdib2FyZHNDdHJsJyxcclxuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdib2FyZHMnLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dGhlbnRpY2F0ZWQ6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgICAuc3RhdGUoJ2FwcC5kaXNwbGF5Jywge1xyXG4gICAgICAgICAgICAgICB1cmw6ICdkaXNwbGF5L2NhdGVnb3J5PTpjb2RlJyxcclxuICAgICAgICAgICAgICAgdmlld3M6e1xyXG4gICAgICAgICAgICAgICAgICdjb250ZW50QCc6IHtcclxuICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL21haW4vZm9ybS5odG1sJ1xyXG4gICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgJ21lbnVAYXBwLmRpc3BsYXknOntcclxuICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3BhcnRpYWxEaXNwbGF5L2Rpc3BsYXlUYXAuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnZGlzcGxheU1lbnVDb250cm9sbGVyJyxcclxuICAgICAgICAgICAgICAgICAgIGF1dGhlbnRpY2F0ZWQ6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAnY29udGVudHNAYXBwLmRpc3BsYXknOntcclxuICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3BhcnRpYWxEaXNwbGF5L2NvbnRlbnQuaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnZGlzcGxheU1lbnVDb250cm9sbGVyJyxcclxuICAgICAgICAgICAgICAgICAgIGF1dGhlbnRpY2F0ZWQ6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgICAuc3RhdGUoJ2FwcC5hcnRpc3Quc2hvdycsIHtcclxuICAgICAgICAgICAgICAgdXJsOiAnL2FydGlzdDphcnRpc3RfaWQnLFxyXG4gICAgICAgICAgICAgICB2aWV3czp7XHJcbiAgICAgICAgICAgICAgICAgJ2NvbnRlbnRzQGFwcC5hcnRpc3QnOntcclxuICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3BhcnRpYWxBcnRpc3QvYXJ0aXN0Lmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ2FydGlzdFBob3RvQ3RybCcsXHJcbiAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdhcnRpc3RQaG90bycsXHJcbiAgICAgICAgICAgICAgICAgICBhdXRoZW50aWNhdGVkOiBmYWxzZVxyXG4gICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgIC5zdGF0ZSgnYXBwLmdhbGxlcnkuc2hvdycsIHtcclxuICAgICAgICAgICAgIHVybDogJy9waG90b190eXBlPTpwaG90b190eXBlL3Bob3RvOnBob3RvX2lkJyxcclxuICAgICAgICAgICAgIHZpZXdzOntcclxuICAgICAgICAgICAgICAgJ2NvbnRlbnRzQGFwcC5nYWxsZXJ5Jzp7XHJcbiAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvcGFydGlhbEdhbGxlcnkvcGhvdG8uaHRtbCcsXHJcbiAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ2dhbGxlcnlQaG90b0N0cmwnLFxyXG4gICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ2dhbGxlcnlwaG90bycsXHJcbiAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgLnN0YXRlKCdhcHAuYm9hcmQuc2hvdycsXHJcbiAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgdXJsOiAnL2JvYXJkOmJvYXJkX2lkJyxcclxuICAgICAgICAgICAgIHZpZXdzOntcclxuICAgICAgICAgICAgICAgJ2NvbnRlbnRzQGFwcC5ib2FyZCc6e1xyXG4gICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAncGFydGlhbEJvYXJkL2JvYXJkLmh0bWwnLFxyXG4gICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdib2FyZEN0cmwnLFxyXG4gICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ2JvYXJkJyxcclxuICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgICAgIH0pXHJcblxyXG5cclxuICAgICAgICAgICAgLnN0YXRlKCdhcHAuYm9hcmQuY3JlYXRlJyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgIHVybDonL2NyZWF0ZScsXHJcbiAgICAgICAgICAgICAgdmlld3M6e1xyXG4gICAgICAgICAgICAgICAgJ2NvbnRlbnRzQGFwcC5ib2FyZCc6e1xyXG4gICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDonL3BhcnRpYWxCb2FyZC9ib2FyZENyZWF0ZS5odG1sJyxcclxuICAgICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ2JvYXJkQ3RybCcsXHJcbiAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ2JvYXJkJyxcclxuICAgICAgICAgICAgICAgICAgYXV0aGVudGljYXRlZDogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuXHJcblxyXG4gICAgICAgICAgIC5zdGF0ZSgnYXBwLmJvYXJkLmVkaXQnLFxyXG4gICAgICAgICAgIHtcclxuICAgICAgICAgICAgIHVybDogJy9lZGl0Lzpib2FyZF9pZCcsXHJcbiAgICAgICAgICAgICB2aWV3czp7XHJcbiAgICAgICAgICAgICAgICdjb250ZW50c0BhcHAuYm9hcmQnOntcclxuICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdwYXJ0aWFsQm9hcmQvYm9hcmRVcGRhdGUuaHRtbCcsXHJcbiAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdib2FyZEN0cmwnLFxyXG4gICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICdib2FyZCcsXHJcbiAgICAgICAgICAgICAgIGF1dGhlbnRpY2F0ZWQ6IHRydWVcclxuICAgICAgICAgICAgIH1cclxuICAgICAgICAgICB9XHJcbiAgICAgICAgIH0pXG5cbiAgICAgICAgIC5zdGF0ZSgnYXBwLmdhbGxlcnkuZWRpdCcsIHtcbiAgICAgICAgICAgdXJsOiAnL2VkaXQvOnBob3RvX2lkJyxcbiAgICAgICAgICAgdmlld3M6e1xuICAgICAgICAgICAgICdjb250ZW50QCc6e1xuICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvcGFydGlhbEdhbGxlcnkvcGhvdG9FZGl0Lmh0bWwnLFxuICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ2dhbGxlcnlQaG90b0N0cmwnLFxuICAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAnZ2FsbGVyeXBob3RvJyxcbiAgICAgICAgICAgICB9XG4gICAgICAgICAgIH1cbiAgICAgICAgIH0pO1xuXHJcbn0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2NvbW1lbnRDb250cm9sbGVycycsWydjb21tZW50U2VydmljZXMnXSlcclxuLmNvbnRyb2xsZXIoJ2NvbW1lbnRDdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgJGh0dHAsICRzdGF0ZVBhcmFtcywgJHN0YXRlLCAkd2luZG93LCBDb21tZW50KSB7XHJcbiAgLy8gaWTsl5Ag7ZW064u57ZWY64qUIOqwkuydhCDrs7Tsl6zso7zripQg7ZWo7IiYXHJcbiAgLy8g6rCS7J2EIOqwgOyguOyYpOuKlCDtlajsiJhcclxuICB2YXIgYXBwID0gdGhpcztcclxuICB2YXIgcGhvdG9faWQgPSAkc3RhdGVQYXJhbXMucGhvdG9faWQ7XHJcblxyXG4gIC8vIOy9lOupmO2KuCDsg53shLHtlZjquLBcclxuICAvLyDsnpHrj5nsnbQg7ZWE7JqU7ZWY66m0IOyVhOydtOuUlOuekSDrjJPquIAg64K07JqpIOq3uOumrOqzoCBwaG90b19pZFxyXG4gICAgdGhpcy5jcmVhdGVDb21tZW50ID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgIGlmKCEkc2NvcGUubWFpbi51c2VyLnVzZXJfaWQpe1xyXG4gICAgICAgICRzY29wZS5tYWluLmxvZ2luKCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgaWYoIWRhdGEpe1xyXG4gICAgICAgICAgJHdpbmRvdy5hbGVydCgn64yT6riA7J2EIOyeheugpe2VtOyjvOyEuOyalC4nKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdmFyIGNvbW1lbnREYXRhID0ge1xyXG4gICAgICAgICAgICBjb21tZW50IDogZGF0YSxcclxuICAgICAgICAgICAgdXNlcl9pZCA6ICRzY29wZS5tYWluLnVzZXIudXNlcl9pZCxcclxuICAgICAgICAgICAgcGhvdG9faWQgOiBwaG90b19pZFxyXG4gICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICBDb21tZW50LmNyZWF0ZUNvbW1lbnQoY29tbWVudERhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxufTtcclxuXHJcbiAgICAgIC8vIGlmKHZhbGlkKXtcclxuICAgICAgLy8gICBDb21tZW50LmNyZWF0ZUNvbW1lbnQoYXBwLnJlc3BvbnNlKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAvL1xyXG4gICAgICAvL1xyXG4gICAgICAvLyAgIH0pO1xyXG4gICAgICAvLyB9IGVsc2Uge1xyXG4gICAgICAvLyAgIGFwcC5lcnJvck1zZyA9ICcnO1xyXG4gICAgICAvLyB9XHJcbiAgICAgIC8vIGlmKHZhbGlkKXtcclxuICAgICAgLy8gICB2YXIgYm9hcmRfaWQgPSByZXNwb25zZS5ib2FyZF9pZDtcclxuICAgICAgLy8gICB2YXIgcGhvdG9faWQgPSByZXNwb25zZS5waG90b19pZDtcclxuICAgICAgLy8gICB2YXIgY29tbWVudCAgPSByZXNwb25zZS5jb21tZW50O1xyXG4gICAgICAvLyAgICAkaHR0cC5wb3N0KCcvYXBpL2NvbW1lbnQnLCB7XHJcbiAgICAgIC8vICAgICAgYm9hcmRfaWQ6IGJvYXJkX2lkLCBwaG90b19pZDogcGhvdG9faWQsIGNvbW1lbnQ6IGNvbW1lbnRcclxuICAgICAgLy8gICAgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSl7XHJcbiAgICAgIC8vICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICAvLyAgICB9KTtcclxuICAgICAgLy8gfSBlbHNlIHtcclxuICAgICAgLy8gICAkd2luZG93LmFsZXJ0KFwi64yT6riA7J2EIOyeheugpe2VtOyjvOyEuOyalC5cIik7XHJcbiAgICAgIC8vIH1cclxuXHJcblxyXG5cclxuICAgIC8vIHZhciBhcHAgPSB0aGlzO1xyXG4gICAgLy8gdmFyIHVzZXJfaWQgPSAkc2NvcGUubWFpbi51c2VyLnVzZXJfaWQ7XHJcbiAgICAvL1xyXG4gICAgLy8gICBBcnRpc3QucmVhZEFydGlzdFByb2ZpbGUodXNlcl9pZCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgIC8vICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAvLyAgICAgICBhcHAuYXJ0aXN0RGF0YSA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICAvLyAgICAgfSBlbHNlIHtcclxuICAgIC8vICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgLy8gICAgIH1cclxuICAgIC8vICAgfSk7XHJcbiAgICAvL1xyXG4gICAgLy9cclxuICAgIC8vXHJcbiAgICAvLyB2YXIgYm9hcmRfaWQgPSAkc3RhdGVQYXJhbXMuYm9hcmRfaWQ7XHJcbiAgICAvLyB2YXIgaWQgPSBcIlwiO1xyXG4gICAgLy9cclxuICAgIC8vIHZhciBkYXRhID0ge1xyXG4gICAgLy8gICBwaG90b19pZDpwaG90b19pZCxcclxuICAgIC8vICAgYm9hcmRfaWQ6Ym9hcmRfaWRcclxuICAgIC8vIH07XHJcbiAgICAvL1xyXG4gICAgLy8gdmFyIGNvbmZpZyA9IHtcclxuICAgIC8vICAgcGFyYW1zOiBkYXRhLFxyXG4gICAgLy8gICBoZWFkZXJzIDogeydBY2NlcHQnIDogJ2FwcGxpY2F0aW9uL2pzb24nfVxyXG4gICAgLy8gfTtcclxuICAgIC8vXHJcbiAgICAvLyBpZihwaG90b19pZCl7XHJcbiAgICAvLyAgIGlkID0gcGhvdG9faWQ7XHJcbiAgICAvLyAgICRodHRwLmdldCgnL2FwaS9jb21tZW50LycraWQsIGNvbmZpZykudGhlbihmdW5jdGlvbihyZXNwb25zZSl7XHJcbiAgICAvLyAgICAgJHNjb3BlLmNvbW1lbnRzID0gcmVzcG9uc2UuZGF0YVswXTtcclxuICAgIC8vICAgfSk7XHJcbiAgICAvLyB9XHJcbiAgICAvLyBlbHNlIGlmKGJvYXJkX2lkKXtcclxuICAgIC8vICAgaWQgPSBib2FyZF9pZDtcclxuICAgIC8vICAgJGh0dHAuZ2V0KCcvYXBpL2NvbW1lbnQvJytpZCwgY29uZmlnKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtcclxuICAgIC8vICAgICAkc2NvcGUuY29tbWVudHMgPSByZXNwb25zZS5kYXRhWzBdO1xyXG4gICAgLy8gICB9KTtcclxuICAgIC8vIH0gZWxzZSB7XHJcbiAgICAvLyAgICAgJHNjb3BlLmNvbW1lbnRzID0gJ+yLnOyKpO2FnOydtCDrtojslYjsoJXtlanri4jri6QuJztcclxuICAgIC8vIH1cclxuICAvLyAvLyDsvZTrqZjtirgg7IOd7ISx7ZWY6riwXHJcbiAgLy8gICAkc2NvcGUuYWRkQ29tbWVudCA9IGZ1bmN0aW9uKHJlc3BvbnNlLCB2YWxpZCl7XHJcbiAgLy8gICAgIGlmKHZhbGlkKXtcclxuICAvLyAgICAgICB2YXIgYm9hcmRfaWQgPSByZXNwb25zZS5ib2FyZF9pZDtcclxuICAvLyAgICAgICB2YXIgcGhvdG9faWQgPSByZXNwb25zZS5waG90b19pZDtcclxuICAvLyAgICAgICB2YXIgY29tbWVudCAgPSByZXNwb25zZS5jb21tZW50O1xyXG4gIC8vICAgICAgICAkaHR0cC5wb3N0KCcvYXBpL2NvbW1lbnQnLCB7XHJcbiAgLy8gICAgICAgICAgYm9hcmRfaWQ6IGJvYXJkX2lkLCBwaG90b19pZDogcGhvdG9faWQsIGNvbW1lbnQ6IGNvbW1lbnRcclxuICAvLyAgICAgICAgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSl7XHJcbiAgLy8gICAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gIC8vICAgICAgICB9KTtcclxuICAvLyAgICAgfSBlbHNlIHtcclxuICAvLyAgICAgICAkd2luZG93LmFsZXJ0KFwi64yT6riA7J2EIOyeheugpe2VtOyjvOyEuOyalC5cIik7XHJcbiAgLy8gICAgIH1cclxuICAvL1xyXG4gIC8vICAgfTtcclxuXHJcblxyXG4gIC8vIOqwkuydhCDsgq3soJztlZjripQg7ZWo7IiYXHJcbiAgJHNjb3BlLmRlbGV0ZUNvbW1lbnQgPSBmdW5jdGlvbihyZXNwb25zZSl7XHJcbiAgICB2YXIgaWQgPSByZXNwb25zZS5jb21tZW50X2lkO1xyXG4gIFx0JGh0dHAuZGVsZXRlKCcvYXBpL2NvbW1lbnQvJytpZCkudGhlbihmdW5jdGlvbihyZXNwb25zZSl7XHJcbiAgICAgICRzdGF0ZS5yZWxvYWQoKTtcclxuICBcdH0pO1xyXG4gIH07XHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuICAuY29udHJvbGxlcignSW1hZ2VDcm9wQ3RybCcsIGZ1bmN0aW9uKCRzY29wZSkge1xyXG4gICAgdmFyIGFwcCA9IHRoaXM7XHJcblxyXG4gICAgICAkc2NvcGUubXlDcm9wcGVkSW1hZ2UgPSAnJztcclxuICAgICAgJHNjb3BlLm15SW1hZ2UgPSB1bmRlZmluZWQ7XHJcbiAgICAgICRzY29wZS5jcm9iamVjdCA9IHt9O1xyXG5cclxuICAgICAgdmFyIGhhbmRsZUZpbGVTZWxlY3QgPSBmdW5jdGlvbihldnQpIHtcclxuICAgICAgICB2YXIgZmlsZSA9IGV2dC5jdXJyZW50VGFyZ2V0LmZpbGVzWzBdO1xyXG4gICAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xyXG4gICAgICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbihldnQpIHtcclxuICAgICAgICAgICRzY29wZS4kYXBwbHkoZnVuY3Rpb24oJHNjb3BlKSB7XHJcbiAgICAgICAgICAgICRzY29wZS5teUltYWdlID0gZXZ0LnRhcmdldC5yZXN1bHQ7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xyXG4gICAgICB9O1xyXG4gICAgICBhbmd1bGFyLmVsZW1lbnQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2ZpbGVJbnB1dCcpKS5vbignY2hhbmdlJywgaGFuZGxlRmlsZVNlbGVjdCk7XHJcblxuXG4gICAgICB0aGlzLmltYWdlQ3JvcCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHZhciBpbWdCbG9iID0gJHNjb3BlLm15SW1hZ2U7XHJcbiAgICAgICAgY29uc29sZS5sb2coaW1nQmxvYik7XG4gICAgICB9O1xyXG4gICAgfSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuLmNvbnRyb2xsZXIoJ09waW5pb25Db250cm9sbGVyJywgZnVuY3Rpb24gKCAkc2NvcGUsICRodHRwLCAkc3RhdGVQYXJhbXMpIHtcclxuXHJcbi8vIOyii+yVhOyalCDqsIDsoLjsmKTquLBcclxuLy8g64yT6riAIOqwnOyImCDqsIDsoLjsmKTquLBcclxuJHNjb3BlLmRvTGlrZVN0YXR1cyA9IHRydWU7XHJcbiAgICRzY29wZS5kb0xpa2UgPSBmdW5jdGlvbigpe1xyXG4gICAgICRzY29wZS5kb0xpa2VTdGF0dXMgPSAhJHNjb3BlLmRvTGlrZVN0YXR1cztcclxuICAgfTtcclxuXHJcblxyXG4vLyDqsozsi5ztjJDsl5Ag7ZW064u57ZWY64qUIOuMk+q4gCDrsI8g7KKL7JWE7JqUIOqwgOyguOyYpOq4sFxyXG4gICRzY29wZS5nZXRPcGluaW9uID0gZnVuY3Rpb24ocmVzcG9uc2Upe1xyXG4gICAgXHRcdHZhciBpZCA9ICRzdGF0ZVBhcmFtcy5pZDtcclxuICAgICRodHRwLmdldCgnL2FwaS9vcGluaW9uLycraWQpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xyXG4gICAgICAkc2NvcGUub3BpbmlvbkluZm8gPSByZXNwb25zZS5kYXRhWzBdWzBdO1xyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgLy8gJHNjb3BlLmFkZExpa2UgPSBmdW5jdGlvbigpe1xyXG4gIC8vICAgJHNjb3BlLmxpa2VTdGF0dXMgPSAhJHNjb3BlLmxpa2VTdGF0dXM7XHJcbiAgLy8gICBpZigkc2NvcGUubGlrZVN0YXR1cyl7XHJcbiAgLy8gICAgIGNvbnNvbGUubG9nKCfsgqzsmqnsnpDqsIAg7KKL7JWE7JqU66W8IOy3qOyGjO2VqeuLiOuLpC4nKTtcclxuICAvLyAgICAgdmFyIGlkID0gJHN0YXRlUGFyYW1zLmlkO1xyXG4gIC8vICAgICAkaHR0cC5kZWxldGUoJy9hcGkvb3Bpbmlvbi8nK2lkLHtcclxuICAvLyAgICAgICAgIGJvYXJkX2lkOmlkXHJcbiAgLy8gICAgIH0pLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xyXG4gIC8vICAgICAgICAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gIC8vICAgICB9KTtcclxuICAvLyAgIH1lbHNlIHtcclxuICAvLyAgICAgY29uc29sZS5sb2coJ+yCrOyaqeyekOqwgCDsoovslYTsmpTrpbwg64iM66CA7Iq164uI64ukLicpO1xyXG4gIC8vICAgICB2YXIgYm9hcmRfaWQgPSAkc3RhdGVQYXJhbXMuaWQ7XHJcbiAgLy8gICAgICRodHRwLnBvc3QoJy9hcGkvb3Bpbmlvbi8nLHtcclxuICAvLyAgICAgICAgIGJvYXJkX2lkOmJvYXJkX2lkXHJcbiAgLy8gICAgIH0pLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xyXG4gIC8vICAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gIC8vICAgICB9KTtcclxuICAvLyAgIH1cclxuICAvLyB9O1xyXG5cclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uZGlyZWN0aXZlKCdmaWxlTW9kZWwnLGZ1bmN0aW9uKCRwYXJzZSl7XHJcbiAgcmV0dXJuIHtcclxuICAgIHJlc3RyaWN0OiAnQScsXHJcbiAgICBsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlbWVudCwgYXR0cnMpe1xyXG4gICAgICB2YXIgcGFyc2VkRmlsZSA9ICRwYXJzZShhdHRycy5maWxlTW9kZWwpO1xyXG4gICAgICB2YXIgcGFyc2VkZmlsZVNldHRlciA9IHBhcnNlZEZpbGUuYXNzaWduO1xyXG5cclxuICAgICAgZWxlbWVudC5iaW5kKCdjaGFuZ2UnLGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgc2NvcGUuJGFwcGx5KGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICBwYXJzZWRmaWxlU2V0dGVyKHNjb3BlLCBlbGVtZW50WzBdLmZpbGVzWzBdKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uZGlyZWN0aXZlKCdtYXRjaCcsZnVuY3Rpb24oKXtcclxuICByZXR1cm4ge1xyXG4gICAgcmVzdHJpY3Q6ICdBJyxcclxuICAgIGNvbnRyb2xsZXI6ZnVuY3Rpb24oJHNjb3BlKXtcclxuICAgICAgJHNjb3BlLmRvQ29uZmlybSA9IGZ1bmN0aW9uKHZhbHVlcyl7XHJcblxyXG4gICAgICAgICRzY29wZS5jb25maXJtZWQgPSBmYWxzZTtcclxuICAgICAgICB2YWx1ZXMuZm9yRWFjaChmdW5jdGlvbihlbGUpe1xyXG4gICAgICAgICAgaWYoJHNjb3BlLmNvbmZpcm0gPT0gZWxlKXtcclxuICAgICAgICAgICAgJHNjb3BlLmNvbmZpcm1lZCA9IHRydWU7XHJcbiAgICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgICRzY29wZS5jb25maXJtZWQgPSBmYWxzZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfTtcclxuICAgIH0sXHJcblxyXG4gICAgbGluazpmdW5jdGlvbihzY29wZSwgZWxlbWVudCwgYXR0cnMpe1xyXG4gICAgICBhdHRycy4kb2JzZXJ2ZSgnbWF0Y2gnLCBmdW5jdGlvbigpe1xyXG4gICAgICAgIHNjb3BlLm1hdGNoZXMgPSBKU09OLnBhcnNlKGF0dHJzLm1hdGNoKTtcclxuICAgICAgICBzY29wZS5kb0NvbmZpcm0oc2NvcGUubWF0Y2hlcyk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgc2NvcGUuJHdhdGNoKCdjb25maXJtJywgZnVuY3Rpb24oKXtcclxuICAgICAgICBzY29wZS5tYXRjaGVzID0gSlNPTi5wYXJzZShhdHRycy5tYXRjaCk7XHJcbiAgICAgICAgc2NvcGUuZG9Db25maXJtKHNjb3BlLm1hdGNoZXMpO1xyXG5cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcnRpc3RTZXJ2aWNlcycsW10pXHJcbi5mYWN0b3J5KCdBcnRpc3QnLCBmdW5jdGlvbigkaHR0cCl7XHJcbiAgYXJ0aXN0RmFjdG9yeSA9IHt9O1xyXG5cclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PSBBcnRpc3QgQ2F0ZWdvcnkgPT09PT09PT09PT09PT09PT09PT09PT09PT09IC8vXHJcbiAgYXJ0aXN0RmFjdG9yeS5yZWFkQXJ0aXN0VGFwID0gZnVuY3Rpb24oKXtcclxuICAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL2FydGlzdE1lbnUnKTtcclxuICB9O1xyXG5cclxuICBhcnRpc3RGYWN0b3J5LnJlYWRBcnRpc3RzID0gZnVuY3Rpb24odXNlcl90eXBlKXtcclxuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvYXJ0aXN0TWVudS8nK3VzZXJfdHlwZSk7XHJcbiAgfTtcclxuXHJcbiAgYXJ0aXN0RmFjdG9yeS5yZWFkQXJ0aXN0ID0gZnVuY3Rpb24oYXJ0aXN0X2lkKXtcclxuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvYXJ0aXN0LycrYXJ0aXN0X2lkKTtcclxuICB9O1xyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gLy9cclxuXHJcbi8vIEFydGlzdC5jcmVhdGVQaG90byhwaG90b0RhdGEpXHJcbiAgYXJ0aXN0RmFjdG9yeS5jcmVhdGVBcmlzdFBob3RvID0gZnVuY3Rpb24ocGhvdG9EYXRhKXtcclxuICAgIHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL2FydGlzdFByb2ZpbGVzJywgcGhvdG9EYXRhKTtcclxuICB9O1xyXG5cclxuLy8gQXJ0aXN0LnVwZGF0ZUFyaXN0SW5mbyhhcnRpc3REYXRhKVxyXG4gIGFydGlzdEZhY3RvcnkudXBkYXRlQXJpc3RQcm9maWxlID0gZnVuY3Rpb24oYXJ0aXN0RGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAucHV0KCcvYXBpL2FydGlzdFByb2ZpbGVzJywgYXJ0aXN0RGF0YSk7XHJcbiAgfTtcclxuXHJcbi8vIEFydGlzdC5yZWFkQXJ0aXN0UHJvZmlsZSh1c2VyX2lkKVxyXG4gIGFydGlzdEZhY3RvcnkucmVhZEFydGlzdFByb2ZpbGUgPSBmdW5jdGlvbihhcnRpc3RfaWQpe1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9hcnRpc3RQcm9maWxlcy8nK2FydGlzdF9pZCk7XHJcbiAgfTtcclxuXHJcbi8vXHJcbiAgYXJ0aXN0RmFjdG9yeS5yZWFkQXJpc3RQaG90byA9IGZ1bmN0aW9uKGFydGlzdF9pZCl7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL2FydGlzdFBob3Rvcy8nK2FydGlzdF9pZCk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIGFydGlzdEZhY3Rvcnk7XHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXV0aFNlcnZpY2VzJyxbXSlcclxuXHJcbi5mYWN0b3J5KCdBdXRoJywgZnVuY3Rpb24oJGh0dHAsIEF1dGhUb2tlbil7XHJcbiAgICB2YXIgYXV0aEZhY3RvcnkgPSB7fTtcclxuXHJcblxyXG4vLyBBdXRoLmdldFVzZXIoKTtcclxuICAgIGF1dGhGYWN0b3J5LmdldFVzZXIgPSBmdW5jdGlvbigpe1xyXG4gICAgICBpZihBdXRoVG9rZW4uZ2V0VG9rZW4oKSl7XHJcbiAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvbWUnKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAkcS5yZWplY3Qoe21lc3NhZ2U6J1VzZXIgaGFzIG5vIHRva2VuJ30pO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuLy8gQXV0aC5sb2dpbihsb2dpbkRhdGEpO1xyXG4gICAgYXV0aEZhY3RvcnkubG9naW4gPSBmdW5jdGlvbihsb2dpbkRhdGEpe1xyXG4gICAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9hdXRoZW50aWNhdGUnLCBsb2dpbkRhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgQXV0aFRva2VuLnNldFRva2VuKGRhdGEuZGF0YS50b2tlbik7XHJcbiAgICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbi8vIEF1dGguaXNMb2dnZWRJbigpO1xyXG4gICAgYXV0aEZhY3RvcnkuaXNMb2dnZWRJbiA9IGZ1bmN0aW9uKCl7XHJcbiAgICAgIGlmKEF1dGhUb2tlbi5nZXRUb2tlbigpKXtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4vLyBBdXRoLmxvZ291dCgpO1xyXG4gICAgYXV0aEZhY3RvcnkubG9nb3V0ID0gZnVuY3Rpb24oKXtcclxuICAgICAgQXV0aFRva2VuLnNldFRva2VuKCk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIGF1dGhGYWN0b3J5O1xyXG59KVxyXG5cclxuLmZhY3RvcnkoJ0F1dGhUb2tlbicsIGZ1bmN0aW9uKCR3aW5kb3cpe1xyXG4gIHZhciBhdXRoVG9rZW5GYWN0b3J5ID0ge307XHJcblxyXG4gIC8vIEF1dGhUb2tlbi5zZXRUb2tlbih0b2tlbik7XHJcbiAgYXV0aFRva2VuRmFjdG9yeS5zZXRUb2tlbiA9IGZ1bmN0aW9uKHRva2VuKXtcclxuICAgIGlmKHRva2VuKXtcclxuICAgICAgJHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndG9rZW4nLCB0b2tlbik7XHJcbiAgICB9ZWxzZSB7XHJcbiAgICAgICR3aW5kb3cubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3Rva2VuJywgdG9rZW4pO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4vLyBBdXRoVG9rZW4uZ2V0VG9rZW4oKTtcclxuICBhdXRoVG9rZW5GYWN0b3J5LmdldFRva2VuID0gZnVuY3Rpb24oKXtcclxuICAgIHJldHVybiAkd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpO1xyXG4gIH07XHJcbiAgcmV0dXJuIGF1dGhUb2tlbkZhY3Rvcnk7XHJcbn0pXHJcblxyXG4uZmFjdG9yeSgnQXV0aEludGVyY2VwdG9ycycsIGZ1bmN0aW9uKEF1dGhUb2tlbil7XHJcbiAgdmFyIGF1dGhJbnRlcmNlcHRvcnNGYWN0b3J5ID0ge307XHJcblxyXG4gIGF1dGhJbnRlcmNlcHRvcnNGYWN0b3J5LnJlcXVlc3QgPSBmdW5jdGlvbihjb25maWcpe1xyXG4gICAgdmFyIHRva2VuID0gQXV0aFRva2VuLmdldFRva2VuKCk7XHJcblxyXG4gICAgaWYodG9rZW4pIGNvbmZpZy5oZWFkZXJzWyd4LWFjY2Vzcy10b2tlbiddID0gdG9rZW47XHJcblxyXG4gICAgcmV0dXJuIGNvbmZpZztcclxuICB9O1xyXG4gIHJldHVybiBhdXRoSW50ZXJjZXB0b3JzRmFjdG9yeTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdib2FyZFNlcnZpY2VzJyxbXSlcclxuLmZhY3RvcnkoJ0JvYXJkJywgZnVuY3Rpb24oJGh0dHApe1xyXG4gIGJvYXJkRmFjdG9yeSA9IHt9O1xyXG5cclxuICBib2FyZEZhY3RvcnkucmVhZEJvYXJkVGFwID0gZnVuY3Rpb24oKXtcclxuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvYm9hcmRNZW51Jyk7XHJcbiAgfTtcclxuXHJcbiAgYm9hcmRGYWN0b3J5LnJlYWRCb2FyZHMgPSBmdW5jdGlvbihib2FyZF90eXBlKXtcclxuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvYm9hcmRNZW51LycrYm9hcmRfdHlwZSk7XHJcbiAgfTtcclxuXHJcbiAgYm9hcmRGYWN0b3J5LnJlYWRCb2FyZCA9IGZ1bmN0aW9uKGJvYXJkX2lkKXtcclxuICAgIHJldHVybiAkaHR0cC5nZXQoJ2FwaS9ib2FyZC8nK2JvYXJkX2lkKTtcclxuICB9O1xyXG5cclxuICBib2FyZEZhY3RvcnkuY3JlYXRlQm9hcmQgPSBmdW5jdGlvbihib2FyZERhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvYm9hcmRNZW51Jyxib2FyZERhdGEpO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiBib2FyZEZhY3Rvcnk7XHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnY29tbWVudFNlcnZpY2VzJyxbXSlcclxuLmZhY3RvcnkoJ0NvbW1lbnQnLCBmdW5jdGlvbigkaHR0cCl7XHJcbiAgY29tbWVudEZhY3RvcnkgPSB7fTtcclxuXHJcbi8vIEdhbGxlcnkucmVhZFBob3RvRGF0YSh1c2VyX2lkKVxyXG4gIGNvbW1lbnRGYWN0b3J5LmNyZWF0ZUNvbW1lbnQgPSBmdW5jdGlvbihjb21tZW50RGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9jb21tZW50Jyxjb21tZW50RGF0YSk7XHJcbiAgfTtcclxuXHJcbiAgY29tbWVudEZhY3RvcnkucmVhZENvbW1lbnQgPSBmdW5jdGlvbihwaG90b19pZCl7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL2NvbW1lbnQvJytwaG90b19pZCk7XHJcbiAgfTtcclxuXHJcbiAgY29tbWVudEZhY3RvcnkucmVhZEJvYXJkQ29tbWVudCA9IGZ1bmN0aW9uKGJvYXJkX2lkKXtcclxuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvY29tbWVudEJvYXJkLycrYm9hcmRfaWQpO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiBjb21tZW50RmFjdG9yeTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdnYWxsZXJ5U2VydmljZXMnLFtdKVxyXG4uZmFjdG9yeSgnR2FsbGVyeScsIGZ1bmN0aW9uKCRodHRwKXtcclxuICBnYWxsZXJ5RmFjdG9yeSA9IHt9O1xyXG5cclxuLy8gR2FsbGVyeS5yZWFkR2FsbGVyeVRhcCgpXHJcbiAgZ2FsbGVyeUZhY3RvcnkucmVhZEdhbGxlcnlUYXAgPSBmdW5jdGlvbigpe1xyXG4gICAgcmV0dXJuICAkaHR0cC5nZXQoJy9hcGkvZ2FsbGVyeU1lbnUnKTtcclxuICB9O1xyXG5cclxuLy8gR2FsbGVyeS5yZWFkUGhvdG9zKHBob3RvX3R5cGUpO1xyXG4gIGdhbGxlcnlGYWN0b3J5LnJlYWRQaG90b3MgPSBmdW5jdGlvbihwaG90b190eXBlKXtcclxuICAgIHJldHVybiAgJGh0dHAuZ2V0KCcvYXBpL2dhbGxlcnlNZW51LycrcGhvdG9fdHlwZSk7XHJcblxyXG4gIH07XHJcbi8vIEdhbGxlcnkucmVhZFBob3RvRGF0YSh1c2VyX2lkKVxyXG4gIGdhbGxlcnlGYWN0b3J5LnJlYWRQaG90b0RhdGEgPSBmdW5jdGlvbihwaG90b19pZCl7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL2dhbGxlcnkvJytwaG90b19pZCk7XHJcbiAgfTtcclxuXHJcbiAgZ2FsbGVyeUZhY3RvcnkucmVhZE1vcmVQaG90byA9IGZ1bmN0aW9uKHBob3RvX3R5cGUpe1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9nYWxsZXJ5TWVudS8nKyBwaG90b190eXBlKTtcclxuICB9O1xyXG5cclxuXHJcbiAgcmV0dXJuIGdhbGxlcnlGYWN0b3J5O1xyXG59KTtcclxuIiwiYW5ndWxhci5tb2R1bGUoJ3VzZXJTZXJ2aWNlcycsW10pXHJcbi5mYWN0b3J5KCdVc2VyJywgZnVuY3Rpb24oJGh0dHApe1xyXG4gIHVzZXJGYWN0b3J5ID0ge307XHJcblxyXG4vLyBVc2VyLmNyZWF0ZShyZWdEYXRhKVxyXG4gIHVzZXJGYWN0b3J5LmNyZWF0ZSA9IGZ1bmN0aW9uKHJlZ0RhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvdXNlcnMnLCByZWdEYXRhKTtcclxuICB9O1xyXG5cclxuLy8gVXNlci5hY3RpdmVBY2NvdW50KHRva2VuKTtcclxuICB1c2VyRmFjdG9yeS5hY3RpdmVBY2NvdW50ID0gZnVuY3Rpb24odG9rZW4pe1xyXG4gICAgcmV0dXJuICRodHRwLnB1dCgnL2FwaS9hY3RpdmF0ZS8nK3Rva2VuKTtcclxuICB9O1xyXG5cclxuLy8gVXNlci5jaGVja0NyZWRlbnRpYWxzKGxvZ2luRGF0YSk7XHJcbiAgdXNlckZhY3RvcnkuY2hlY2tDcmVkZW50aWFscyA9IGZ1bmN0aW9uKGxvZ2luRGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9yZXNlbmQnLCBsb2dpbkRhdGEpO1xyXG4gIH07XHJcblxyXG4vLyBVc2VyLnJlc2VuZExpbmsodXNlcm5hbWUpXHJcbiAgdXNlckZhY3RvcnkucmVzZW5kTGluayA9IGZ1bmN0aW9uKHVzZXJuYW1lKXtcclxuICAgIHJldHVybiAkaHR0cC5wdXQoJy9hcGkvcmVzZW5kJywgdXNlcm5hbWUpO1xyXG4gIH07XHJcblxyXG4vLyBVc2VyLnNlbmRVc2VybmFtZSh1c2VyRGF0YSk7XHJcbiAgdXNlckZhY3Rvcnkuc2VuZFVzZXJuYW1lID0gZnVuY3Rpb24odXNlckRhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9yZXNldHVzZXJuYW1lLycrdXNlckRhdGEpO1xyXG4gIH07XHJcblxyXG4vLyBVc2VyLnNlbmRQYXNzd29yZChyZXNldERhdGEpO1xyXG4gIHVzZXJGYWN0b3J5LnNlbmRQYXNzd29yZCA9IGZ1bmN0aW9uKHJlc2V0RGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAucHV0KCcvYXBpL3Jlc2V0cGFzc3dvcmQnLCByZXNldERhdGEpO1xyXG4gIH07XHJcblxyXG4vLyBVc2VyLnJlc2V0UGFzc3dvcmQodG9rZW4pO1xyXG4gIHVzZXJGYWN0b3J5LnJlc2V0UGFzc3dvcmQgPSBmdW5jdGlvbih0b2tlbil7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3Jlc2V0cGFzc3dvcmQvJyt0b2tlbik7XHJcbiAgfTtcclxuXHJcblxyXG4vLyBVc2VyLnNhdmVQYXNzd29yZChyZWdEYXRhKVxyXG4gIHVzZXJGYWN0b3J5LnNhdmVQYXNzd29yZCA9IGZ1bmN0aW9uKHJlZ0RhdGEpe1xyXG4gICAgcmV0dXJuICRodHRwLnB1dCgnL2FwaS9zYXZlcGFzc3dvcmQnLCByZWdEYXRhKTtcclxuICB9O1xyXG5cclxuLy8gIFVzZXIucmVuZXdTZXNzaW9uKHVzZXJuYW1lKVxyXG4gIHVzZXJGYWN0b3J5LnJlbmV3U2Vzc2lvbiA9IGZ1bmN0aW9uKHVzZXJuYW1lKXtcclxuICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvcmVuZXdUb2tlbi8nKyB1c2VybmFtZSk7XHJcbiAgfTtcclxuXHJcbi8vIFVzZXIucmVzZXRQZXJtaXNzaW9uKHVzZXJEYXRhKVxyXG4gIHVzZXJGYWN0b3J5LnJlc2V0UGVybWlzc2lvbiA9IGZ1bmN0aW9uKHVzZXJEYXRhKXtcclxuICAgIHJldHVybiAkaHR0cC5wdXQoJy9hcGkvdXNlcnMvJywgdXNlckRhdGEpO1xyXG4gIH07XHJcblxyXG4vLyBVc2VyLmNoZWNrUGVybWlzc2lvbih1c2VyRGF0YSlcclxuICB1c2VyRmFjdG9yeS5jaGVja1Blcm1pc3Npb24gPSBmdW5jdGlvbih1c2VybmFtZSl7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3VzZXJzLycrdXNlcm5hbWUpO1xyXG4gIH07XHJcblxyXG5cclxuLy8gcmVzZXQgLyBjaGVjayAvIHJlbmV3IC8gc2F2ZSAvIHNlbmQgLy8gcmVzZW5kXHJcblxyXG4vLyBDcmVhdGUgLy8gcmVhZCAvLyB1cGRhdGUgLy8gZGVsZXRlIC8vXHJcblxyXG4vLyBVc2VyLnJlYWRQcm9maWxlcyh1c2VybmFtZSlcclxuICB1c2VyRmFjdG9yeS5yZWFkUHJvZmlsZXMgPSBmdW5jdGlvbih1c2VybmFtZSl7XHJcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3VzZXJQcm9maWxlcy8nK3VzZXJuYW1lKTtcclxuICB9O1xyXG5cclxuLy8gVXNlci51cGRhdGVQcm9maWxlcyh1cGRhdGVEYXRhKVxyXG4gIHVzZXJGYWN0b3J5LnVwZGF0ZVByb2ZpbGVzID0gZnVuY3Rpb24odXBkYXRlRGF0YSl7XHJcbiAgICByZXR1cm4gJGh0dHAucHV0KCcvYXBpL3VzZXJQcm9maWxlcycsIHVwZGF0ZURhdGEpO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiB1c2VyRmFjdG9yeTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcnRpc3RDb250cm9sbGVycycsWyd1c2VyU2VydmljZXMnLCAnYXJ0aXN0U2VydmljZXMnXSlcclxuLmNvbnRyb2xsZXIoJ2FydGlzdFRhcEN0cmwnLCBmdW5jdGlvbigkc2NvcGUsIEFydGlzdCl7XHJcbiAgLy8g7KCE7LK0IOuplOuJtCDqsIDsoLjsmKTquLBcclxuICBBcnRpc3QucmVhZEFydGlzdFRhcCgpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICRzY29wZS5oZWFkZXJzID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgfVxyXG4gIH0pO1xyXG59KVxyXG5cclxuLmNvbnRyb2xsZXIoJ2FydGlzdHNDdHJsJywgZnVuY3Rpb24gKCRzdGF0ZVBhcmFtcywgQXJ0aXN0KSB7XHJcbiAgICB2YXIgYXBwID0gdGhpcztcclxuICAgIHZhciB1c2VyX3R5cGUgPSAkc3RhdGVQYXJhbXMuY29kZTtcclxuXHJcbiAgICBhcHAuZGF0YSA9IHtcclxuICAgICBhdmFpbGFibGVPcHRpb25zOiBbXHJcbiAgICAgICB7c29ydDogJy1jcmVhdGVkJywgbmFtZTogJ+y1nOyLoOyInCd9XHJcbiAgICAgXSxcclxuICAgICBzZWxlY3RlZE9wdGlvbjogIHtzb3J0OiAnLWNyZWF0ZWQnLCBuYW1lOiAn7LWc7Iug7IicJ30gLy9UaGlzIHNldHMgdGhlIGRlZmF1bHQgdmFsdWUgb2YgdGhlIHNlbGVjdCBpbiB0aGUgdWlcclxuICAgICB9O1xyXG5cclxuICAgIEFydGlzdC5yZWFkQXJ0aXN0cyh1c2VyX3R5cGUpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICBhcHAuYXJ0aXN0RGF0YXMgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxufSlcclxuXHJcbi5jb250cm9sbGVyKCd1cGxvYWRDdHJsJywgZnVuY3Rpb24gKCRodHRwLCAkdGltZW91dCwgJHNjb3BlLCBBcnRpc3QsICRzdGF0ZSkge1xyXG4gICAgdmFyIGFwcCA9IHRoaXM7XHJcblxyXG4gICAgYXBwLmRhdGEgPSB7XHJcbiAgICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4gICAgICAge2lkOiAnMCcsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9LFxyXG4gICAgICAge2lkOiAnMScsIG5hbWU6ICfrtpMg6riA7JSoJ30sXHJcbiAgICAgICB7aWQ6ICcyJywgbmFtZTogJ+2OnCDquIDslKgnfSxcclxuICAgICAgIHtpZDogJzMnLCBuYW1lOiAn66+467aE66WYJ31cclxuICAgICBdLFxyXG4gICAgIHNlbGVjdGVkT3B0aW9uOiB7aWQ6ICcwJywgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30gLy9UaGlzIHNldHMgdGhlIGRlZmF1bHQgdmFsdWUgb2YgdGhlIHNlbGVjdCBpbiB0aGUgdWlcclxuICAgICB9O1xyXG4gICAgLy8g7YyM7J287J2YIOqyveuhnOunjCDsoIDsnqXtlZjquLBcclxuICAgIHRoaXMuZmlsZSA9IHt9O1xyXG5cclxuICAgIHRoaXMubWFpblBob3RvQ2hhbmdlZCA9IGZ1bmN0aW9uKGZpbGVzKSB7XHJcbiAgICAgICAgICBpZiAoZmlsZXMubGVuZ3RoID4gMCAmJiBmaWxlc1swXS5uYW1lLm1hdGNoKC9cXC4ocG5nfGpwZWd8anBnKSQvKSkge1xyXG4gICAgICAgICAgICAgIHZhciBmaWxlID0gZmlsZXNbMF07XHJcbiAgICAgICAgICAgICAgdmFyIGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xyXG4gICAgICAgICAgICAgIGZpbGVSZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKTtcclxuICAgICAgICAgICAgICBmaWxlUmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBhcHAubWFpblRodW1ibmFpbCA9IHt9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgYXBwLm1haW5UaHVtYm5haWwuZGF0YVVybCA9IGUudGFyZ2V0LnJlc3VsdDtcclxuICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgYXBwLm1haW5UaHVtYm5haWwgPSB7fTtcclxuICAgICAgICAgIH1cclxuICAgICAgfTtcclxuXHJcbiAgICB0aGlzLnJlYWRQaG90byA9IGZ1bmN0aW9uKCl7XHJcbiAgICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICAkc2NvcGUuJGVtaXQoJ0xPQUQnKTtcclxuICAgICAgdmFyIGZkID0gbmV3IEZvcm1EYXRhKCk7XHJcbiAgICAgIGZkLmFwcGVuZCgnbXlmaWxlJywgYXBwLmZpbGUudXBsb2FkKTtcclxuICAgICAgICAkaHR0cC5wb3N0KCcvYXBpL3VwbG9hZFRlbXAvJywgZmQse1xyXG4gICAgICAgIHRyYW5zZm9ybVJlcXVlc3Q6IGFuZ3VsYXIuaWRlbnRpdHksXHJcbiAgICAgICAgaGVhZGVyczogeydDb250ZW50LVR5cGUnOiB1bmRlZmluZWR9XHJcbiAgICAgIH0pLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgJHNjb3BlLiRlbWl0KCdVTkxPQUQnKTtcclxuICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgIGFwcC5tYWluSW1hZ2VQYXRoID0gZGF0YS5kYXRhLnBob3RvX3BhdGg7XHJcbiAgICAgICAgICBhcHAuZmlsZSA9IHt9O1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgIGFwcC5maWxlID0ge307XHJcbiAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9O1xyXG5cclxuLy8g7J6R6rCAIOyeke2SiCDsl4XroZzrk5xcclxuICAgICAgdGhpcy5jcmVhdGVQaG90byA9IGZ1bmN0aW9uKHVwbG9hZERhdGEpe1xyXG4gICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgICAgIGlmKCF1cGxvYWREYXRhKXtcclxuICAgICAgICAgIGFwcC5lcnJvck1zZyA9ICfruYjsubjsnYQg66qo65GQIOyeheugpe2VtOyjvOyEuOyalC4nO1xyXG4gICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBmYWxzZTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgaWYoYXBwLnVwbG9hZERhdGEudGl0bGUgPT09IHVuZGVmaW5lZCB8fCBhcHAudXBsb2FkRGF0YS50aXRsZSA9PT0gbnVsbCB8fCBhcHAudXBsb2FkRGF0YS50aXRsZSA9PT0gJycpIHtcclxuICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gJ+yeke2SiOydmCDsoJzrqqnsnYQg7J6F66Cl7ZW07KO87IS47JqULic7XHJcbiAgICAgICAgICB9IGVsc2UgaWYoYXBwLnVwbG9hZERhdGEuZGV0YWlsID09PSB1bmRlZmluZWQgfHwgYXBwLnVwbG9hZERhdGEuZGV0YWlsID09PSBudWxsIHx8IGFwcC51cGxvYWREYXRhLmRldGFpbCA9PT0gJycpIHtcclxuICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gJ+yeke2SiOydmCDshKTrqoXsnYQg7J6F66Cl7ZW07KO87IS47JqULic7XHJcbiAgICAgICAgICB9IGVsc2UgaWYoYXBwLm1haW5JbWFnZVBhdGggPT09IHVuZGVmaW5lZCB8fCBhcHAubWFpbkltYWdlUGF0aCA9PT0gIG51bGwgfHwgYXBwLm1haW5JbWFnZVBhdGggPT09ICcnKXtcclxuICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gJ+yeke2SiCDsnbTrr7jsp4Drpbwg7ISg7YOd7ZW07KO87IS47JqULic7XHJcbiAgICAgICAgICB9IGVsc2UgaWYoYXBwLmRhdGEuc2VsZWN0ZWRPcHRpb24uaWQgPT09ICcwJyl7XHJcbiAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9ICfsnpHtkojsnZgg7KKF66WY66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nO1xyXG4gICAgICAgICAgfSBlbHNlIHtcblxyXG4gICAgICAgICAgICBhcHAudXBsb2FkRGF0YSA9IHVwbG9hZERhdGE7XHJcbiAgICAgICAgICAgIGFwcC51cGxvYWREYXRhLnVzZXJfaWQgPSAkc2NvcGUubWFpbi51c2VyLnVzZXJfaWQ7XHJcbiAgICAgICAgICAgIGFwcC51cGxvYWREYXRhLnBob3RvX3R5cGUgPSBhcHAuZGF0YS5zZWxlY3RlZE9wdGlvbi5pZDtcclxuICAgICAgICAgICAgYXBwLnVwbG9hZERhdGEucGhvdG9fcGF0aCA9IGFwcC5tYWluSW1hZ2VQYXRoO1xyXG5cclxuICAgICAgICAgICAgQXJ0aXN0LmNyZWF0ZUFyaXN0UGhvdG8oYXBwLnVwbG9hZERhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAkdGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICAgICAgICAgICAgfSwgMjAwMCk7XHJcbiAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG5cclxuXHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9O1xyXG5cclxufSlcclxuXHJcbi5jb250cm9sbGVyKCdhcnRpc3RQcm9maWxlQ3RybCcsIGZ1bmN0aW9uICgkdGltZW91dCwgQXJ0aXN0LCAkc3RhdGUsICRzY29wZSkge1xyXG5cclxuICAgIHZhciBhcHAgPSB0aGlzO1xyXG4gICAgdmFyIHVzZXJfaWQgPSAkc2NvcGUubWFpbi51c2VyLnVzZXJfaWQ7XHJcblxyXG4gICAgYXBwLmRhdGEgPSB7XHJcbiAgICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4gICAgICAge2lkOiAnMCcsIG5hbWU6ICfsubTthYzqs6Drpqzrpbwg7ISg7YOd7ZW07KO87IS47JqULid9LFxyXG4gICAgICAge2lkOiAnMScsIG5hbWU6ICfrtpMg6riA7JSoJ30sXHJcbiAgICAgICB7aWQ6ICcyJywgbmFtZTogJ+2OnCDquIDslKgnfSxcclxuICAgICAgIHtpZDogJzMnLCBuYW1lOiAn66+467aE66WYJ31cclxuICAgICBdLFxyXG4gICAgIHNlbGVjdGVkT3B0aW9uOiB7aWQ6ICcwJywgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30gLy9UaGlzIHNldHMgdGhlIGRlZmF1bHQgdmFsdWUgb2YgdGhlIHNlbGVjdCBpbiB0aGUgdWlcclxuICAgICB9O1xyXG5cclxuXHJcbiAgICAgQXJ0aXN0LnJlYWRBcnRpc3RQcm9maWxlKHVzZXJfaWQpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgIGFwcC5hcnRpc3REYXRhID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgfVxyXG4gICAgIH0pO1xyXG5cclxuXHJcbiAgLy8g7J6R6rCAIO2UhOuhnO2VhCDsg53shLFcclxuICAgICAgdGhpcy51cGRhdGVBcmlzdFByb2ZpbGUgPSBmdW5jdGlvbihhcnRpc3REYXRhKXtcbiAgICAgICAgY29uc29sZS5sb2coXCLsnpHrj5kg7KSRXCIpO1xuICAgICAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcbiAgICAgICAgaWYoIWFydGlzdERhdGEpe1xuICAgICAgICAgIGFwcC5lcnJvck1zZyA9ICftlYTsiJjquLDsnqzsgqztla3snYQg7J6F66Cl7ZW07KO87IS47JqULic7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYoYXBwLmFydGlzdERhdGEuc2hvcnRfaW5mbyA9PT0gdW5kZWZpbmVkIHx8IGFwcC5hcnRpc3REYXRhLnNob3J0X2luZm8gPT09IG51bGwgfHwgYXBwLmFydGlzdERhdGEuc2hvcnRfaW5mbyA9PT0gJycpIHtcbiAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9ICftlZwg7KSEIOyGjOqwnOulvCDsnoXroKXtlbTso7zshLjsmpQuJztcbiAgICAgICAgICB9IGVsc2UgaWYoYXBwLmFydGlzdERhdGEuZGV0YWlsX2luZm8gPT09IHVuZGVmaW5lZCB8fCBhcHAuYXJ0aXN0RGF0YS5kZXRhaWxfaW5mbyA9PT0gbnVsbCB8fCBhcHAuYXJ0aXN0RGF0YS5kZXRhaWxfaW5mbyA9PT0gJycpIHtcbiAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9ICfsg4HshLgg7IaM6rCc66W8IOyeheugpe2VtOyjvOyEuOyalC4nO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBhcHAuYXJ0aXN0RGF0YSA9IGFydGlzdERhdGE7XG4gICAgICAgICAgICBhcHAuYXJ0aXN0RGF0YS51c2VyX2lkID0gICRzY29wZS5tYWluLnVzZXIudXNlcl9pZDtcbiAgICAgICAgICAgIC8vIGFwcC5hcnRpc3REYXRhLnVzZXJfdHlwZSA9ICBhcHAuZGF0YS5zZWxlY3RlZE9wdGlvbi5pZDtcblxuICAgICAgICAgICAgQXJ0aXN0LnVwZGF0ZUFyaXN0UHJvZmlsZShhcHAuYXJ0aXN0RGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcbiAgICAgICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xuICAgICAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XG4gICAgICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAkdGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICRzdGF0ZS5yZWxvYWQoKTtcbiAgICAgICAgICAgICAgICB9LCAyMDAwKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBhcHAuZXJyb3JNc2cgPSAn7Jis67CU66W07KeAIOyViuydgCDqsJLsnbQg7J6F66Cl65CY7JeI7Iq164uI64ukLic7XG5cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH07XHJcblxyXG59KVxyXG5cclxuLy8g7J6R6rCAIOyekOyLoOydmCDtlITroZztlYRcclxuLmNvbnRyb2xsZXIoJ2FuQXJ0aXN0UGhvdG9DdHJsJywgZnVuY3Rpb24gKEFydGlzdCwgJHN0YXRlUGFyYW1zLCAgJHNjb3BlKSB7XHJcbiAgICB2YXIgYXBwID0gdGhpcztcclxuICAgIHZhciB1c2VyX2lkID0gJHNjb3BlLm1haW4udXNlci51c2VyX2lkO1xyXG5cclxuICAgICAgQXJ0aXN0LnJlYWRBcnRpc3RQcm9maWxlKHVzZXJfaWQpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgYXBwLmFydGlzdERhdGEgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgQXJ0aXN0LnJlYWRBcmlzdFBob3RvKHVzZXJfaWQpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgYXBwLmFydGlzdFBob3RvcyA9IGRhdGEuZGF0YS5yZXN1bHQ7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbn0pXHJcblxyXG5cclxuLy8g7Jes65+sIOyekeqwgOuTpOydmCDtlITroZztlYRcclxuLmNvbnRyb2xsZXIoJ2FydGlzdFBob3RvQ3RybCcsIGZ1bmN0aW9uIChBcnRpc3QsICRzdGF0ZVBhcmFtcykge1xyXG4gICAgdmFyIGFwcCA9IHRoaXM7XHJcbiAgICB2YXIgYXJ0aXN0X2lkID0gJHN0YXRlUGFyYW1zLmFydGlzdF9pZDtcclxuXHJcbiAgICAgIEFydGlzdC5yZWFkQXJ0aXN0UHJvZmlsZShhcnRpc3RfaWQpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgYXBwLmFydGlzdERhdGEgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgQXJ0aXN0LnJlYWRBcmlzdFBob3RvKGFydGlzdF9pZCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICBhcHAuYXJ0aXN0UGhvdG9zID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdib2FyZENvbnRyb2xsZXJzJyxbJ2JvYXJkU2VydmljZXMnXSlcbi5maWx0ZXIoJ3RvX3RydXN0ZWQnLCBbJyRzY2UnLCBmdW5jdGlvbigkc2NlKXtcclxuICAgIHJldHVybiBmdW5jdGlvbih0ZXh0KSB7XHJcbiAgICAgICAgcmV0dXJuICRzY2UudHJ1c3RBc0h0bWwodGV4dCk7XHJcbiAgICB9O1xyXG59XSlcblxyXG4uY29udHJvbGxlcignYm9hcmRUYXBDdHJsJywgZnVuY3Rpb24oQm9hcmQsICRzY29wZSl7XHJcbiAgdmFyIGFwcCA9IHRoaXM7XHJcbiAgQm9hcmQucmVhZEJvYXJkVGFwKCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICRzY29wZS5oZWFkZXJzID0gZGF0YS5kYXRhO1xyXG4gIH0pO1xyXG59KVxyXG5cclxuLmNvbnRyb2xsZXIoJ2JvYXJkc0N0cmwnLCBmdW5jdGlvbigkc3RhdGVQYXJhbXMsIEJvYXJkLCAkc2NvcGUsICRzdGF0ZSl7XHJcbiAgdmFyIGFwcCA9IHRoaXM7XHJcbiAgdmFyIGJvYXJkX3R5cGUgPSAkc3RhdGVQYXJhbXMuY29kZTtcclxuXHJcbiAgYXBwLmRhdGEgPSB7XHJcbiAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICB7c29ydDogJy1jcmVhdGVkJywgbmFtZTogJ+y1nOyLoOyInCd9LFxyXG4gICAgIHtzb3J0OiAnLXZpZXcnLCBuYW1lOiAn7KGw7ZqM7IicJ30sXHJcbiAgICAge3NvcnQ6ICctY29tbWVudF9jb3VudCcsIG5hbWU6J+uMk+q4gOyInCd9XHJcbiAgIF0sXHJcbiAgIHNlbGVjdGVkT3B0aW9uOiAge3NvcnQ6ICctY3JlYXRlZCcsIG5hbWU6ICfstZzsi6DsiJwnfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICB9O1xyXG5cclxuICAgQm9hcmQucmVhZEJvYXJkcyhib2FyZF90eXBlKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgIGFwcC5ib2FyZERhdGFzID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgfSk7XHJcblxyXG4gICB0aGlzLmNyZWF0ZUJvYXJkID0gZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICBpZighJHNjb3BlLm1haW4udXNlci51c2VyX2lkKXtcclxuICAgICAgICAgJHNjb3BlLm1haW4ubG9naW4oKTtcclxuICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICRzdGF0ZS5nbyhcImFwcC5ib2FyZC5jcmVhdGVcIik7XHJcbiAgICAgICB9XHJcbiAgfTtcclxuXHJcblxyXG59KVxyXG5cclxuLmNvbnRyb2xsZXIoJ2JvYXJkQ3RybCcsIGZ1bmN0aW9uKCRzdGF0ZVBhcmFtcywgQm9hcmQsICRzY29wZSwgJGh0dHAsICRzdGF0ZSwgJHRpbWVvdXQsIENvbW1lbnQsICR3aW5kb3cpe1xyXG4gICAgLy8g67O065OcIOyVhOydtOuUlCDsoITshqFcclxuICAgIHZhciBhcHAgPSB0aGlzO1xyXG4gICAgdmFyIGJvYXJkX2lkID0gJHN0YXRlUGFyYW1zLmJvYXJkX2lkO1xyXG5cclxuICAgIGFwcC5kYXRhID0ge1xyXG4gICAgIGF2YWlsYWJsZU9wdGlvbnM6IFtcclxuICAgICAgIHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSxcclxuICAgICAgIHtpZDogJzEnLCBuYW1lOiAn6rO17KeA7IKs7ZWtJ30sXHJcbiAgICAgICB7aWQ6ICcyJywgbmFtZTogJ+yeoe2VmeyCrOyghCd9LFxyXG4gICAgICAge2lkOiAnMycsIG5hbWU6ICfsp4jrrLjsgqztla0nfVxyXG4gICAgIF0sXHJcbiAgICAgc2VsZWN0ZWRPcHRpb246IHtpZDogJzAnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4gICAgIH07XHJcblxyXG4gICAgQ29tbWVudC5yZWFkQm9hcmRDb21tZW50KGJvYXJkX2lkKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgYXBwLmNvbW1lbnREYXRhID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgIHRoaXMuY3JlYXRlQ29tbWVudCA9IGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICBpZighJHNjb3BlLm1haW4udXNlci51c2VyX2lkKXtcclxuICAgICAgICAgICAkc2NvcGUubWFpbi5sb2dpbigpO1xyXG4gICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgIGlmKCFkYXRhKXtcclxuICAgICAgICAgICAgICR3aW5kb3cuYWxlcnQoJ+uMk+q4gOydhCDsnoXroKXtlbTso7zshLjsmpQuJyk7XHJcbiAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgIHZhciBjb21tZW50RGF0YSA9IHtcclxuICAgICAgICAgICAgICAgY29tbWVudCA6IGRhdGEsXHJcbiAgICAgICAgICAgICAgIHVzZXJfaWQgOiAkc2NvcGUubWFpbi51c2VyLnVzZXJfaWQsXHJcbiAgICAgICAgICAgICAgIGJvYXJkX2lkIDogYm9hcmRfaWRcclxuICAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAgQ29tbWVudC5jcmVhdGVDb21tZW50KGNvbW1lbnREYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICAgICAgICAgICB9IGVsc2Uge1xyXG5cclxuICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgfVxyXG4gICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuXHJcblxyXG4gICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7XHJcbiAgICAgICQoJyNzdW1tZXJub3RlJykuc3VtbWVybm90ZSh7XHJcbiAgICAgICAgbGFuZzogJ2tvLUtSJywgLy8gZGVmYXVsdDogJ2VuLVVTJ1xyXG4gICAgICAgIGhlaWdodCA6IDEwMCwgLy8g7JeQ65SU7YSw7J2YIOuGkuydtFxyXG4gICAgICAgIG1pbkhlaWdodCA6IG51bGwsXHJcbiAgICAgICAgbWF4SGVpZ2h0IDogbnVsbCxcclxuICAgICAgICBmb2N1cyA6IHRydWUsXHJcbiAgICAgICAgcGxhY2Vob2xkZXI6ICfrjJPquIDsnYAgMSwwMDDsnpDquYzsp4Ag7J6R7ISx7ZWgIOyImCDsnojsnLzrqbAg7KO87KCc7JmAIOustOq0gO2VnCDrjJPquIAsIOyVheyEsSDrjJPquIDsnYAg7IKt7KCc65CgIOyImCDsnojsirXri4jri6QuJyxcclxuICAgICAgICB0b29sYmFyOiBbXHJcbiAgLy8gW2dyb3VwTmFtZSwgW2xpc3Qgb2YgYnV0dG9uXV1cclxuICAgICAgICAgIFsnc3R5bGUnLCBbJ2JvbGQnLCAnaXRhbGljJywgJ3VuZGVybGluZScsICdjbGVhciddXSxcclxuICAgICAgICAgIFsnZm9udCcsIFsnc3RyaWtldGhyb3VnaCcsICdzdXBlcnNjcmlwdCcsICdzdWJzY3JpcHQnXV0sXHJcbiAgICAgICAgICBbJ2ZvbnRzaXplJywgWydmb250c2l6ZSddXSxcclxuICAgICAgICAgIFsnY29sb3InLCBbJ2NvbG9yJ11dLFxyXG4gICAgICAgICAgWydwYXJhJywgWyd1bCcsICdvbCcsICdwYXJhZ3JhcGgnXV0sXHJcbiAgICAgICAgICBbJ2hlaWdodCcsIFsnaGVpZ2h0J11dXHJcbiAgICAgICAgXVxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuY3JlYXRlQm9hcmQgPSBmdW5jdGlvbihyZXNwb25zZSl7XHJcbiAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgICAgIGlmKGFwcC5kYXRhLnNlbGVjdGVkT3B0aW9uLmlkID09PSAnMCcpe1xyXG4gICAgICAgICAgYXBwLmVycm9yTXNnID0gJ+qyjOyLnOq4gOydmCDsooXrpZjrpbwg7ISg7YOd7ZW07KO87IS47JqUJztcclxuICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgIH0gZWxzZSBpZihyZXNwb25zZSA9PT0gdW5kZWZpbmVkIHx8IHJlc3BvbnNlID09PSBudWxsIHx8IHJlc3BvbnNlID09PSAnJyl7XHJcbiAgICAgICAgICBhcHAuZXJyb3JNc2cgPSAn7KCc66qp7J2EIOyeheugpe2VtOyjvOyEuOyalC4nO1xyXG4gICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgfSBlbHNlIGlmKCQoJyNzdW1tZXJub3RlJykuc3VtbWVybm90ZSgnY29kZScpID09PSAnPHA+PGJyPjwvcD4nIHx8ICQoJyNzdW1tZXJub3RlJykuc3VtbWVybm90ZSgnY29kZScpID09PSBudWxsIHx8ICQoJyNzdW1tZXJub3RlJykuc3VtbWVybm90ZSgnY29kZScpID09PSB1bmRlZmluZWQgfHwgJCgnI3N1bW1lcm5vdGUnKS5zdW1tZXJub3RlKCdjb2RlJykgPT09ICcnKSB7XHJcbiAgICAgICAgICBhcHAuZXJyb3JNc2cgPSAn64K07Jqp7J2EIOyeheugpe2VtOyjvOyEuOyalC4nO1xyXG4gICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHZhciBjb250ZW50ID0gJCgnI3N1bW1lcm5vdGUnKS5zdW1tZXJub3RlKCdjb2RlJyk7XHJcbiAgICAgICAgICB2YXIgYm9hcmRfdHlwZSA9IGFwcC5kYXRhLnNlbGVjdGVkT3B0aW9uLmlkO1xyXG4gICAgICAgICAgdmFyIHRpdGxlID0gcmVzcG9uc2UudGl0bGU7XHJcbiAgICAgICAgICB2YXIgYm9hcmREYXRhID0ge1xyXG4gICAgICAgICAgICB0aXRsZSA6IHRpdGxlLFxyXG4gICAgICAgICAgICBjb250ZW50IDogY29udGVudCxcclxuICAgICAgICAgICAgYm9hcmRfdHlwZSA6IGJvYXJkX3R5cGUsXHJcbiAgICAgICAgICAgIHVzZXJfaWQgOiAkc2NvcGUubWFpbi51c2VyLnVzZXJfaWRcclxuICAgICAgICAgIH07XHJcbiAgICAgICAgICBCb2FyZC5jcmVhdGVCb2FyZChib2FyZERhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAkc3RhdGUuZ28oJ2FwcC5ib2FyZCcpO1xyXG4gICAgICAgICAgICAgIH0sNTAwKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG5cclxuICAgIEJvYXJkLnJlYWRCb2FyZChib2FyZF9pZCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuLy8g7Jik66WY66W8IOyeoeyVhOyVvO2VmOuKlOuNsCDslrTrlqTsi53snLzroZwg7J6h7JWE7JW87ZWY7KeAP1xyXG4gICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgYXBwLmJvYXJkRGF0YXMgPSBkYXRhLmRhdGEucmVzdWx0O1xuICAgICAgICBhcHAuaHRtbGNvbnRlbnQgPSBkYXRhLmRhdGEucmVzdWx0LmNvbnRlbnQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG5cclxuXHJcblxyXG5cclxuLy9cclxuLy8gICAkc2NvcGUuZGF0YSA9IHtcclxuLy8gICAgYXZhaWxhYmxlT3B0aW9uczogW1xyXG4vLyAgICAgIHtpZDogJy0xJywgbmFtZTogJ+y5tO2FjOqzoOumrOulvCDshKDtg53tlbTso7zshLjsmpQuJ30sXHJcbi8vICAgICAge2lkOiAnMCcsIG5hbWU6ICfqs7Xsp4Dsgqztla0nfSxcclxuLy8gICAgICB7aWQ6ICcxJywgbmFtZTogJ+2VmeybkC/tmY3rs7QnfSxcclxuLy8gICAgICB7aWQ6ICcyJywgbmFtZTogJ+uqqOyehC/siqTthLDrlJQnfVxyXG4vLyAgICBdLFxyXG4vLyAgICBzZWxlY3RlZE9wdGlvbjoge2lkOiAnLTEnLCBuYW1lOiAn7Lm07YWM6rOg66as66W8IOyEoO2Dne2VtOyjvOyEuOyalC4nfSAvL1RoaXMgc2V0cyB0aGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgc2VsZWN0IGluIHRoZSB1aVxyXG4vLyAgICB9O1xyXG4vL1xyXG4vLyAgIC8vIGlk7JeQIO2VtOuLue2VmOuKlCDqsJLsnYQg67O07Jes7KO864qUIO2VqOyImFxyXG4vLyAgICRzY29wZS51c2VyQXJ0aWNsZSA9IGZhbHNlO1xyXG4vL1xyXG4vLyAvLyDqsJLsnYQg7KCA7J6l7ZWY64qUIO2VqOyImFxyXG4vLyAgICRzY29wZS5hZGRCb2FyZCA9IGZ1bmN0aW9uKHRpdGxlLCBjb250ZW50KXtcclxuLy8gLy8gZW1wbG95ZXNzIOygnOuMgOuhnCDrj5nsnpHtlZjripTsp4Ag7ZmV7J24IO2VhOyalFxyXG4vLyAgICAgICB2YXIgYm9hcmRfdHlwZSA9ICRzY29wZS5kYXRhLnNlbGVjdGVkT3B0aW9uLmlkO1xyXG4vLyAgICAgICAkaHR0cC5wb3N0KCdhcGkvYm9hcmRNZW51JyxcclxuLy8gICAgICAgeyB0aXRsZTp0aXRsZSwgY29udGVudDogY29udGVudCwgYm9hcmRfdHlwZTogYm9hcmRfdHlwZX0pXHJcbi8vICAgICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXsgICAgICAgICAgLy8g7KCV7IOBIOyekeuPme2VmOyYgOyKteuLiOuLpC5cclxuLy8gICAgICAgfSk7XHJcbi8vICAgfTtcclxuLy9cclxuLy8gXHQkc2NvcGUuc2hvd0JvYXJkID0gZnVuY3Rpb24oKXtcclxuLy8gICAvLyDrs7Trk5wg7JWE7J2065SUIOyghOyGoVxyXG4vLyAgIHZhciBpZCA9ICRzdGF0ZVBhcmFtcy5ib2FyZF9pZDtcclxuLy8gICAgICRodHRwLmdldCgnYXBpL2JvYXJkLycraWQpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xyXG4vLyAvLyDsgqzsmqnsnpDqsIAg7J6R7ISx7ZWcIOqyjOyLnOusvOyeheuLiOuLpC5cclxuLy8gICAgIGlmKHJlc3BvbnNlLmRhdGFbMV0uc3VjY2Vzcyl7XHJcbi8vICAgICAgICRzY29wZS51c2VyQXJ0aWNsZSA9IHRydWU7XHJcbi8vICAgICAgICRzY29wZS5ib2FyZCA9IHJlc3BvbnNlLmRhdGFbMF1bMF07XHJcbi8vICAgICB9XHJcbi8vIC8vIOyCrOyaqeyekOqwgCDsnpHshLHtlZwg6rKM7Iuc66y87J20IOyVhOuLmeuLiOuLpC5cclxuLy8gICAgIGVsc2Uge1xyXG4vLyAgICAgICAkc2NvcGUudXNlckFydGljbGUgPSBmYWxzZTtcclxuLy8gICAgICAgJHNjb3BlLmJvYXJkID0gcmVzcG9uc2UuZGF0YVswXVswXTtcclxuLy8gICAgIH1cclxuLy8gICB9KTtcclxuLy8gfTtcclxuLy9cclxuLy9cclxuLy8gICAvLyDqsJLsnYQg7IKt7KCc7ZWY64qUIO2VqOyImFxyXG4vLyBcdCRzY29wZS5kZWxldGVCb2FyZCA9IGZ1bmN0aW9uKCl7XHJcbi8vICAgICB2YXIgaWQgPSAkc3RhdGVQYXJhbXMuYm9hcmRfaWQ7XHJcbi8vIFx0XHQkaHR0cC5kZWxldGUoJ2FwaS9ib2FyZC8nK2lkKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtcclxuLy8gICAgICAgICAkbG9jYXRpb24ucGF0aCgnYXBwLmJvYXJkLmNhdGVnb3J5KHtjb2RlOiAwfSknKTtcclxuLy8gXHRcdH0pO1xyXG4vLyBcdH07XHJcbi8vXHJcbi8vICAgXHQvLyDqsJLsnYQg7IiY7KCV7ZWY64qUIO2VqOyImFxyXG4vLyAgIFx0JHNjb3BlLnVwZGF0ZUJvYXJkID0gZnVuY3Rpb24oKXtcclxuLy8gICBcdFx0dmFyIGlkID0gJHN0YXRlUGFyYW1zLmJvYXJkX2lkO1xyXG4vLyAgIFx0XHQkaHR0cC5wdXQoJ2FwaS9ib2FyZC8nK2lkICwgJHNjb3BlLmJvYXJkKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtcclxuLy8gICBcdFx0XHQkc2NvcGUuYm9hcmQgPSByZXNwb25zZS5kYXRhO1xyXG4vLyAgICAgICAgICRsb2NhdGlvbi5wYXRoKCdib2FyZCcpO1xyXG4vLyAgIFx0XHR9KTtcclxuLy8gICBcdH07XHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnZ2FsbGVydENvbnRyb2xsZXJzJyxbJ2dhbGxlcnlTZXJ2aWNlcyddKVxyXG4uY29udHJvbGxlcignZ2FsbGVyeVRhcEN0cmwnLCBmdW5jdGlvbigkc2NvcGUsIEdhbGxlcnkpe1xyXG4gIC8vIOyghOyytCDrqZTribQg6rCA7KC47Jik6riwXHJcbiAgR2FsbGVyeS5yZWFkR2FsbGVyeVRhcCgpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICRzY29wZS5oZWFkZXJzID0gZGF0YS5kYXRhLnJlc3VsdDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgfVxyXG4gIH0pO1xyXG59KVxyXG5cclxuLmNvbnRyb2xsZXIoJ2dhbGxlcnlQaG90b3NDdHJsJywgZnVuY3Rpb24oR2FsbGVyeSwgJHN0YXRlUGFyYW1zKXtcclxuICB2YXIgYXBwID0gdGhpcztcclxuICB2YXIgcGhvdG9fdHlwZSA9ICRzdGF0ZVBhcmFtcy5jb2RlO1xyXG4gIGFwcC5kYXRhID0ge1xyXG4gICBhdmFpbGFibGVPcHRpb25zOiBbXHJcbiAgICAge3NvcnQ6ICctY3JlYXRlZCcsIG5hbWU6ICfstZzsi6DsiJwnfSxcclxuICAgICB7c29ydDogJy12aWV3JywgbmFtZTogJ+yhsO2ajOyInCd9LFxyXG4gICAgIHtzb3J0OiAnLWNvbW1lbnRfY291bnQnLCBuYW1lOifrjJPquIDsiJwnfVxyXG4gICBdLFxyXG4gICBzZWxlY3RlZE9wdGlvbjogIHtzb3J0OiAnLWNyZWF0ZWQnLCBuYW1lOiAn7LWc7Iug7IicJ30gLy9UaGlzIHNldHMgdGhlIGRlZmF1bHQgdmFsdWUgb2YgdGhlIHNlbGVjdCBpbiB0aGUgdWlcclxuICAgfTtcclxuXHJcbiAgICBHYWxsZXJ5LnJlYWRQaG90b3MocGhvdG9fdHlwZSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgIGFwcC5waG90b0RhdGEgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxufSlcclxuXHJcbi5jb250cm9sbGVyKCdnYWxsZXJ5UGhvdG9DdHJsJywgZnVuY3Rpb24gKCRzdGF0ZVBhcmFtcywgR2FsbGVyeSwgQ29tbWVudCwgJHNjb3BlLCAkd2luZG93LCAkc3RhdGUpIHtcclxuXHJcbiAgIHZhciBhcHAgPSB0aGlzO1xyXG4gICB2YXIgcGhvdG9faWQgPSAkc3RhdGVQYXJhbXMucGhvdG9faWQ7XHJcbiAgIHZhciBwaG90b190eXBlID0gJHN0YXRlUGFyYW1zLnBob3RvX3R5cGU7XHJcbiAgIHZhciB1c2VyX2lkID0gJHNjb3BlLm1haW4udXNlci51c2VyX2lkO1xyXG5cclxuICAgR2FsbGVyeS5yZWFkUGhvdG9EYXRhKHBob3RvX2lkKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgIGFwcC5waG90b0RhdGEgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgIH0gZWxzZSB7XHJcbiAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICB9XHJcbiAgIH0pO1xyXG5cclxuICAgR2FsbGVyeS5yZWFkUGhvdG9zKHBob3RvX3R5cGUpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgYXBwLnBob3Rvc0RhdGEgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgIH0gZWxzZSB7XHJcbiAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICB9XHJcbiAgIH0pO1xyXG5cclxuICAgQ29tbWVudC5yZWFkQ29tbWVudChwaG90b19pZCkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICBhcHAuY29tbWVudERhdGEgPSBkYXRhLmRhdGEucmVzdWx0O1xyXG4gICAgICAgY29uc29sZS5sb2coYXBwLmNvbW1lbnREYXRhKTtcclxuICAgICB9IGVsc2Uge1xyXG4gICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgfVxyXG4gICB9KTtcclxuXHJcbiAgIHRoaXMuY3JlYXRlQ29tbWVudCA9IGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgaWYoISRzY29wZS5tYWluLnVzZXIudXNlcl9pZCl7XHJcbiAgICAgICAgICRzY29wZS5tYWluLmxvZ2luKCk7XHJcbiAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICBpZighZGF0YSl7XHJcbiAgICAgICAgICAgJHdpbmRvdy5hbGVydCgn64yT6riA7J2EIOyeheugpe2VtOyjvOyEuOyalC4nKTtcclxuICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICB2YXIgY29tbWVudERhdGEgPSB7XHJcbiAgICAgICAgICAgICBjb21tZW50IDogZGF0YSxcclxuICAgICAgICAgICAgIHVzZXJfaWQgOiAkc2NvcGUubWFpbi51c2VyLnVzZXJfaWQsXHJcbiAgICAgICAgICAgICBwaG90b19pZCA6IHBob3RvX2lkXHJcbiAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgQ29tbWVudC5jcmVhdGVDb21tZW50KGNvbW1lbnREYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICAgICAkc3RhdGUucmVsb2FkKCk7XHJcbiAgICAgICAgICAgICB9IGVsc2Uge1xyXG5cclxuICAgICAgICAgICAgIH1cclxuICAgICAgICAgICB9KTtcclxuICAgICAgICAgfVxyXG4gICAgICAgfVxyXG4gIH07XHJcbn0pO1xyXG5cclxuXHJcblxyXG5cclxuLy8gLy8g6rCS7J2EIOyCreygnO2VmOuKlCDtlajsiJhcclxuLy8gICAkc2NvcGUuZGVsZXRlUGhvdG8gPSBmdW5jdGlvbigpe1xyXG4vLyAgICAgIHZhciBpZCA9ICRzdGF0ZVBhcmFtcy5waG90b19pZDtcclxuLy8gICAgICRodHRwLmRlbGV0ZSgnL2FwaS9nYWxsZXJ5LycraWQpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xyXG4vLyAgICAgICAgICAkbG9jYXRpb24ucGF0aCgnYXBwLmdhbGxlcnkuY2F0ZWdvcnkoe2NvZGU6IDB9KScpO1xyXG4vLyAgICAgfSk7XHJcbi8vICAgfTtcclxuLy9cclxuLy9cclxuLy8gLy8g6rCc67OEIOyCrOynhCDqtIDroKjrkJwg7J2066+47KeAIOqwgOyguOyYpOq4sCB8fCDshKDtg53tlZwg7J2066+47KeA7JmAIOqwmeydgCDrtoTrpZjsnZgg7J2066+47KeAIOqwgOyguOyYpOq4sFxyXG4vLyAgICRzY29wZS5nZXRSZWxhdGVkUGljID0gZnVuY3Rpb24oKXtcclxuLy8gICAgIHZhciBjb2RlID0gJHN0YXRlUGFyYW1zLnBob3RvX3R5cGU7XHJcbi8vICAgICAkaHR0cC5nZXQoJy9hcGkvZ2FsbGVyeU1lbnUvJytjb2RlKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtcclxuLy8gICAgICAgJHNjb3BlLnBob3RvcyA9IHJlc3BvbnNlLmRhdGE7XHJcbi8vICAgICB9KTtcclxuLy8gICB9O1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuLmNvbnRyb2xsZXIoJ0hvbWVDdHJsJywgZnVuY3Rpb24gKCAkaHR0cCwgJHNjb3BlKSB7XHJcblxyXG4gICRzY29wZS5nZXRDb250ZW50ID0gZnVuY3Rpb24oKXtcclxuICAgICRodHRwLmdldCgnL2FwaS9ob21lJykudGhlbihmdW5jdGlvbihyZXNwb25zZSl7XHJcbiAgICAgICRzY29wZS5waG90b3MgPSByZXNwb25zZS5kYXRhO1xyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnbWFpbkNvbnRyb2xsZXJzJyxbJ2F1dGhTZXJ2aWNlcycsICd1c2VyU2VydmljZXMnXSlcclxuLmNvbnRyb2xsZXIoJ21haW5DdHJsJywgZnVuY3Rpb24oQXV0aCwgJHRpbWVvdXQsICRsb2NhdGlvbiwgJHN0YXRlLCAkcm9vdFNjb3BlLCAkc2NvcGUsICR3aW5kb3csICRpbnRlcnZhbCwgVXNlciwgQXV0aFRva2VuKXtcclxuICB2YXIgYXBwID0gdGhpcztcclxuXHJcbiAgYXBwLmxvYWRtZSA9IGZhbHNlO1xyXG5cclxuICAkc2NvcGUuJG9uKCdMT0FEJywgZnVuY3Rpb24oKXtcclxuICAgICRzY29wZS5sb2FkaW5nID0gdHJ1ZTtcclxuICB9KTtcclxuXHJcbiAgJHNjb3BlLiRvbignVU5MT0FEJywgZnVuY3Rpb24oKXtcclxuICAgICRzY29wZS5sb2FkaW5nID0gZmFsc2U7XHJcbiAgfSk7XHJcblxyXG4gICRyb290U2NvcGUuJG9uKCckc3RhdGVDaGFuZ2VTdGFydCcsIGZ1bmN0aW9uKCl7XHJcbiAgICBpZighY2hlY2tTZXNzaW9uKWNoZWNrU2Vzc2lvbigpO1xyXG5cclxuICAgIGlmKEF1dGguaXNMb2dnZWRJbigpKXtcclxuICAgICAgYXBwLmlzTG9nZ2VkSW4gPSB0cnVlO1xyXG4gICAgICBBdXRoLmdldFVzZXIoKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIGlmKGRhdGEuZGF0YS5wZXJtaXNzaW9uID09PSAnYWRtaW4nKSB7XHJcbiAgICAgICAgICBhcHAucGVybWlzc2lvbiA9IHRydWU7XHJcbiAgICAgICAgICBhcHAudXNlciA9IGRhdGEuZGF0YTtcclxuICAgICAgICAgIGFwcC5sb2FkbWUgPSB0cnVlO1xyXG4gICAgICAgIH0gZWxzZSBpZihkYXRhLmRhdGEucGVybWlzc2lvbiA9PT0gJ2FydGlzdCcpIHtcclxuICAgICAgICAgIGFwcC5wZXJtaXNzaW9uID0gdHJ1ZTtcclxuICAgICAgICAgIGFwcC51c2VyID0gZGF0YS5kYXRhO1xyXG4gICAgICAgICAgYXBwLmxvYWRtZSA9IHRydWU7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGFwcC51c2VyID0gZGF0YS5kYXRhO1xyXG4gICAgICAgICAgYXBwLmxvYWRtZSA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFwcC51c2VyID0gZmFsc2U7XHJcbiAgICAgIGFwcC5pc0xvZ2dlZEluID0gZmFsc2U7XHJcbiAgICAgIGFwcC5sb2FkbWUgPSB0cnVlO1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuXHJcbiAgdmFyIGNoZWNrU2Vzc2lvbiA9IGZ1bmN0aW9uKCl7XHJcbiAgICBpZihBdXRoLmlzTG9nZ2VkSW4oKSl7XHJcbiAgICAgIGFwcC5jaGVja1Nlc3Npb24gPSB0cnVlO1xyXG4gICAgICB2YXIgaW50ZXJ2YWwgPSAkaW50ZXJ2YWwoZnVuY3Rpb24oKXtcclxuICAgICAgICB2YXIgdG9rZW4gPSAkd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpO1xyXG4gICAgICAgIGlmKHRva2VuID09PSBudWxsKXtcclxuICAgICAgICAgICRpbnRlcnZhbC5jYW5jZWwoaW50ZXJ2YWwpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBzZWxmLnBhcnNlSnd0ID0gZnVuY3Rpb24odG9rZW4pe1xyXG4gICAgICAgICAgICB2YXIgYmFzZTY0VXJsID0gdG9rZW4uc3BsaXQoJy4nKVsxXTtcclxuICAgICAgICAgICAgdmFyIGJhc2U2NCA9IGJhc2U2NFVybC5yZXBsYWNlKCctJywnKycpLnJlcGxhY2UoJ18nLCAnLycpO1xyXG4gICAgICAgICAgICByZXR1cm4gSlNPTi5wYXJzZSgkd2luZG93LmF0b2IoYmFzZTY0KSk7XHJcbiAgICAgICAgICB9O1xyXG4gICAgICAgICAgdmFyIGV4cGlyZVRpbWUgPSBzZWxmLnBhcnNlSnd0KHRva2VuKTtcclxuICAgICAgICAgIHZhciB0aW1lU3RhbXAgPSBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKTtcclxuICAgICAgICAgIHZhciB0aW1lQ2hlY2sgPSBleHBpcmVUaW1lLmV4cCAtIHRpbWVTdGFtcDtcclxuXHJcbiAgICAgICAgICBpZih0aW1lQ2hlY2sgPD0gNSl7XHJcbiAgICAgICAgICAgIHNob3dNb2RhbCgnZXhwaXJlZCcpO1xyXG4gICAgICAgICAgICAkaW50ZXJ2YWwuY2FuY2VsKGludGVydmFsKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9LCAyMDAwKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBjaGVja1Nlc3Npb24oKTtcclxuXHJcblxyXG4gICAgYXBwLnJlbmV3U2Vzc2lvbiA9IGZ1bmN0aW9uKCl7XHJcbiAgICAgIGFwcC5jaG9pY2VNYWRlID0gdHJ1ZTtcclxuICAgICAgVXNlci5yZW5ld1Nlc3Npb24oYXBwLnVzZXIudXNlcm5hbWUpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgQXV0aFRva2VuLnNldFRva2VuKGRhdGEuZGF0YS50b2tlbik7XHJcbiAgICAgICAgICBjaGVja1Nlc3Npb24oKTtcclxuICAgICAgICAgIGhpZGVNb2RhbCgnZXhwaXJlZCcpO1xyXG4gICAgICAgIH0gZWxzZXtcclxuICAgICAgICAgIGFwcC5Nb2RhbEJvZHkgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgIGhpZGVNb2RhbCgnZXhwaXJlZCcpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIGFwcC5lbmRTZXNzaW9uID0gZnVuY3Rpb24oKXtcclxuICAgICAgYXBwLmNob2ljZU1hZGUgPSB0cnVlO1xyXG4gICAgICBoaWRlTW9kYWwoJ2V4cGlyZWQnKTtcclxuICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgICBzaG93TW9kYWwoJ2xvZ291dCcpO1xyXG4gICAgICB9LDUwMCk7XHJcbiAgICB9O1xyXG5cclxuXHJcbiAgdmFyIHNob3dNb2RhbCA9IGZ1bmN0aW9uKG9wdGlvbil7XHJcbiAgICBhcHAuY2hvaWNlTWFkZSA9IGZhbHNlO1xyXG4gICAgYXBwLm1vZGFsSGVhZGVyID0gdW5kZWZpbmVkO1xyXG4gICAgYXBwLm1vZGFsQm9keSA9IHVuZGVmaW5lZDtcclxuICAgIGFwcC5oaWRlQnV0dG9uID0gZmFsc2U7XHJcbi8vIGNoZWNrIHRva2VuIGV4cGlyZWRcclxuICAgIGlmKG9wdGlvbiA9PT0gICdleHBpcmVkJyApe1xyXG4gICAgICBhcHAubW9kYWxIZWFkZXIgPSAnVGltZW91dCBXYXJuaW5nJztcclxuICAgICAgYXBwLm1vZGFsQm9keSA9ICdZb3VyIHNlc3Npb24gd2lsbCBleHBpcmVkIGluIDUgbWludXRlcy4gV291bGQgeW91IGxpa2UgdG8gcmVuZXcgeW91ciBzZXNzaW9uPyc7XHJcbiAgICAgICQoXCIjbXlNb2RhbFwiKS5tb2RhbCh7YmFja2Ryb3A6XCJzdGF0aWNcIn0pO1xyXG4gICAgfSBlbHNlIGlmKG9wdGlvbiA9PT0gJ2xvZ291dCcpe1xyXG4vLyBsb2dvdXRcclxuICAgICAgYXBwLmhpZGVCdXR0b24gPSB0cnVlO1xyXG4gICAgICBhcHAubW9kYWxIZWFkZXIgPSAn66Gc6re47JWE7JuDJztcclxuICAgICAgJChcIiNteU1vZGFsXCIpLm1vZGFsKHtiYWNrZHJvcDpcInN0YXRpY1wifSk7XHJcbiAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgQXV0aC5sb2dvdXQoKTtcclxuICAgICAgICBhcHAuaXNMb2dnZWRJbiA9IGZhbHNlO1xyXG4gICAgICAgIGhpZGVNb2RhbCgnbG9nb3V0Jyk7XG4gICAgICAgICRzdGF0ZS5yZWxvYWQoKTtcbiAgICAgIH0sIDIwMDApO1xyXG4gICAgfSBlbHNlIGlmKG9wdGlvbiA9PT0gJ2xvZ2luJyl7XHJcbi8vIExvZ2luXHJcbiAgICAgICQoXCIjbG9naW5cIikubW9kYWwoe2JhY2tkcm9wOlwic3RhdGljXCJ9KTtcclxuICAgIH0gIGVsc2UgaWYob3B0aW9uID09PSd1cGxvYWQnKXtcclxuLy8gZW5yb2xsQXJ0aXN0XHJcbiAgICAgICQoXCIjdXBsb2FkXCIpLm1vZGFsKHtiYWNrZHJvcDpcInN0YXRpY1wifSk7XHJcbiAgICB9XHJcbiAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgaWYoIWFwcC5jaG9pY2VNYWRlKXtcclxuICAgICAgICAgIGhpZGVNb2RhbCgnbG9nb3V0Jyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9LCA0MDAwKTtcclxuXHJcbiAgfTtcclxuXHJcbiAgdmFyIGhpZGVNb2RhbCA9IGZ1bmN0aW9uKG9wdGlvbil7XHJcblxyXG4gICAgaWYob3B0aW9uID09PSAnZXhwaXJlZCcpe1xyXG4gICAgICAkKFwiI215TW9kYWxcIikubW9kYWwoJ2hpZGUnKTtcclxuICAgIH0gZWxzZSBpZihvcHRpb24gPT09ICdsb2dvdXQnKXtcclxuICAgICAgJChcIiNteU1vZGFsXCIpLm1vZGFsKCdoaWRlJyk7XHJcbiAgICB9IGVsc2UgaWYob3B0aW9uID09PSAnbG9naW4nKXtcclxuICAgICAgJChcIiNsb2dpblwiKS5tb2RhbCgnaGlkZScpO1xyXG4gICAgfSBlbHNlIGlmKG9wdGlvbiA9PT0gJ3VwbG9hZCcpe1xyXG4gICAgICAkKFwiI3VwbG9hZFwiKS5tb2RhbCgnaGlkZScpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG5cclxuLy8g66Gc6re47J24XHJcbiAgdGhpcy5kb0xvZ2luID0gZnVuY3Rpb24obG9naW5EYXRhLCB2YWxpZCl7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIGFwcC5leHBpcmVkID0gZmFsc2U7XHJcbiAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG5cclxuICAgIGlmKHZhbGlkKXtcclxuICAgICAgQXV0aC5sb2dpbihhcHAubG9naW5EYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICAgIGlmKGRhdGEuZGF0YS5zdWNjZXNzKXtcclxuICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICBhcHAuc3VjY2Vzc01zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgaGlkZU1vZGFsKCdsb2dpbicpO1xyXG4gICAgICAgICAgICBhcHAubG9naW5EYXRhID0gbnVsbDtcclxuICAgICAgICAgICAgYXBwLmlzTG9nZ2VkSW4gPSB0cnVlO1xyXG4gICAgICAgICAgICBjaGVja1Nlc3Npb24oKTtcclxuICAgICAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICAgICAgfSwyMDAwKTtcclxuICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICBpZihkYXRhLmRhdGEuZXhwaXJlZCl7XHJcbiAgICAgICAgICAgIGFwcC5leHBpcmVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlOyAvLyBJZiBlcnJvciBvY2N1cnMsIHJlbW92ZSBkaXNhYmxlIGxvY2sgZnJvbSBmb3JtXHJcbiAgICAgIGFwcC5sb2FkaW5nID0gZmFsc2U7IC8vIFN0b3AgYm9vdHN0cmFwIGxvYWRpbmcgaWNvblxyXG4gICAgICBhcHAuZXJyb3JNc2cgPSAn7Jis67CU66W4IOygleuztOulvCDsnoXroKXtlbTso7zshLjsmpQuJzsgLy8gRGlzcGxheSBlcnJvciBpZiB2YWxpZCByZXR1cm5zIGZhbHNlXHJcbiAgICB9XHJcblxyXG4gIH07XHJcblxyXG5cclxuXHJcbi8vIOyCrOyaqeyekOydmCDqtoztlZwg7Jes67aAIO2ZleyduFxyXG4gIHRoaXMudXBsb2FkID0gZnVuY3Rpb24oKXtcclxuICBhcHAuY2hvaWNlTWFkZSA9IHRydWU7XHJcbiAgICBpZihhcHAudXNlci5wZXJtaXNzaW9uID09PSAnYXJ0aXN0Jyl7XHJcbiAgICAgICRzdGF0ZS5nbygnYXBwLmFydGlzdFByb2ZpbGVzJyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBVc2VyLmNoZWNrUGVybWlzc2lvbihhcHAudXNlci51c2VybmFtZSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAkc3RhdGUuZ28oJ2FwcC5hcnRpc3RQcm9maWxlcycpO1xyXG4gICAgICAgICAgIGFwcC5wZXJtaXNzaW9uID0gdHJ1ZTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgc2hvd01vZGFsKCd1cGxvYWQnKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICB9O1xyXG5cclxuICAvLyDsgqzsmqnsnpDsl5Dqsowg6raM7ZWcIOu2gOyXrFxyXG4gICAgdGhpcy5kb1Blcm1pc3Npb24gPSBmdW5jdGlvbigpe1xyXG4gICAgICBhcHAuY2hvaWNlTWFkZSA9IHRydWU7XHJcbiAgICAgIGFwcC51cGxvYWREaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgIGFwcC51cGxvYWRlcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgICBVc2VyLnJlc2V0UGVybWlzc2lvbihhcHAudXNlcikudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICBhcHAudXBsb2FkRGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgICAgYXBwLnVwbG9hZFN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgIGhpZGVNb2RhbCgndXBsb2FkJyk7XHJcbiAgICAgICAgICAgICRzdGF0ZS5nbygnYXBwLmFydGlzdFByb2ZpbGVzJyk7XHJcbiAgICAgICAgICB9LDIwMDApO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBhcHAudXBsb2FkRGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgIGFwcC51cGxvYWRlcnJvck1zZyA9ICfsnpjrqrvrkJwg7KCV67O06rCAIOyeheugpeuQmOyXiOyKteuLiOuLpC4nO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuXHJcbiAgYXBwLmxvZ2luID0gZnVuY3Rpb24oKXtcclxuICAgIGFwcC5zdWNjZXNzTXNnID0gZmFsc2U7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgc2hvd01vZGFsKCdsb2dpbicpO1xyXG4gIH07XHJcblxyXG4gIGFwcC5sb2dvdXQgPSBmdW5jdGlvbigpe1xyXG4gICAgc2hvd01vZGFsKCdsb2dvdXQnKTtcclxuICB9O1xyXG5cclxuICBhcHAucmVzZW5kID0gZnVuY3Rpb24oKXtcclxuICAgIGhpZGVNb2RhbCgnbG9naW4nKTtcclxuICAgICR0aW1lb3V0KGZ1bmN0aW9uKCl7XHJcbiAgICAgICRzdGF0ZS5nbygncmVzZW5kJyk7XHJcbiAgICAgIGFwcC5leHBpcmVkID0gZmFsc2U7XHJcbiAgICB9LDUwMCk7XHJcbiAgfTtcclxuXHJcbiAgYXBwLnJlc2V0dXNlcm5hbWUgPSBmdW5jdGlvbigpe1xyXG4gICAgaGlkZU1vZGFsKCdsb2dpbicpO1xyXG4gICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgJHN0YXRlLmdvKCdyZXNldHVzZXJuYW1lJyk7XHJcbiAgICB9LDUwMCk7XHJcbiAgfTtcclxuXHJcbiAgYXBwLnJlc2V0cGFzc3dvcmQgPSBmdW5jdGlvbigpe1xyXG4gICAgaGlkZU1vZGFsKCdsb2dpbicpO1xyXG4gICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgJHN0YXRlLmdvKCdyZXNldHBhc3N3b3JkJyk7XHJcbiAgICB9LDUwMCk7XHJcblxyXG4gIH07XHJcblxyXG59KTtcclxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXHJcbi5jb250cm9sbGVyKCdCb2FyZE1lbnVDb250cm9sbGVyJywgZnVuY3Rpb24gKCRzY29wZSwkaHR0cCwgJHN0YXRlUGFyYW1zKSB7XHJcblxyXG4vLyBkZWZpbmUgbGlzdCBvZiBpdGVtcyDsoITssrQg642w7J207YSwIOygleugrFxyXG4gICAgICAgICRzY29wZS5kYXRhID0ge1xyXG4gICAgICAgICBhdmFpbGFibGVPcHRpb25zOiBbXHJcbiAgICAgICAgICAge3NvcnQ6ICctY3JlYXRlZCcsIG5hbWU6ICfstZzsi6DsiJwnfSxcclxuICAgICAgICAgICB7c29ydDogJy12aWV3JywgbmFtZTogJ+yhsO2ajOyInCd9LFxyXG4gICAgICAgICAgIHtzb3J0OiAnLWNvbW1lbnRfY291bnQnLCBuYW1lOifrjJPquIDsiJwnfVxyXG4gICAgICAgICBdLFxyXG4gICAgICAgICBzZWxlY3RlZE9wdGlvbjogIHtzb3J0OiAnLWNyZWF0ZWQnLCBuYW1lOiAn7LWc7Iug7IicJ30gLy9UaGlzIHNldHMgdGhlIGRlZmF1bHQgdmFsdWUgb2YgdGhlIHNlbGVjdCBpbiB0aGUgdWlcclxuICAgICAgICAgfTtcclxuXHJcblxyXG4vLyDsoITssrQg66mU64m0IOqwgOyguOyYpOq4sFxyXG4gICAgJGh0dHAuZ2V0KCcvYXBpL2JvYXJkTWVudScpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xyXG4gICAgICAkc2NvcGUuaGVhZGVycyA9IHJlc3BvbnNlLmRhdGE7XHJcbiAgICB9KTtcclxuXHJcbi8vIOyEoO2Dne2VnCDsvZTrk5zsl5Ag65Sw66W4IOqysOqzvCDqsJIg6rCA7KC47Jik6riwXHJcbiAgICAgICRzY29wZS5nZXRIZWFkZXJDb250ZW50ID0gZnVuY3Rpb24oKXtcclxuICAgICAgICB2YXIgY29kZSA9ICRzdGF0ZVBhcmFtcy5jb2RlO1xyXG4gICAgICAgICRodHRwLmdldCgnL2FwaS9ib2FyZE1lbnUvJytjb2RlKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKXtcclxuICAgICAgICAgICRzY29wZS5ib2FyZGVzID0gcmVzcG9uc2UuZGF0YTtcclxuICAgICAgICB9KTtcclxuICAgICAgfTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxyXG4uY29udHJvbGxlcignZGlzcGxheU1lbnVDb250cm9sbGVyJywgZnVuY3Rpb24gKCAkc2NvcGUsICRodHRwLCAkc3RhdGVQYXJhbXMpIHtcclxuXHJcbi8vIGRlZmluZSBsaXN0IG9mIGl0ZW1zIOyghOyytCDrjbDsnbTthLAg7KCV66CsXHJcbiAgICAkc2NvcGUuZGF0YSA9IHtcclxuICAgICBhdmFpbGFibGVPcHRpb25zOiBbXHJcbiAgICAgICB7c29ydDogJy1jcmVhdGVkJywgbmFtZTogJ+y1nOyLoOyInCd9XHJcbiAgICAgXSxcclxuICAgICBzZWxlY3RlZE9wdGlvbjogIHtzb3J0OiAnLWNyZWF0ZWQnLCBuYW1lOiAn7LWc7Iug7IicJ30gLy9UaGlzIHNldHMgdGhlIGRlZmF1bHQgdmFsdWUgb2YgdGhlIHNlbGVjdCBpbiB0aGUgdWlcclxuICAgICB9O1xyXG5cclxuICAgICRodHRwLmdldCgnL2FwaS9kaXNwbGF5TWVudScpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xyXG4gICAgICAkc2NvcGUuaGVhZGVycyA9IHJlc3BvbnNlLmRhdGE7XHJcbiAgICB9KTtcclxuXHJcblxyXG4vLyDshKDtg53tlZwg7L2U65Oc7JeQIOuUsOuluCDsnbTrr7jsp4Ag6rCA7KC47Jik6riwXHJcbiAgICAkc2NvcGUuZ2V0SGVhZGVyQ29udGVudCA9IGZ1bmN0aW9uKCl7XHJcbiAgICAgIHZhciBjb2RlID0gJHN0YXRlUGFyYW1zLmNvZGU7XHJcbiAgICAgICRodHRwLmdldCgnL2FwaS9kaXNwbGF5TWVudS8nK2NvZGUpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xyXG4gICAgICAgICRzY29wZS5kaXNwbGF5cyA9IHJlc3BvbnNlLmRhdGE7XHJcbiAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbn0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcclxuLmNvbnRyb2xsZXIoJ01haW5NZW51Q29udHJvbGxlcicsIGZ1bmN0aW9uICgkaHR0cCwgJHNjb3BlKSB7XHJcbiAgJGh0dHAuZ2V0KCcvYXBpL2hlYWRlcicpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xyXG4gICAgJHNjb3BlLmhlYWRlcnMgPSByZXNwb25zZS5kYXRhO1xyXG4gIH0pO1xyXG59KTtcclxuIiwiYW5ndWxhci5tb2R1bGUoJ2VtYWlsQ29udHJvbGxlcnMnLFsndXNlclNlcnZpY2VzJ10pXHJcbi5jb250cm9sbGVyKCdlbWFpbEN0cmwnLCBmdW5jdGlvbigkc3RhdGVQYXJhbXMsIFVzZXIsICR0aW1lb3V0LCAkc3RhdGUpe1xyXG4gIHZhciBhcHAgPSB0aGlzO1xyXG4gIFVzZXIuYWN0aXZlQWNjb3VudCgkc3RhdGVQYXJhbXMudG9rZW4pLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICBhcHAuc3VjY2Vzc01zZyA9IGZhbHNlO1xyXG4gICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2UgKyAnLi4u66mU7J24IO2OmOydtOyngOuhnCDsnbTrj5ntlanri4jri6QuJztcclxuICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgICAkc3RhdGUuZ28oJ2FwcCcpO1xyXG4gICAgICB9LDIwMDApO1xyXG4gICAgfWVsc2Uge1xyXG4gICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZSArICcuLi7rqZTsnbgg7Y6Y7J207KeA66GcIOydtOuPme2VqeuLiOuLpC4nO1xyXG4gICAgICAkdGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAgICRzdGF0ZS5nbygnYXBwJyk7XHJcbiAgICAgIH0sMjAwMCk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbn0pXHJcblxyXG4uY29udHJvbGxlcigncmVzZW5kQ3RybCcsIGZ1bmN0aW9uKFVzZXIsICR0aW1lb3V0LCAkc3RhdGUpe1xyXG4gIGFwcCA9IHRoaXM7XHJcbiAgdGhpcy5jaGVja0NyZWRlbnRpYWxzID0gZnVuY3Rpb24obG9naW5EYXRhKXtcclxuICAgIGFwcC5zdWNjZXNzTXNnID0gZmFsc2U7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcblxyXG4gICAgVXNlci5jaGVja0NyZWRlbnRpYWxzKHRoaXMubG9naW5EYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgVXNlci5yZXNlbmRMaW5rKGFwcC5sb2dpbkRhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2UgKyAnLi4u66mU7J24IO2OmOydtOyngOuhnCDsnbTrj5ntlanri4jri6QuJztcclxuICAgICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgICAgICAgICAkc3RhdGUuZ28oJ2FwcCcpO1xyXG4gICAgICAgICAgICB9LDIwMDApO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9ZWxzZSB7XHJcbiAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH07XHJcbn0pXHJcblxyXG4uY29udHJvbGxlcigndXNlcm5hbWVDdHJsJywgZnVuY3Rpb24oVXNlciwgJHRpbWVvdXQsICRzdGF0ZSl7XHJcbiAgdmFyIGFwcCA9IHRoaXM7XHJcbiAgdGhpcy5zZW5kVXNlcm5hbWUgPSBmdW5jdGlvbih1c2VyRGF0YSwgdmFsaWQpe1xyXG4gICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICBhcHAuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgaWYodmFsaWQpe1xyXG4gICAgICBVc2VyLnNlbmRVc2VybmFtZShhcHAudXNlckRhdGEuZW1haWwpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZSArICcuLi7rqZTsnbgg7Y6Y7J207KeA66GcIOydtOuPme2VqeuLiOuLpC4nO1xyXG4gICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAkc3RhdGUuZ28oJ2FwcCcpO1xyXG4gICAgICAgICAgfSwgMjAwMCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICBhcHAuZXJyb3JNc2cgPSAn7Jis67CU66W4IOydtOuplOydvCDso7zshozqsIAg7JWE64uZ64uI64ukLic7XHJcbiAgICB9XHJcbiAgfTtcclxufSlcclxuXHJcbi5jb250cm9sbGVyKCdwYXNzd29yZEN0cmwnLCBmdW5jdGlvbihVc2VyLCAkdGltZW91dCwgJHN0YXRlKXtcclxuICB2YXIgYXBwID0gdGhpcztcclxuICBhcHAuc2VuZFBhc3N3b3JkID0gZnVuY3Rpb24ocmVzZXREYXRhLCB2YWxpZCl7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICBpZih2YWxpZCl7XHJcbiAgICAgIFVzZXIuc2VuZFBhc3N3b3JkKGFwcC5yZXNldERhdGEpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZSArICcuLi7rqZTsnbgg7Y6Y7J207KeA66GcIOydtOuPme2VqeuLiOuLpC4nO1xyXG4gICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAkc3RhdGUuZ28oJ2FwcCcpO1xyXG4gICAgICAgICAgfSwgMjAwMCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICBhcHAuZXJyb3JNc2cgPSAn7Jis67CU66W4IOyVhOydtOuUlOqwgCDslYTri5nri4jri6QuJztcclxuICAgIH1cclxuICB9O1xyXG59KVxyXG5cclxuLmNvbnRyb2xsZXIoJ3Jlc2V0Q3RybCcsIGZ1bmN0aW9uKCRzdGF0ZVBhcmFtcywgJHNjb3BlLCBVc2VyLCAkdGltZW91dCwgJHN0YXRlKXtcclxuICB2YXIgYXBwID0gdGhpcztcclxuXHJcbiAgICBhcHAuaGlkZSA9IHRydWU7IC8vIEhpZGUgZm9ybSB1bnRpbCB0b2tlbiBjYW4gYmUgdmVyaWZpZWQgdG8gYmUgdmFsaWRcclxuXHJcbiAgICAvLyBGdW5jdGlvbiB0byBjaGVjayBpZiB0b2tlbiBpcyB2YWxpZCBhbmQgZ2V0IHRoZSB1c2VyJ3MgaW5mbyBmcm9tIGRhdGFiYXNlIChydW5zIG9uIHBhZ2UgbG9hZClcclxuICAgIFVzZXIucmVzZXRQYXNzd29yZCgkc3RhdGVQYXJhbXMudG9rZW4pLnRoZW4oZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgICAgIC8vIENoZWNrIGlmIHVzZXIgd2FzIHJldHJpZXZlZFxyXG4gICAgICAgIGlmIChkYXRhLmRhdGEuc3VjY2Vzcykge1xyXG4gICAgICAgICAgICBhcHAuaGlkZSA9IGZhbHNlOyAvLyBTaG93IGZvcm1cclxuICAgICAgICAgICAgJHNjb3BlLmFsZXJ0ID0gJ2FsZXJ0IGFsZXJ0LXN1Y2Nlc3MnOyAvLyBTZXQgc3VjY2VzcyBtZXNzYWdlIGNsYXNzXHJcbiAgICAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gJ+yDiOuhnOyatCDruYTrsIDrsojtmLjrpbwg7J6F66Cl7ZW07KO87IS47JqULic7IC8vIExldCB1c2VyIGtub3cgdGhleSBjYW4gZW50ZXIgbmV3IHBhc3N3b3JkXHJcbiAgICAgICAgICAgICRzY29wZS51c2VybmFtZSA9IGRhdGEuZGF0YS51c2VyWzBdLnVzZXJuYW1lOyAvLyBTYXZlIHVzZXJuYW1lIGluIHNjb3BlIGZvciB1c2UgaW4gc2F2ZVBhc3N3b3JkKCkgZnVuY3Rpb25cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAkc2NvcGUuYWxlcnQgPSAnYWxlcnQgYWxlcnQtZGFuZ2VyJzsgLy8gU2V0IHN1Y2Nlc3MgbWVzc2FnZSBjbGFzc1xyXG4gICAgICAgICAgICBhcHAuZXJyb3JNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTsgLy8gR3JhYiBlcnJvciBtZXNzYWdlIGZyb20gSlNPTiBvYmplY3RcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBGdW5jdGlvbiB0byBzYXZlIHVzZXIncyBuZXcgcGFzc3dvcmQgdG8gZGF0YWJhc2VcclxuICAgIGFwcC5zYXZlUGFzc3dvcmQgPSBmdW5jdGlvbihyZWdEYXRhLCB2YWxpZCwgY29uZmlybWVkKSB7XHJcbiAgICAgICAgYXBwLmVycm9yTXNnID0gZmFsc2U7IC8vIENsZWFyIGVycm9yTXNnIHdoZW4gdXNlciBzdWJtaXRzXHJcbiAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBmYWxzZTtcclxuICAgICAgICBhcHAuZGlzYWJsZWQgPSB0cnVlOyAvLyBEaXNhYmxlIGZvcm0gd2hpbGUgcHJvY2Vzc2luZ1xyXG4gICAgICAgIGFwcC5sb2FkaW5nID0gdHJ1ZTsgLy8gRW5hYmxlIGxvYWRpbmcgaWNvblxyXG5cclxuICAgICAgICAvLyBDaGVjayBpZiBmb3JtIGlzIHZhbGlkIGFuZCBwYXNzd29yZHMgbWF0Y2hcclxuICAgICAgICBpZiAodmFsaWQgJiYgY29uZmlybWVkKSB7XHJcbiAgICAgICAgICAgIGFwcC5yZWdEYXRhLnVzZXJuYW1lID0gJHNjb3BlLnVzZXJuYW1lOyAvLyBHcmFiIHVzZXJuYW1lIGZyb20gJHNjb3BlXHJcblxyXG4gICAgICAgICAgICAvLyBSdW4gZnVuY3Rpb24gdG8gc2F2ZSB1c2VyJ3MgbmV3IHBhc3N3b3JkIHRvIGRhdGFiYXNlXHJcbiAgICAgICAgICAgIFVzZXIuc2F2ZVBhc3N3b3JkKGFwcC5yZWdEYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpIHtcclxuICAgICAgICAgICAgICAgIGFwcC5sb2FkaW5nID0gZmFsc2U7IC8vIFN0b3AgbG9hZGluZyBpY29uXHJcbiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBwYXNzd29yZCB3YXMgc2F2ZWQgdG8gZGF0YWJhc2VcclxuICAgICAgICAgICAgICAgIGlmIChkYXRhLmRhdGEuc3VjY2Vzcykge1xyXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5hbGVydCA9ICdhbGVydCBhbGVydC1zdWNjZXNzJzsgLy8gU2V0IHN1Y2Nlc3MgbWVzc2FnZSBjbGFzc1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2UgKyAnLi4u66mU7J24IO2ZlOuptOycvOuhnCDsnbTrj5ntlanri4jri6QuJzsgLy8gR3JhYiBzdWNjZXNzIG1lc3NhZ2UgZnJvbSBKU09OIG9iamVjdCBhbmQgcmVkaXJlY3RcclxuICAgICAgICAgICAgICAgICAgICAvLyBSZWRpcmVjdCB0byBsb2dpbiBwYWdlIGFmdGVyIDIwMDAgbWlsbGlzZWNvbmRzICgyIHNlY29uZHMpXHJcbiAgICAgICAgICAgICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAkc3RhdGUuZ28oJ2FwcCcpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sIDIwMDApO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUuYWxlcnQgPSAnYWxlcnQgYWxlcnQtZGFuZ2VyJzsgLy8gU2V0IHN1Y2Nlc3MgbWVzc2FnZSBjbGFzc1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlOyAvLyBFbmFibGUgZm9ybSB0byBhbGxvdyB1c2VyIHRvIHJlc3VibWl0XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7IC8vIEdyYWIgZXJyb3IgbWVzc2FnZSBmcm9tIEpTT04gb2JqZWN0XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICRzY29wZS5hbGVydCA9ICdhbGVydCBhbGVydC1kYW5nZXInOyAvLyBTZXQgc3VjY2VzcyBtZXNzYWdlIGNsYXNzXHJcbiAgICAgICAgICAgIGFwcC5sb2FkaW5nID0gZmFsc2U7IC8vIFN0b3AgbG9hZGluZyBpY29uXHJcbiAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlOyAvLyBFbmFibGUgZm9ybSB0byBhbGxvdyB1c2VyIHRvIHJlc3VibWl0XHJcbiAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9ICfsmKzrsJTrpbgg7KCV67O066W8IOyeheugpe2VtOyjvOyEuOyalC4nOyAvLyBMZXQgdXNlciBrbm93IGZvcm0gaXMgbm90IHZhbGlkXHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxufSk7XHJcbiIsImFuZ3VsYXIubW9kdWxlKCd1c2VyQ29udHJvbGxlcnMnLFsndXNlclNlcnZpY2VzJ10pXHJcbi5jb250cm9sbGVyKCdyZWdDdHJsJywgZnVuY3Rpb24gKCAkaHR0cCwgJGxvY2F0aW9uLCAkdGltZW91dCwgVXNlciwgQXV0aCwgJHN0YXRlKSB7XHJcbiAgICB2YXIgYXBwID0gdGhpcztcclxuXHJcbiAgICAgIHRoaXMucmVnU3RlcDEgPSBmdW5jdGlvbihyZWdEYXRhKXtcclxuICAgICAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgICAgICBpZighcmVnRGF0YSl7XHJcbiAgICAgICAgICBhcHAuZXJyb3JNc2cgPSAn7JW96rSA7JeQIOuPmeydmO2VtOyVvOunjCDtmozsm5DqsIDsnoXsnYQg7KeE7ZaJ7ZWgIOyImCDsnojsirXri4jri6QuJztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgaWYoKHJlZ0RhdGEudGVybXMpICYmIChyZWdEYXRhLnByaXZhY3kpKSB7XHJcbiAgICAgICAgICAgICAgICBhcHAuc3VjY2Vzc01zZyA9ICfslb3qtIDsl5Ag7ISx6rO17KCB7Jy866GcIOuPmeydmO2VmOyFqOyKteuLiOuLpC4nO1xyXG4gICAgICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICRzdGF0ZS5nbygncmVnaXN0ZXJTdGVwMicpO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9ICfslb3qtIDsl5Ag64+Z7J2Y7ZW07JW866eMIO2ajOybkOqwgOyeheydhCDsp4TtlontlaAg7IiYIOyeiOyKteuLiOuLpC4nO1xyXG4gICAgICAgICAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgfTtcclxuXHJcbiAgICAvLyDtmozsm5DqsIDsnoVcclxuICAgICAgdGhpcy5yZWdTdGVwMiA9IGZ1bmN0aW9uKHJlZ0RhdGEsIHZhbGlkLCBjb25maXJtZWQpe1xyXG4gICAgICAgIGFwcC5lcnJvck1zZyA9IGZhbHNlO1xyXG4gICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcblxyXG4gICAgICAgIGlmKHZhbGlkICYmIGNvbmZpcm1lZCl7XHJcbiAgICAgICAgICBVc2VyLmNyZWF0ZShhcHAucmVnRGF0YSkudGhlbihmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgaWYoZGF0YS5kYXRhLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAgICAgICAkdGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgJChcIiNyZWdpc3RlclwiKS5tb2RhbCgnaGlkZScpO1xyXG4gICAgICAgICAgICAgICAgYXBwLnJlZ0RhdGEgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgYXBwLmlzTG9nZ2VkSW4gPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICRzdGF0ZS5nbygnYXBwJyk7XHJcbiAgICAgICAgICAgICAgfSwzMDAwKTtcclxuICAgICAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgIGFwcC5kaXNhYmxlZCA9IGZhbHNlOyAvLyBJZiBlcnJvciBvY2N1cnMsIHJlbW92ZSBkaXNhYmxlIGxvY2sgZnJvbSBmb3JtXHJcbiAgICAgICAgICAgICBhcHAubG9hZGluZyA9IGZhbHNlOyAvLyBTdG9wIGJvb3RzdHJhcCBsb2FkaW5nIGljb25cclxuICAgICAgICAgICAgIGFwcC5lcnJvck1zZyA9ICfsmKzrsJTrpbgg7KCV67O066W8IOyeheugpe2VtOyjvOyEuOyalC4nOyAvLyBEaXNwbGF5IGVycm9yIGlmIHZhbGlkIHJldHVybnMgZmFsc2VcclxuICAgICAgICB9XHJcblxyXG4gICAgICB9O1xyXG5cclxufSlcclxuXHJcbi5jb250cm9sbGVyKCdwcm9maWxlQ3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgVXNlciwgJHRpbWVvdXQsICRzdGF0ZSwgJGh0dHApe1xyXG4gIHZhciBhcHAgPSB0aGlzO1xyXG5cclxuLy8g6riw67O4IOyCrOyaqeyekCDsoJXrs7Qg6rCA7KC47Jik64qUIO2VqOyImFxyXG4gIHZhciB1c2VybmFtZSA9ICRzY29wZS5tYWluLnVzZXIudXNlcm5hbWU7XHJcbiAgVXNlci5yZWFkUHJvZmlsZXModXNlcm5hbWUpLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgIGFwcC5yZWFkRGF0YSA9IGRhdGEuZGF0YS5wcm9maWxlcztcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFwcC5lcnJvck1zZyA9IGRhdGEuZGF0YS5tZXNzYWdlO1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuXHJcbi8vIOycoOyggCDtlITroZztlYQg7IKs7KeEIOuzgOqyvSDtlajsiJhcclxuICAgIHRoaXMuZmlsZSA9IHt9O1xyXG4gICAgdGhpcy5waG90b0NoYW5nZWQgPSBmdW5jdGlvbihmaWxlcykge1xyXG4gICAgICAgICAgaWYgKGZpbGVzLmxlbmd0aCA+IDAgJiYgZmlsZXNbMF0ubmFtZS5tYXRjaCgvXFwuKHBuZ3xqcGVnfGpwZykkLykpIHtcclxuICAgICAgICAgICAgICB2YXIgZmlsZSA9IGZpbGVzWzBdO1xyXG4gICAgICAgICAgICAgIHZhciBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcclxuICAgICAgICAgICAgICBmaWxlUmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7XHJcbiAgICAgICAgICAgICAgZmlsZVJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgICAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgYXBwLnRodW1ibmFpbCA9IHt9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgYXBwLnRodW1ibmFpbC5kYXRhVXJsID0gZS50YXJnZXQucmVzdWx0O1xyXG4gICAgICAgICAgICAgICAgICAgICAgYXBwLnVwbG9hZGluZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgYXBwLm1lc3NhZ2UgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgYXBwLnRodW1ibmFpbCA9IHt9O1xyXG4gICAgICAgICAgICAgIGFwcC5tZXNzYWdlID0gZmFsc2U7XHJcbiAgICAgICAgICB9XHJcbiAgICAgIH07XHJcblxyXG4vLyDtlITroZztlYQg7J2066+47KeA66W8IOyXheuNsOydtO2KuO2VmOuKlCDtlajsiJhcclxuICAgIHRoaXMudXBkYXRlUHJvZmlsZUltYWdlID0gZnVuY3Rpb24oKXtcclxuICAgICAgYXBwLmVycm9yTXNnID0gZmFsc2U7XHJcbiAgICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICRzY29wZS4kZW1pdCgnTE9BRCcpO1xyXG4gICAgICB2YXIgZmQgPSBuZXcgRm9ybURhdGEoKTtcclxuICAgICAgdmFyIHVzZXJfaWQgPSAkc2NvcGUubWFpbi51c2VyLnVzZXJfaWQ7XHJcbiAgICAgIGZkLmFwcGVuZCgnbXlmaWxlJywgYXBwLmZpbGUudXBsb2FkKTtcclxuICAgICAgICAkaHR0cC5wdXQoJy9hcGkvdXBsb2FkVGVtcC8nK3VzZXJfaWQsICBmZCwge1xyXG4gICAgICAgIHRyYW5zZm9ybVJlcXVlc3Q6IGFuZ3VsYXIuaWRlbnRpdHksXHJcbiAgICAgICAgaGVhZGVyczogeydDb250ZW50LVR5cGUnOiB1bmRlZmluZWR9XHJcbiAgICAgIH0pLnRoZW4oZnVuY3Rpb24oZGF0YSl7XHJcbiAgICAgICAgaWYgKGRhdGEuZGF0YS5zdWNjZXNzKSB7XHJcbiAgICAgICAgICAgICRzY29wZS4kZW1pdCgnVU5MT0FEJyk7XHJcbiAgICAgICAgICAgIGFwcC5zdWNjZXNzTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICAgIGFwcC5maWxlID0ge307XHJcbiAgICAgICAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICAgICAgICB9LCAxMDAwKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAkc2NvcGUuJGVtaXQoJ1VOTE9BRCcpO1xyXG4gICAgICAgICAgICBhcHAuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgICAgIGFwcC5maWxlID0ge307XHJcbiAgICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gIH07XHJcblxyXG4vLyDtlITroZztlYQg7KCV67O0IOuzgOqyvVxyXG4gIHRoaXMudXBkYXRlUHJvZmlsZSA9IGZ1bmN0aW9uKCl7XHJcbiAgICBhcHAuZXJyb3JNc2cgPSBmYWxzZTtcclxuICAgIGFwcC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICBhcHAucmVhZERhdGEudXNlcl9pZCA9ICRzY29wZS5tYWluLnVzZXIudXNlcl9pZDtcclxuICAgIFVzZXIudXBkYXRlUHJvZmlsZXMoYXBwLnJlYWREYXRhKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xyXG4gICAgICBpZihkYXRhLmRhdGEuc3VjY2Vzcyl7XHJcbiAgICAgICAgYXBwLnN1Y2Nlc3NNc2cgPSBkYXRhLmRhdGEubWVzc2FnZTtcclxuICAgICAgICAkdGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAgICAgJHN0YXRlLnJlbG9hZCgpO1xyXG4gICAgICAgIH0sMjAwMCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYXBwLmVycm9yTXNnID0gZGF0YS5kYXRhLm1lc3NhZ2U7XHJcbiAgICAgICAgYXBwLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG59KTtcclxuIl19
